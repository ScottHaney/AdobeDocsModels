<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.16 -->
<document source="/home/parallels/Desktop/code/AdobeDocsModels/after-effects-scripting-guide-master/docs/other/importoptions.rst">
    <target refid="importoptions"></target>
    <section ids="importoptions-object importoptions" names="importoptions\ object importoptions">
        <title>ImportOptions object</title>
        <line_block>
            <line><literal>new ImportOptions();</literal></line>
            <line><literal>new ImportOptions(file);</literal></line>
        </line_block>
        <paragraph><strong>Description</strong></paragraph>
        <paragraph>The ImportOptions object encapsulates the options used to import a file with the <reference internal="True" refuri="../general/project#project-importfile"><inline classes="std std-ref">Project.importFile()</inline></reference> methods.</paragraph>
        <paragraph>The constructor takes an optional parameter, an <reference name="Extendscript File" refuri="https://extendscript.docsforadobe.dev/file-system-access/file-object.html">Extendscript File</reference><target ids="extendscript-file" names="extendscript\ file" refuri="https://extendscript.docsforadobe.dev/file-system-access/file-object.html"></target> object for the file.</paragraph>
        <paragraph>If it is not supplied, you must explicitly set the value of the <literal>file</literal> attribute before using the object with the <literal>importFile</literal> method. For example:</paragraph>
        <literal_block classes="code javascript" force_highlighting="False" language="javascript" linenos="False" xml:space="preserve"><inline classes="keyword">new</inline> <inline classes="name other">ImportOptions</inline><inline classes="punctuation">().</inline><inline classes="name other">file</inline> <inline classes="operator">=</inline> <inline classes="keyword">new</inline> <inline classes="name other">File</inline><inline classes="punctuation">(</inline><inline classes="literal string double">"myfile.psd"</inline><inline classes="punctuation">);</inline></literal_block>
        <transition></transition>
        <section ids="attributes" names="attributes">
            <title>Attributes</title>
            <target refid="importoptions-file"></target>
            <section dupnames="importoptions.file" ids="importoptions-file id1" names="importoptions.file">
                <title>ImportOptions.file</title>
                <paragraph><literal>importOptions.file</literal></paragraph>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>The file to be imported. If a file is set in the constructor, you can access it through this attribute.</paragraph>
                <paragraph><strong>Type</strong></paragraph>
                <paragraph><reference name="Extendscript File" refuri="https://extendscript.docsforadobe.dev/file-system-access/file-object.html">Extendscript File</reference><target dupnames="extendscript\ file" ids="id2" refuri="https://extendscript.docsforadobe.dev/file-system-access/file-object.html"></target> object; read/write.</paragraph>
                <transition></transition>
                <target refid="importoptions-forcealphabetical"></target>
            </section>
            <section dupnames="importoptions.forcealphabetical" ids="importoptions-forcealphabetical id3" names="importoptions.forcealphabetical">
                <title>ImportOptions.forceAlphabetical</title>
                <paragraph><literal>importOptions.forceAlphabetical</literal></paragraph>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>When true, has the same effect as setting the “Force alphabetical order” option in the File &gt; Import &gt; File dialog box.</paragraph>
                <paragraph><strong>Type</strong></paragraph>
                <paragraph>Boolean; read/write.</paragraph>
                <transition></transition>
                <target refid="importoptions-importas"></target>
            </section>
            <section dupnames="importoptions.importas" ids="importoptions-importas id4" names="importoptions.importas">
                <title>ImportOptions.importAs</title>
                <paragraph><literal>importOptions.importAs</literal></paragraph>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>The type of object for which the imported file is to be the source. Before setting, use <reference name="canImportAs" refuri="#importoptions-canimportas">canImportAs</reference><target ids="canimportas" names="canimportas" refuri="#importoptions-canimportas"></target> to check that a given file can be imported as the source of the given object type.</paragraph>
                <paragraph><strong>Type</strong></paragraph>
                <paragraph>An <literal>ImportAsType</literal> enumerated value; read/write. One of:</paragraph>
                <bullet_list bullet="-">
                    <list_item>
                        <paragraph><literal>ImportAsType.COMP_CROPPED_LAYERS</literal></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><literal>ImportAsType.FOOTAGE</literal></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><literal>ImportAsType.COMP</literal></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><literal>ImportAsType.PROJECT</literal></paragraph>
                    </list_item>
                </bullet_list>
                <transition></transition>
                <target refid="importoptions-rangeend"></target>
            </section>
            <section dupnames="importoptions.rangeend" ids="importoptions-rangeend id5" names="importoptions.rangeend">
                <title>ImportOptions.rangeEnd</title>
                <paragraph><literal>importOptions.rangeEnd</literal></paragraph>
                <warning>
                    <paragraph>This method/property is officially undocumented and was found via research. The information here may be inaccurate, and this whole method/property may disappear or stop working some point. Please contribute if you have more information on it!</paragraph>
                </warning>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>Sets the end clipping range of the sequence, that is going to be imported.</paragraph>
                <bullet_list bullet="-">
                    <list_item>
                        <paragraph>Creates ‘missing frames’ (video-bards) if the <literal>rangeEnd</literal> exceeds the duration of the sequence to be imported.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>Has no effect if <reference name="sequence" refuri="#importoptions-sequence">sequence</reference><target ids="sequence" names="sequence" refuri="#importoptions-sequence"></target> is set to false.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>Throws an exception if <reference name="forceAlphabetical" refuri="#importoptions-forcealphabetical">forceAlphabetical</reference><target ids="forcealphabetical" names="forcealphabetical" refuri="#importoptions-forcealphabetical"></target> is set to true.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>Throws an exception if <literal>rangeEnd</literal> is less then <reference name="rangeStart" refuri="#importoptions-rangestart">rangeStart</reference><target ids="rangestart" names="rangestart" refuri="#importoptions-rangestart"></target> and resets the range to include all the files.</paragraph>
                    </list_item>
                </bullet_list>
                <paragraph><strong>Type</strong></paragraph>
                <paragraph>Integer; read/write.</paragraph>
                <transition></transition>
                <target refid="importoptions-rangestart"></target>
            </section>
            <section dupnames="importoptions.rangestart" ids="importoptions-rangestart id6" names="importoptions.rangestart">
                <title>ImportOptions.rangeStart</title>
                <paragraph><literal>importOptions.rangeStart</literal></paragraph>
                <warning>
                    <paragraph>This method/property is officially undocumented and was found via research. The information here may be inaccurate, and this whole method/property may disappear or stop working some point. Please contribute if you have more information on it!</paragraph>
                </warning>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>Sets the start clipping range of the sequence, that is going to be imported.</paragraph>
                <bullet_list bullet="-">
                    <list_item>
                        <paragraph>Has no effect if <reference name="sequence" refuri="#importoptions-sequence">sequence</reference><target dupnames="sequence" ids="id7" refuri="#importoptions-sequence"></target> is set to false.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>Throws an exception if <reference name="forceAlphabetical" refuri="#importoptions-forcealphabetical">forceAlphabetical</reference><target dupnames="forcealphabetical" ids="id8" refuri="#importoptions-forcealphabetical"></target> is set to true.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>Throws an exception if <reference name="rangeEnd" refuri="#importoptions-rangeend">rangeEnd</reference><target ids="rangeend" names="rangeend" refuri="#importoptions-rangeend"></target> value is 0.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>Throws an exception if <literal>rangeStart</literal> is greater then <reference name="rangeEnd" refuri="#importoptions-rangeend">rangeEnd</reference><target dupnames="rangeend" ids="id9" refuri="#importoptions-rangeend"></target> and resets the range to include all the files.</paragraph>
                    </list_item>
                </bullet_list>
                <paragraph><strong>Type</strong></paragraph>
                <paragraph>Integer; read/write.</paragraph>
                <paragraph><strong>Example</strong></paragraph>
                <literal_block classes="code javascript" force_highlighting="False" language="javascript" linenos="False" xml:space="preserve"><inline classes="comment multiline">/*
  Import 20 frames of the sequence, starting at frame 10 and ending at frame 30
 */</inline>
<inline classes="keyword declaration">var</inline> <inline classes="name other">mySequence</inline> <inline classes="operator">=</inline> <inline classes="literal string single">'~/Desktop/sequence/image_000.png'</inline><inline classes="punctuation">;</inline>

<inline classes="keyword declaration">var</inline> <inline classes="name other">importOptions</inline> <inline classes="operator">=</inline> <inline classes="keyword">new</inline> <inline classes="name other">ImportOptions</inline><inline classes="punctuation">();</inline>
<inline classes="name other">importOptions</inline><inline classes="punctuation">.</inline><inline classes="name other">file</inline> <inline classes="operator">=</inline> <inline classes="keyword">new</inline> <inline classes="name other">File</inline><inline classes="punctuation">(</inline><inline classes="name other">mySequence</inline><inline classes="punctuation">);</inline>
<inline classes="name other">importOptions</inline><inline classes="punctuation">.</inline><inline classes="name other">sequence</inline> <inline classes="operator">=</inline> <inline classes="keyword constant">true</inline><inline classes="punctuation">;</inline>
<inline classes="name other">importOptions</inline><inline classes="punctuation">.</inline><inline classes="name other">forceAlphabetical</inline> <inline classes="operator">=</inline> <inline classes="keyword constant">false</inline><inline classes="punctuation">;</inline>
<inline classes="name other">importOptions</inline><inline classes="punctuation">.</inline><inline classes="name other">rangeStart</inline> <inline classes="operator">=</inline> <inline classes="literal number integer">10</inline><inline classes="punctuation">;</inline>
<inline classes="name other">importOptions</inline><inline classes="punctuation">.</inline><inline classes="name other">rangeEnd</inline> <inline classes="operator">=</inline> <inline classes="literal number integer">30</inline><inline classes="punctuation">;</inline>

<inline classes="keyword declaration">var</inline> <inline classes="name other">item</inline> <inline classes="operator">=</inline> <inline classes="name other">app</inline><inline classes="punctuation">.</inline><inline classes="name other">project</inline><inline classes="punctuation">.</inline><inline classes="name other">importFile</inline><inline classes="punctuation">(</inline><inline classes="name other">importOptions</inline><inline classes="punctuation">);</inline></literal_block>
                <transition></transition>
                <target refid="importoptions-sequence"></target>
            </section>
            <section dupnames="importoptions.sequence" ids="importoptions-sequence id10" names="importoptions.sequence">
                <title>ImportOptions.sequence</title>
                <paragraph><literal>importOptions.sequence</literal></paragraph>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>When true, a sequence is imported; otherwise, an individual file is imported.</paragraph>
                <paragraph><strong>Type</strong></paragraph>
                <paragraph>Boolean; read/write.</paragraph>
            </section>
        </section>
        <transition></transition>
        <section ids="methods" names="methods">
            <title>Methods</title>
            <target refid="importoptions-canimportas"></target>
            <section ids="importoptions-canimportas id11" names="importoptions.canimportas() importoptions.canimportas">
                <title>ImportOptions.canImportAs()</title>
                <paragraph><literal>importOptions.canImportAs(type)</literal></paragraph>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>Reports whether the file can be imported as the source of a particular object type. If this method returns true, you can set the given type as the value of the <reference internal="True" refid="importoptions-importas"><inline classes="std std-ref">importAs</inline></reference> attribute.</paragraph>
                <paragraph><strong>Parameters</strong></paragraph>
                <table>
                    <tgroup cols="2">
                        <colspec colwidth="8"></colspec>
                        <colspec colwidth="69"></colspec>
                        <tbody>
                            <row>
                                <entry>
                                    <paragraph><literal>type</literal></paragraph>
                                </entry>
                                <entry>
                                    <paragraph>The type of file that can be imported. An <literal>ImportAsType</literal> enumerated
                                        value; one of:</paragraph>
                                    <bullet_list bullet="-">
                                        <list_item>
                                            <paragraph><literal>ImportAsType.COMP</literal></paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal>ImportAsType.FOOTAGE</literal></paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal>ImportAsType.COMP_CROPPED_LAYERS</literal></paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal>ImportAsType.PROJECT</literal></paragraph>
                                        </list_item>
                                    </bullet_list>
                                </entry>
                            </row>
                        </tbody>
                    </tgroup>
                </table>
                <paragraph><strong>Returns</strong></paragraph>
                <paragraph>Boolean.</paragraph>
                <paragraph><strong>Example</strong></paragraph>
                <literal_block classes="code javascript" force_highlighting="False" language="javascript" linenos="False" xml:space="preserve"><inline classes="keyword declaration">var</inline> <inline classes="name other">io</inline> <inline classes="operator">=</inline> <inline classes="keyword">new</inline> <inline classes="name other">ImportOptions</inline><inline classes="punctuation">(</inline><inline classes="keyword">new</inline> <inline classes="name other">File</inline><inline classes="punctuation">(</inline><inline classes="literal string double">"c:\\myFile.psd"</inline><inline classes="punctuation">));</inline>
<inline classes="keyword">if</inline> <inline classes="punctuation">(</inline><inline classes="name other">io</inline><inline classes="punctuation">.</inline><inline classes="name other">canImportAs</inline><inline classes="punctuation">(</inline><inline classes="name other">ImportAsType</inline><inline classes="punctuation">.</inline><inline classes="name other">COMP</inline><inline classes="punctuation">))</inline> <inline classes="punctuation">{</inline>
    <inline classes="name other">io</inline><inline classes="punctuation">.</inline><inline classes="name other">importAs</inline> <inline classes="operator">=</inline> <inline classes="name other">ImportAsType</inline><inline classes="punctuation">.</inline><inline classes="name other">COMP</inline><inline classes="punctuation">;</inline>
<inline classes="punctuation">}</inline></literal_block>
                <transition></transition>
                <target refid="importoptions-isfilenamenumbered"></target>
            </section>
            <section ids="importoptions-isfilenamenumbered id12" names="importoptions.isfilenamenumbered() importoptions.isfilenamenumbered">
                <title>ImportOptions.isFileNameNumbered()</title>
                <paragraph><literal>importOptions.isFileNameNumbered(file)</literal></paragraph>
                <warning>
                    <paragraph>This method/property is officially undocumented and was found via research. The information here may be inaccurate, and this whole method/property may disappear or stop working some point. Please contribute if you have more information on it!</paragraph>
                </warning>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>Reports whether the file object is numbered, i.e. file name has a digit.</paragraph>
                <paragraph><strong>Parameters</strong></paragraph>
                <table>
                    <tgroup cols="2">
                        <colspec colwidth="8"></colspec>
                        <colspec colwidth="104"></colspec>
                        <tbody>
                            <row>
                                <entry>
                                    <paragraph><literal>file</literal></paragraph>
                                </entry>
                                <entry>
                                    <paragraph><reference name="Extendscript File" refuri="https://extendscript.docsforadobe.dev/file-system-access/file-object.html">Extendscript File</reference><target dupnames="extendscript\ file" ids="id13" refuri="https://extendscript.docsforadobe.dev/file-system-access/file-object.html"></target> object.</paragraph>
                                </entry>
                            </row>
                        </tbody>
                    </tgroup>
                </table>
                <paragraph><strong>Returns</strong></paragraph>
                <paragraph>Object, containing 2 keys:</paragraph>
                <bullet_list bullet="-">
                    <list_item>
                        <paragraph><literal>isNumbered</literal>: Boolean; wether the file name contains any digit,</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><literal>num</literal>: Integer; a number found in file name. Returns 0 when <literal>isNumbered</literal> is false.</paragraph>
                    </list_item>
                </bullet_list>
                <paragraph><strong>Example</strong></paragraph>
                <literal_block classes="code javascript" force_highlighting="False" language="javascript" linenos="False" xml:space="preserve"><inline classes="keyword declaration">var</inline> <inline classes="name other">importOptions</inline> <inline classes="operator">=</inline> <inline classes="keyword">new</inline> <inline classes="name other">ImportOptions</inline><inline classes="punctuation">();</inline>
<inline classes="name other">importOptions</inline><inline classes="punctuation">.</inline><inline classes="name other">isFileNameNumbered</inline><inline classes="punctuation">(</inline><inline classes="literal string single">'image.png'</inline><inline classes="punctuation">);</inline>     <inline classes="comment single">// "isNumbered": false, "num": 0
</inline><inline classes="name other">importOptions</inline><inline classes="punctuation">.</inline><inline classes="name other">isFileNameNumbered</inline><inline classes="punctuation">(</inline><inline classes="literal string single">'003image.png'</inline><inline classes="punctuation">);</inline>  <inline classes="comment single">// "isNumbered": true, "num": 3
</inline><inline classes="name other">importOptions</inline><inline classes="punctuation">.</inline><inline classes="name other">isFileNameNumbered</inline><inline classes="punctuation">(</inline><inline classes="literal string single">'ima0102ge.png'</inline><inline classes="punctuation">);</inline> <inline classes="comment single">// "isNumbered": true, "num": 102
</inline><inline classes="name other">importOptions</inline><inline classes="punctuation">.</inline><inline classes="name other">isFileNameNumbered</inline><inline classes="punctuation">(</inline><inline classes="literal string single">'image0120.png'</inline><inline classes="punctuation">);</inline> <inline classes="comment single">// "isNumbered": true, "num": 120</inline></literal_block>
            </section>
        </section>
    </section>
</document>

<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.16 -->
<document source="/home/parallels/Desktop/code/AdobeDocsModels/after-effects-scripting-guide-master/docs/layers/avlayer.rst">
    <target refid="avlayer"></target>
    <section ids="avlayer-object avlayer" names="avlayer\ object avlayer">
        <title>AVLayer object</title>
        <paragraph><literal>app.project.item(index).layer(index)</literal></paragraph>
        <paragraph><strong>Description</strong></paragraph>
        <paragraph>The AVLayer object provides an interface to those layers that contain AVItem objects (composition layers, footage layers, solid layers, text layers, and sound layers).</paragraph>
        <block_quote>
            <paragraph>AVLayer is a subclass of <reference internal="True" refuri="layer#layer"><inline classes="std std-ref">Layer object</inline></reference>. All methods and attributes of Layer, in addition to those listed below, are available when working with AVLayer.</paragraph>
            <paragraph>AVLayer is a base class for <reference internal="True" refuri="textlayer#textlayer"><inline classes="std std-ref">TextLayer object</inline></reference>, so AVLayer attributes and methods are available when working with TextLayer objects.</paragraph>
        </block_quote>
        <paragraph><strong>AE Properties</strong></paragraph>
        <paragraph>Different types of layers have different AE properties. AVLayer has the following properties and property groups:</paragraph>
        <bullet_list bullet="-">
            <list_item>
                <paragraph>Marker</paragraph>
            </list_item>
            <list_item>
                <paragraph>Time Remap</paragraph>
            </list_item>
            <list_item>
                <paragraph>Motion Trackers</paragraph>
            </list_item>
            <list_item>
                <paragraph>Masks</paragraph>
            </list_item>
            <list_item>
                <paragraph>Effects</paragraph>
            </list_item>
            <list_item>
                <paragraph>Transform</paragraph>
                <bullet_list bullet="-">
                    <list_item>
                        <paragraph>Anchor Point</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>Position</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>Scale</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>Orientation</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>X Rotation</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>Y Rotation</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>Rotation</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>Opacity</paragraph>
                    </list_item>
                </bullet_list>
            </list_item>
            <list_item>
                <paragraph>Layer Styles</paragraph>
            </list_item>
            <list_item>
                <paragraph>Geometry Options // Ray-traced 3D</paragraph>
            </list_item>
            <list_item>
                <paragraph>Material Options</paragraph>
                <bullet_list bullet="-">
                    <list_item>
                        <paragraph>Casts Shadows</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>Light Transmission</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>Accepts Shadows</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>Accepts Lights</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>Appears in Reflections // Ray-traced 3D</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>Ambient</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>Diffuse</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>Specular Intensity</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>Specular Shininess</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>Metal</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>Reflection Intensity // Ray-traced 3D</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>Reflection Sharpness // Ray-traced 3D</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>Reflection Rolloff // Ray-traced 3D</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>Transparency // Ray-traced 3D</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>Transparency Rolloff // Ray-traced 3D</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>Index of Refraction // Ray-traced 3D</paragraph>
                    </list_item>
                </bullet_list>
            </list_item>
            <list_item>
                <paragraph>Audio</paragraph>
                <bullet_list bullet="-">
                    <list_item>
                        <paragraph>AudioLevels</paragraph>
                    </list_item>
                </bullet_list>
            </list_item>
        </bullet_list>
        <paragraph><strong>Example</strong></paragraph>
        <paragraph>If the first item in the project is a CompItem, and the first layer of that CompItem is an AVLayer, the following sets the layer <literal>quality</literal>, <literal>startTime</literal>, and <literal>inPoint</literal>.</paragraph>
        <literal_block classes="code javascript" force_highlighting="False" language="javascript" linenos="False" xml:space="preserve"><inline classes="keyword declaration">var</inline> <inline classes="name other">firstLayer</inline> <inline classes="operator">=</inline> <inline classes="name other">app</inline><inline classes="punctuation">.</inline><inline classes="name other">project</inline><inline classes="punctuation">.</inline><inline classes="name other">item</inline><inline classes="punctuation">(</inline><inline classes="literal number integer">1</inline><inline classes="punctuation">).</inline><inline classes="name other">layer</inline><inline classes="punctuation">(</inline><inline classes="literal number integer">1</inline><inline classes="punctuation">);</inline>
<inline classes="name other">firstLayer</inline><inline classes="punctuation">.</inline><inline classes="name other">quality</inline> <inline classes="operator">=</inline> <inline classes="name other">LayerQuality</inline><inline classes="punctuation">.</inline><inline classes="name other">BEST</inline><inline classes="punctuation">;</inline>
<inline classes="name other">firstLayer</inline><inline classes="punctuation">.</inline><inline classes="name other">startTime</inline> <inline classes="operator">=</inline> <inline classes="literal number integer">1</inline><inline classes="punctuation">;</inline>
<inline classes="name other">firstLayer</inline><inline classes="punctuation">.</inline><inline classes="name other">inPoint</inline> <inline classes="operator">=</inline> <inline classes="literal number integer">2</inline><inline classes="punctuation">;</inline></literal_block>
        <transition></transition>
        <section ids="attributes" names="attributes">
            <title>Attributes</title>
            <target refid="avlayer-adjustmentlayer"></target>
            <section dupnames="avlayer.adjustmentlayer" ids="avlayer-adjustmentlayer id1" names="avlayer.adjustmentlayer">
                <title>AVLayer.adjustmentLayer</title>
                <paragraph><literal>app.project.item(index).layer(index).adjustmentLayer</literal></paragraph>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>True if the layer is an adjustment layer.</paragraph>
                <paragraph><strong>Type</strong></paragraph>
                <paragraph>Boolean; read/write.</paragraph>
                <transition></transition>
                <target refid="avlayer-audioactive"></target>
            </section>
            <section dupnames="avlayer.audioactive" ids="avlayer-audioactive id2" names="avlayer.audioactive">
                <title>AVLayer.audioActive</title>
                <paragraph><literal>app.project.item(index).layer(index).audioActive</literal></paragraph>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>True if the layerâ€™s audio is active at the current time. For this value to be true, <literal>audioEnabled</literal> must be true, no other layer with audio may be soloing unless this layer is soloed too, and the time must be between the <literal>inPoint</literal>
                    and <literal>outPoint</literal> of this layer.</paragraph>
                <paragraph><strong>Type</strong></paragraph>
                <paragraph>Boolean; read-only.</paragraph>
                <transition></transition>
                <target refid="avlayer-audioenabled"></target>
            </section>
            <section dupnames="avlayer.audioenabled" ids="avlayer-audioenabled id3" names="avlayer.audioenabled">
                <title>AVLayer.audioEnabled</title>
                <paragraph><literal>app.project.item(index).layer(index).audioEnabled</literal></paragraph>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>When true, the layerâ€™s audio is enabled. This value corresponds to the audio toggle switch in the Timeline panel.</paragraph>
                <paragraph><strong>Type</strong></paragraph>
                <paragraph>Boolean; read/write.</paragraph>
                <transition></transition>
                <target refid="avlayer-blendingmode"></target>
            </section>
            <section dupnames="avlayer.blendingmode" ids="avlayer-blendingmode id4" names="avlayer.blendingmode">
                <title>AVLayer.blendingMode</title>
                <paragraph><literal>app.project.item(index).layer(index).blendingMode</literal></paragraph>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>The blending mode of the layer.</paragraph>
                <paragraph><strong>Type</strong></paragraph>
                <paragraph>A BlendingMode enumerated value; read/write. One of:</paragraph>
                <bullet_list bullet="-">
                    <list_item>
                        <paragraph><literal>BlendingMode.ADD</literal></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><literal>BlendingMode.ALPHA_ADD</literal></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><literal>BlendingMode.CLASSIC_COLOR_BURN</literal></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><literal>BlendingMode.CLASSIC_COLOR_DODGE</literal></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><literal>BlendingMode.CLASSIC_DIFFERENCE</literal></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><literal>BlendingMode.COLOR</literal></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><literal>BlendingMode.COLOR_BURN</literal></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><literal>BlendingMode.COLOR_DODGE</literal></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><literal>BlendingMode.DANCING_DISSOLVE</literal></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><literal>BlendingMode.DARKEN</literal></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><literal>BlendingMode.DARKER_COLOR</literal></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><literal>BlendingMode.DIFFERENCE</literal></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><literal>BlendingMode.DISSOLVE</literal></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><literal>BlendingMode.DIVIDE</literal></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><literal>BlendingMode.EXCLUSION</literal></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><literal>BlendingMode.HARD_LIGHT</literal></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><literal>BlendingMode.HARD_MIX</literal></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><literal>BlendingMode.HUE</literal></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><literal>BlendingMode.LIGHTEN</literal></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><literal>BlendingMode.LIGHTER_COLOR</literal></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><literal>BlendingMode.LINEAR_BURN</literal></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><literal>BlendingMode.LINEAR_DODGE</literal></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><literal>BlendingMode.LINEAR_LIGHT</literal></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><literal>BlendingMode.LUMINESCENT_PREMUL</literal></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><literal>BlendingMode.LUMINOSITY</literal></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><literal>BlendingMode.MULTIPLY</literal></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><literal>BlendingMode.NORMAL</literal></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><literal>BlendingMode.OVERLAY</literal></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><literal>BlendingMode.PIN_LIGHT</literal></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><literal>BlendingMode.SATURATION</literal></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><literal>BlendingMode.SCREEN</literal></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><literal>BlendingMode.SUBTRACT</literal></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><literal>BlendingMode.SILHOUETE_ALPHA</literal> - note the mispelling of â€˜SILHOUETTEâ€™!</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><literal>BlendingMode.SILHOUETTE_LUMA</literal></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><literal>BlendingMode.SOFT_LIGHT</literal></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><literal>BlendingMode.STENCIL_ALPHA</literal></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><literal>BlendingMode.STENCIL_LUMA</literal></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><literal>BlendingMode.SUBTRACT</literal></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><literal>BlendingMode.VIVID_LIGHT</literal></paragraph>
                    </list_item>
                </bullet_list>
                <transition></transition>
                <target refid="avlayer-cansetcollapsetransformation"></target>
            </section>
            <section dupnames="avlayer.cansetcollapsetransformation" ids="avlayer-cansetcollapsetransformation id5" names="avlayer.cansetcollapsetransformation">
                <title>AVLayer.canSetCollapseTransformation</title>
                <paragraph><literal>app.project.item(index).layer(index).canSetCollapseTransformation</literal></paragraph>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>True if it is legal to change the value of the <literal>collapseTransformation</literal> attribute on this layer.</paragraph>
                <paragraph><strong>Type</strong></paragraph>
                <paragraph>Boolean; read-only.</paragraph>
                <transition></transition>
                <target refid="avlayer-cansettimeremapenabled"></target>
            </section>
            <section dupnames="avlayer.cansettimeremapenabled" ids="avlayer-cansettimeremapenabled id6" names="avlayer.cansettimeremapenabled">
                <title>AVLayer.canSetTimeRemapEnabled</title>
                <paragraph><literal>app.project.item(index).layer(index).canSetTimeRemapEnabled</literal></paragraph>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>True if it is legal to change the value of the <literal>timeRemapEnabled</literal> attribute on this layer.</paragraph>
                <paragraph><strong>Type</strong></paragraph>
                <paragraph>Boolean; read-only.</paragraph>
                <transition></transition>
                <target refid="avlayer-collapsetransformation"></target>
            </section>
            <section dupnames="avlayer.collapsetransformation" ids="avlayer-collapsetransformation id7" names="avlayer.collapsetransformation">
                <title>AVLayer.collapseTransformation</title>
                <paragraph><literal>app.project.item(index).layer(index).collapseTransformation</literal></paragraph>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>True if collapse transformation is on for this layer.</paragraph>
                <paragraph><strong>Type</strong></paragraph>
                <paragraph>Boolean; read/write.</paragraph>
                <transition></transition>
                <target refid="avlayer-effectsactive"></target>
            </section>
            <section dupnames="avlayer.effectsactive" ids="avlayer-effectsactive id8" names="avlayer.effectsactive">
                <title>AVLayer.effectsActive</title>
                <paragraph><literal>app.project.item(index).layer(index).effectsActive</literal></paragraph>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>True if the layerâ€™s effects are active, as indicated by the <literal>&lt;f&gt;</literal> icon next to it in the user interface.</paragraph>
                <paragraph><strong>Type</strong></paragraph>
                <paragraph>Boolean; read/write.</paragraph>
                <transition></transition>
                <target refid="avlayer-environmentlayer"></target>
            </section>
            <section dupnames="avlayer.environmentlayer" ids="avlayer-environmentlayer id9" names="avlayer.environmentlayer">
                <title>AVLayer.environmentLayer</title>
                <paragraph><literal>app.project.item(index).layer(index).environmentLayer</literal></paragraph>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>True if this is an environment layer in a Ray-traced 3D composition. Setting this attribute to true automatically makes the layer 3D (<literal>threeDLayer</literal> becomes true).</paragraph>
                <paragraph><strong>Type</strong></paragraph>
                <paragraph>Boolean; read/write.</paragraph>
                <transition></transition>
                <target refid="avlayer-frameblending"></target>
            </section>
            <section dupnames="avlayer.frameblending" ids="avlayer-frameblending id10" names="avlayer.frameblending">
                <title>AVLayer.frameBlending</title>
                <paragraph><literal>app.project.item(index).layer(index).frameBlending</literal></paragraph>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>True if frame blending is enabled for the layer.</paragraph>
                <paragraph><strong>Type</strong></paragraph>
                <paragraph>Boolean; read-only.</paragraph>
                <transition></transition>
                <target refid="avlayer-frameblendingtype"></target>
            </section>
            <section dupnames="avlayer.frameblendingtype" ids="avlayer-frameblendingtype id11" names="avlayer.frameblendingtype">
                <title>AVLayer.frameBlendingType</title>
                <paragraph><literal>app.project.item(index).layer(index).frameBlendingType</literal></paragraph>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>The type of frame blending to perform when frame blending is enabled for the layer.</paragraph>
                <paragraph><strong>Type</strong></paragraph>
                <paragraph>A FrameBlendingType enumerated value; read/write. One of:</paragraph>
                <bullet_list bullet="-">
                    <list_item>
                        <paragraph><literal>FrameBlendingType.FRAME_MIX</literal></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><literal>FrameBlendingType.NO_FRAME_BLEND</literal></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><literal>FrameBlendingType.PIXEL_MOTION</literal></paragraph>
                    </list_item>
                </bullet_list>
                <transition></transition>
                <target refid="avlayer-guidelayer"></target>
            </section>
            <section dupnames="avlayer.guidelayer" ids="avlayer-guidelayer id12" names="avlayer.guidelayer">
                <title>AVLayer.guideLayer</title>
                <paragraph><literal>app.project.item(index).layer(index).guideLayer</literal></paragraph>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>True if the layer is a guide layer.</paragraph>
                <paragraph><strong>Type</strong></paragraph>
                <paragraph>Boolean; read/write.</paragraph>
                <transition></transition>
                <target refid="avlayer-hasaudio"></target>
            </section>
            <section dupnames="avlayer.hasaudio" ids="avlayer-hasaudio id13" names="avlayer.hasaudio">
                <title>AVLayer.hasAudio</title>
                <paragraph><literal>app.project.item(index).layer(index).hasAudio</literal></paragraph>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>True if the layer contains an audio component, regardless of whether it is audio-enabled or soloed.</paragraph>
                <paragraph><strong>Type</strong></paragraph>
                <paragraph>Boolean; read-only.</paragraph>
                <transition></transition>
                <target refid="avlayer-hastrackmatte"></target>
            </section>
            <section dupnames="avlayer.hastrackmatte" ids="avlayer-hastrackmatte id14" names="avlayer.hastrackmatte">
                <title>AVLayer.hasTrackMatte</title>
                <paragraph><literal>app.project.item(index).layer(index).hasTrackMatte</literal></paragraph>
                <note>
                    <paragraph>This functionality was updated in After Effects 23.0. Track Matte is no longer dependent on layer order.</paragraph>
                </note>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>True if this layer has track matte. When true, this layerâ€™s <literal>trackMatteType</literal> value controls how the matte is applied.
                    See <reference internal="True" refid="avlayer-trackmattetype"><inline classes="std std-ref">AVLayer.trackMatteType</inline></reference> for available track matte types.</paragraph>
                <paragraph><strong>Type</strong></paragraph>
                <paragraph>Boolean; read-only.</paragraph>
                <transition></transition>
                <target refid="avlayer-height"></target>
            </section>
            <section dupnames="avlayer.height" ids="avlayer-height id15" names="avlayer.height">
                <title>AVLayer.height</title>
                <paragraph><literal>app.project.item(index).layer(index).height</literal></paragraph>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>The height of the layer in pixels.</paragraph>
                <paragraph><strong>Type</strong></paragraph>
                <paragraph>Floating-point; read-only.</paragraph>
                <transition></transition>
                <target refid="avlayer-isnamefromsource"></target>
            </section>
            <section dupnames="avlayer.isnamefromsource" ids="avlayer-isnamefromsource id16" names="avlayer.isnamefromsource">
                <title>AVLayer.isNameFromSource</title>
                <paragraph><literal>app.project.item(index).layer(index).isNameFromSource</literal></paragraph>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>True if the layer has no expressly set name, but contains a named source. In this case, <literal>layer.name</literal> has the same value as <literal>layer.source.name</literal>. False if the layer has an expressly set name, or if the layer does not have a source.</paragraph>
                <paragraph><strong>Type</strong></paragraph>
                <paragraph>Boolean; read-only.</paragraph>
                <transition></transition>
                <target refid="avlayer-istrackmatte"></target>
            </section>
            <section dupnames="avlayer.istrackmatte" ids="avlayer-istrackmatte id17" names="avlayer.istrackmatte">
                <title>AVLayer.isTrackMatte</title>
                <paragraph><literal>app.project.item(index)layer(index).isTrackMatte</literal></paragraph>
                <note>
                    <paragraph>This functionality was updated in After Effects 23.0. Track Matte is no longer dependent on layer order.</paragraph>
                </note>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>True if this layer is being used as a track matte.</paragraph>
                <paragraph><strong>Type</strong></paragraph>
                <paragraph>Boolean; read-only.</paragraph>
                <transition></transition>
                <target refid="avlayer-motionblur"></target>
            </section>
            <section dupnames="avlayer.motionblur" ids="avlayer-motionblur id18" names="avlayer.motionblur">
                <title>AVLayer.motionBlur</title>
                <paragraph><literal>app.project.item(index).layer(index).motionBlur</literal></paragraph>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>True if motion blur is enabled for the layer.</paragraph>
                <paragraph><strong>Type</strong></paragraph>
                <paragraph>Boolean; read/write.</paragraph>
                <transition></transition>
                <target refid="avlayer-preservetransparency"></target>
            </section>
            <section dupnames="avlayer.preservetransparency" ids="avlayer-preservetransparency id19" names="avlayer.preservetransparency">
                <title>AVLayer.preserveTransparency</title>
                <paragraph><literal>app.project.item(index).layer(index).preserveTransparency</literal></paragraph>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>True if preserve transparency is enabled for the layer.</paragraph>
                <paragraph><strong>Type</strong></paragraph>
                <paragraph>Boolean; read/write.</paragraph>
                <transition></transition>
                <target refid="avlayer-quality"></target>
            </section>
            <section dupnames="avlayer.quality" ids="avlayer-quality id20" names="avlayer.quality">
                <title>AVLayer.quality</title>
                <paragraph><literal>app.project.item(index).layer(index).quality</literal></paragraph>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>The quality with which this layer is displayed.</paragraph>
                <paragraph><strong>Type</strong></paragraph>
                <paragraph>A <literal>LayerQuality</literal> enumerated value; read/write. One of:</paragraph>
                <bullet_list bullet="-">
                    <list_item>
                        <paragraph><literal>LayerQuality.BEST</literal></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><literal>LayerQuality.DRAFT</literal></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><literal>LayerQuality.WIREFRAME</literal></paragraph>
                    </list_item>
                </bullet_list>
                <transition></transition>
                <target refid="avlayer-samplingquality"></target>
            </section>
            <section dupnames="avlayer.samplingquality" ids="avlayer-samplingquality id21" names="avlayer.samplingquality">
                <title>AVLayer.samplingQuality</title>
                <paragraph><literal>app.project.item(index).layer(index).samplingQuality</literal></paragraph>
                <note>
                    <paragraph>This functionality was added in After Effects 12.0 (CC)</paragraph>
                </note>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>Set/get layer sampling method (bicubic or bilinear)</paragraph>
                <paragraph><strong>Type</strong></paragraph>
                <paragraph>A <literal>LayerSamplingQuality</literal> enumerated value; read/write. One of:</paragraph>
                <bullet_list bullet="-">
                    <list_item>
                        <paragraph><literal>LayerSamplingQuality.BICUBIC</literal></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><literal>LayerSamplingQuality.BILINEAR</literal></paragraph>
                    </list_item>
                </bullet_list>
                <transition></transition>
                <target refid="avlayer-source"></target>
            </section>
            <section dupnames="avlayer.source" ids="avlayer-source id22" names="avlayer.source">
                <title>AVLayer.source</title>
                <paragraph><literal>app.project.item(index).layer(index).source</literal></paragraph>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>The source AVItem for this layer. The value is null in a Text layer. Use <literal>AVLayer.replaceSource()</literal> to change the value.</paragraph>
                <paragraph><strong>Type</strong></paragraph>
                <paragraph>AVItem object; read-only.</paragraph>
                <transition></transition>
                <target refid="avlayer-threedlayer"></target>
            </section>
            <section dupnames="avlayer.threedlayer" ids="avlayer-threedlayer id23" names="avlayer.threedlayer">
                <title>AVLayer.threeDLayer</title>
                <paragraph><literal>app.project.item(index).layer(index).threeDLayer</literal></paragraph>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>True if this is a 3D layer.</paragraph>
                <paragraph><strong>Type</strong></paragraph>
                <paragraph>Boolean; read/write.</paragraph>
                <transition></transition>
                <target refid="avlayer-threedperchar"></target>
            </section>
            <section dupnames="avlayer.threedperchar" ids="avlayer-threedperchar id24" names="avlayer.threedperchar">
                <title>AVLayer.threeDPerChar</title>
                <paragraph><literal>app.project.item(index).layer(index).threeDPerChar</literal></paragraph>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph><literal>True</literal> if this layer has the Enable Per-character 3D switch set, allowing its characters to be animated off the plane of the text layer. Applies only to text layers.</paragraph>
                <paragraph><strong>Type</strong></paragraph>
                <paragraph>Boolean; read/write.</paragraph>
                <transition></transition>
                <target refid="avlayer-timeremapenabled"></target>
            </section>
            <section dupnames="avlayer.timeremapenabled" ids="avlayer-timeremapenabled id25" names="avlayer.timeremapenabled">
                <title>AVLayer.timeRemapEnabled</title>
                <paragraph><literal>app.project.item(index).layer(index).timeRemapEnabled</literal></paragraph>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>True if time remapping is enabled for this layer.</paragraph>
                <paragraph><strong>Type</strong></paragraph>
                <paragraph>Boolean; read/write.</paragraph>
                <transition></transition>
                <target refid="avlayer-trackmattelayer"></target>
            </section>
            <section dupnames="avlayer.trackmattelayer" ids="avlayer-trackmattelayer id26" names="avlayer.trackmattelayer">
                <title>AVLayer.trackMatteLayer</title>
                <paragraph><literal>app.project.item(index).layer(index).trackMatteLayer</literal></paragraph>
                <note>
                    <paragraph>This functionality was added in After Effects 23.0</paragraph>
                </note>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>Returns the track matte layer for this layer. Returns <literal>null</literal> if this layer has no track matte layer.</paragraph>
                <paragraph><strong>Type</strong></paragraph>
                <paragraph>AVLayer object; read only.</paragraph>
                <transition></transition>
                <target refid="avlayer-trackmattetype"></target>
            </section>
            <section dupnames="avlayer.trackmattetype" ids="avlayer-trackmattetype id27" names="avlayer.trackmattetype">
                <title>AVLayer.trackMatteType</title>
                <paragraph><literal>app.project.item(index).layer(index).trackMatteType</literal></paragraph>
                <note>
                    <paragraph>This functionality was updated in After Effects 23.0</paragraph>
                </note>
                <warning>
                    <paragraph>This is a Legacy API we donâ€™t recommend using for setting Track Matte Type in new scripts. Please consider using the latest track matte APIs <reference internal="True" refid="avlayer-settrackmatte"><inline classes="std std-ref">AVLayer.setTrackMatte()</inline></reference> and <reference internal="True" refid="avlayer-removetrackmatte"><inline classes="std std-ref">AVLayer.removeTrackMatte()</inline></reference> for your tasks.</paragraph>
                </warning>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>If this layer has a track matte, specifies the way the track matte is applied.
                    Specifying the <literal>TrackMatteType.NO_TRACK_MATTE</literal> type will remove the track matte for this layer and reset the track matte type.</paragraph>
                <paragraph><strong>Type</strong></paragraph>
                <paragraph>A <literal>TrackMatteType</literal> enumerated value; read/write. One of:</paragraph>
                <bullet_list bullet="-">
                    <list_item>
                        <paragraph><literal>TrackMatteType.ALPHA</literal></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><literal>TrackMatteType.ALPHA_INVERTED</literal></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><literal>TrackMatteType.LUMA</literal></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><literal>TrackMatteType.LUMA_INVERTED</literal></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><literal>TrackMatteType.NO_TRACK_MATTE</literal></paragraph>
                    </list_item>
                </bullet_list>
                <paragraph><strong>Example</strong></paragraph>
                <literal_block classes="code javascript" force_highlighting="False" language="javascript" linenos="False" xml:space="preserve"><inline classes="comment single">// Returns the current track matte type for myLayer
</inline><inline classes="keyword declaration">var</inline> <inline classes="name other">type</inline> <inline classes="operator">=</inline> <inline classes="name other">myLayer</inline><inline classes="punctuation">.</inline><inline classes="name other">trackMatteType</inline><inline classes="punctuation">;</inline>

<inline classes="comment single">// *** We recommend using the new Track Matte APIs for the operations below (See Warning) ***
</inline>
<inline classes="comment single">// Changes the track matte type for myLayer to TrackMatteType.ALPHA_INVERTED
</inline><inline classes="name other">myLayer</inline><inline classes="punctuation">.</inline><inline classes="name other">trackMatteType</inline> <inline classes="operator">=</inline> <inline classes="name other">TrackMatteType</inline><inline classes="punctuation">.</inline><inline classes="name other">ALPHA_INVERTED</inline><inline classes="punctuation">;</inline>

<inline classes="comment single">// Removes the track matte and also resets the type
</inline><inline classes="name other">myLayer</inline><inline classes="punctuation">.</inline><inline classes="name other">trackMatteType</inline> <inline classes="operator">=</inline> <inline classes="name other">TrackMatteType</inline><inline classes="punctuation">.</inline><inline classes="name other">NO_TRACK_MATTE</inline><inline classes="punctuation">;</inline></literal_block>
                <transition></transition>
                <target refid="avlayer-width"></target>
            </section>
            <section dupnames="avlayer.width" ids="avlayer-width id28" names="avlayer.width">
                <title>AVLayer.width</title>
                <paragraph><literal>app.project.item(index).layer(index).width</literal></paragraph>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>The width of the layer in pixels.</paragraph>
                <paragraph><strong>Type</strong></paragraph>
                <paragraph>Floating-point; read-only.</paragraph>
            </section>
        </section>
        <transition></transition>
        <section ids="methods" names="methods">
            <title>Methods</title>
            <target refid="avlayer-addtomotiongraphicstemplate"></target>
            <section ids="avlayer-addtomotiongraphicstemplate id29" names="avlayer.addtomotiongraphicstemplate() avlayer.addtomotiongraphicstemplate">
                <title>AVLayer.addToMotionGraphicsTemplate()</title>
                <paragraph><literal>app.project.item(index).layer(index).addToMotionGraphicsTemplate(comp)</literal></paragraph>
                <note>
                    <paragraph>This functionality was added in After Effects 18.0 (2021)</paragraph>
                </note>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>Adds the layer to the Essential Graphics Panel for the specified composition.</paragraph>
                <paragraph>Returns true if the layer is successfully added, or false otherwise.</paragraph>
                <bullet_list bullet="-">
                    <list_item>
                        <paragraph>If the layer cannot be added, it is either because it is not a layer type for which media can be replaced (referred to as Media Replacement Layers), or the layer has already been added to the EGP for that composition. After Effects will present a warning dialog if the layer cannot be added to the EGP.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>Use the <reference internal="True" refid="avlayer-canaddtomotiongraphicstemplate"><inline classes="std std-ref">AVLayer.canAddToMotionGraphicsTemplate()</inline></reference> method to test whether the layer can be added to a Motion Graphics template.</paragraph>
                    </list_item>
                </bullet_list>
                <paragraph><strong>Parameters</strong></paragraph>
                <table>
                    <tgroup cols="2">
                        <colspec colwidth="8"></colspec>
                        <colspec colwidth="91"></colspec>
                        <tbody>
                            <row>
                                <entry>
                                    <paragraph><literal>comp</literal></paragraph>
                                </entry>
                                <entry>
                                    <paragraph>A CompItem object; the composition where you wish to add the property to the EGP. Required.</paragraph>
                                </entry>
                            </row>
                        </tbody>
                    </tgroup>
                </table>
                <paragraph><strong>Returns</strong></paragraph>
                <paragraph>Boolean.</paragraph>
                <transition></transition>
                <target refid="avlayer-addtomotiongraphicstemplateas"></target>
            </section>
            <section ids="avlayer-addtomotiongraphicstemplateas id30" names="avlayer.addtomotiongraphicstemplateas() avlayer.addtomotiongraphicstemplateas">
                <title>AVLayer.addToMotionGraphicsTemplateAs()</title>
                <paragraph><literal>app.project.item(index).layer(index).addToMotionGraphicsTemplateAs(comp, name)</literal></paragraph>
                <note>
                    <paragraph>This functionality was added in After Effects 18.0 (2021)</paragraph>
                </note>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>Adds the layer to the Essential Graphics Panel for the specified composition.</paragraph>
                <paragraph>Returns true if the layer is successfully added, or false otherwise.</paragraph>
                <bullet_list bullet="-">
                    <list_item>
                        <paragraph>If the layer cannot be added, it is either because it is not a layer type for which media can be replaced (referred to as Media Replacement Layers), or the layer has already been added to the EGP for that composition. After Effects will present a warning dialog if the layer cannot be added to the EGP.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>Use the <reference internal="True" refid="avlayer-canaddtomotiongraphicstemplate"><inline classes="std std-ref">AVLayer.canAddToMotionGraphicsTemplate()</inline></reference> method to test whether the layer can be added to a Motion Graphics template.</paragraph>
                    </list_item>
                </bullet_list>
                <paragraph><strong>Parameters</strong></paragraph>
                <table>
                    <tgroup cols="2">
                        <colspec colwidth="20"></colspec>
                        <colspec colwidth="56"></colspec>
                        <tbody>
                            <row>
                                <entry>
                                    <paragraph><literal>comp</literal></paragraph>
                                </entry>
                                <entry>
                                    <paragraph>A CompItem object; the composition where you wish to add
                                        the property to the EGP. Required.</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph><literal>name</literal></paragraph>
                                </entry>
                                <entry>
                                    <paragraph>A string for the new name. Required.</paragraph>
                                </entry>
                            </row>
                        </tbody>
                    </tgroup>
                </table>
                <paragraph><strong>Returns</strong></paragraph>
                <paragraph>Boolean.</paragraph>
                <transition></transition>
                <target refid="avlayer-audioactiveattime"></target>
            </section>
            <section ids="avlayer-audioactiveattime id31" names="avlayer.audioactiveattime() avlayer.audioactiveattime">
                <title>AVLayer.audioActiveAtTime()</title>
                <paragraph><literal>app.project.item(index).layer(index).audioActiveAtTime(time)</literal></paragraph>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>Returns true if this layerâ€™s audio will be active at the specified time. For this method to return true, <literal>audioEnabled</literal> must be true, no other layer with audio may be soloing unless this layer is soloed too, and the time must be between the <literal>inPoint</literal> and <literal>outPoint</literal> of this layer.</paragraph>
                <paragraph><strong>Parameters</strong></paragraph>
                <table>
                    <tgroup cols="2">
                        <colspec colwidth="8"></colspec>
                        <colspec colwidth="45"></colspec>
                        <tbody>
                            <row>
                                <entry>
                                    <paragraph><literal>time</literal></paragraph>
                                </entry>
                                <entry>
                                    <paragraph>The time, in seconds. A floating-point value.</paragraph>
                                </entry>
                            </row>
                        </tbody>
                    </tgroup>
                </table>
                <paragraph><strong>Returns</strong></paragraph>
                <paragraph>Boolean.</paragraph>
                <transition></transition>
                <target refid="avlayer-calculatetransformfrompoints"></target>
            </section>
            <section ids="avlayer-calculatetransformfrompoints id32" names="avlayer.calculatetransformfrompoints() avlayer.calculatetransformfrompoints">
                <title>AVLayer.calculateTransformFromPoints()</title>
                <paragraph><literal>app.project.item(index).layer(index).calculateTransformFromPoints(pointTopLeft, pointTopRight, pointBottomRight)</literal></paragraph>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>Calculates a transformation from a set of points in this layer.</paragraph>
                <paragraph><strong>Parameters</strong></paragraph>
                <table>
                    <tgroup cols="2">
                        <colspec colwidth="20"></colspec>
                        <colspec colwidth="56"></colspec>
                        <tbody>
                            <row>
                                <entry>
                                    <paragraph><literal>pointTopLeft</literal></paragraph>
                                </entry>
                                <entry>
                                    <paragraph>The top left point coordinates in the form of an array,
                                        [x , y, z] .</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph><literal>pointTopRight</literal></paragraph>
                                </entry>
                                <entry>
                                    <paragraph>The top right point coordinates in the form of an array,
                                        [ x, y, z ] .</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph><literal>pointBottomRight</literal></paragraph>
                                </entry>
                                <entry>
                                    <paragraph>The bottom right point coordinates in the form of an
                                        array, [ x, y, z ] .</paragraph>
                                </entry>
                            </row>
                        </tbody>
                    </tgroup>
                </table>
                <paragraph><strong>Returns</strong></paragraph>
                <paragraph>An Object with the transformation properties set.</paragraph>
                <paragraph><strong>Example</strong></paragraph>
                <literal_block classes="code javascript" force_highlighting="False" language="javascript" linenos="False" xml:space="preserve"><inline classes="keyword declaration">var</inline> <inline classes="name other">newLayer</inline> <inline classes="operator">=</inline> <inline classes="name other">comp</inline><inline classes="punctuation">.</inline><inline classes="name other">layers</inline><inline classes="punctuation">.</inline><inline classes="name other">add</inline><inline classes="punctuation">(</inline><inline classes="name other">newFootage</inline><inline classes="punctuation">);</inline>
<inline classes="name other">newLayer</inline><inline classes="punctuation">.</inline><inline classes="name other">threeDLayer</inline> <inline classes="operator">=</inline> <inline classes="keyword constant">true</inline><inline classes="punctuation">;</inline>
<inline classes="name other">newLayer</inline><inline classes="punctuation">.</inline><inline classes="name other">blendingMode</inline> <inline classes="operator">=</inline> <inline classes="name other">BlendingMode</inline><inline classes="punctuation">.</inline><inline classes="name other">ALPHA_ADD</inline><inline classes="punctuation">;</inline>
<inline classes="keyword declaration">var</inline> <inline classes="name other">transform</inline> <inline classes="operator">=</inline> <inline classes="name other">newLayer</inline><inline classes="punctuation">.</inline><inline classes="name other">calculateTransformFromPoints</inline><inline classes="punctuation">(</inline><inline classes="name other">tl</inline><inline classes="punctuation">,</inline> <inline classes="name other">tr</inline><inline classes="punctuation">,</inline> <inline classes="name other">bl</inline><inline classes="punctuation">);</inline>
<inline classes="keyword">for</inline> <inline classes="punctuation">(</inline><inline classes="keyword declaration">var</inline> <inline classes="name other">sel</inline> <inline classes="keyword">in</inline> <inline classes="name other">transform</inline><inline classes="punctuation">)</inline> <inline classes="punctuation">{</inline>
  <inline classes="name other">newLayer</inline><inline classes="punctuation">.</inline><inline classes="name other">transform</inline><inline classes="punctuation">[</inline><inline classes="name other">sel</inline><inline classes="punctuation">].</inline><inline classes="name other">setValue</inline><inline classes="punctuation">(</inline><inline classes="name other">transform</inline><inline classes="punctuation">[</inline><inline classes="name other">sel</inline><inline classes="punctuation">]);</inline>
<inline classes="punctuation">}</inline></literal_block>
                <transition></transition>
                <target refid="avlayer-canaddtomotiongraphicstemplate"></target>
            </section>
            <section ids="avlayer-canaddtomotiongraphicstemplate id33" names="avlayer.canaddtomotiongraphicstemplate() avlayer.canaddtomotiongraphicstemplate">
                <title>AVLayer.canAddToMotionGraphicsTemplate()</title>
                <paragraph><literal>app.project.item(index).layer(index).canAddToMotionGraphicsTemplate(comp)</literal></paragraph>
                <note>
                    <paragraph>This functionality was added in After Effects 18.0 (2021)</paragraph>
                </note>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>Test whether or not the layer can be added to the Essential Graphics Panel for the specified composition.</paragraph>
                <paragraph>Returns true if the layer can be added, or false otherwise.</paragraph>
                <paragraph>If the layer cannot be added, it is either because it is not a layer type for which media can be replaced (referred to as Media Replacement Layers), or the layer has already been added to the EGP for that composition.</paragraph>
                <paragraph>Media Replacement layers are recognized as AVLayers with an <reference internal="True" refid="avlayer-source"><inline classes="std std-ref">AVLayer.source</inline></reference> set to a <reference internal="True" refuri="../items/footageitem#footageitem"><inline classes="std std-ref">FootageItem object</inline></reference> (with specific source types) or a <reference internal="True" refuri="../items/compitem#compitem"><inline classes="std std-ref">CompItem object</inline></reference>.</paragraph>
                <paragraph>The AVLayer needs to comply with the restrictions below in order to be treated as a Media Replacement layer:</paragraph>
                <bullet_list bullet="-">
                    <list_item>
                        <paragraph><reference internal="True" refuri="layer#layer-hasvideo"><inline classes="std std-ref">Layer.hasVideo</inline></reference> should return true.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" refid="avlayer-adjustmentlayer"><inline classes="std std-ref">AVLayer.adjustmentLayer</inline></reference> should return false.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" refuri="layer#layer-nulllayer"><inline classes="std std-ref">Layer.nullLayer</inline></reference> should return false.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>If the <reference internal="True" refid="avlayer-source"><inline classes="std std-ref">AVLayer.source</inline></reference> is a <reference internal="True" refuri="../items/footageitem#footageitem"><inline classes="std std-ref">FootageItem object</inline></reference>, then FootageItem.FootageSource should not be a <reference internal="True" refuri="../sources/solidsource#solidsource"><inline classes="std std-ref">SolidSource object</inline></reference>.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>If the <reference internal="True" refid="avlayer-source"><inline classes="std std-ref">AVLayer.source</inline></reference> is a <reference internal="True" refuri="../items/footageitem#footageitem"><inline classes="std std-ref">FootageItem object</inline></reference> and the FootageItem.FootageSource is a <reference internal="True" refuri="../sources/filesource#filesource"><inline classes="std std-ref">FileSource object</inline></reference> then that FileSource should not point to a non-media file e.g. a JSX script file.</paragraph>
                    </list_item>
                </bullet_list>
                <paragraph><strong>Parameters</strong></paragraph>
                <table>
                    <tgroup cols="2">
                        <colspec colwidth="8"></colspec>
                        <colspec colwidth="91"></colspec>
                        <tbody>
                            <row>
                                <entry>
                                    <paragraph><literal>comp</literal></paragraph>
                                </entry>
                                <entry>
                                    <paragraph>A CompItem object; the composition where you wish to add the property to the EGP. Required.</paragraph>
                                </entry>
                            </row>
                        </tbody>
                    </tgroup>
                </table>
                <paragraph><strong>Returns</strong></paragraph>
                <paragraph>Boolean.</paragraph>
                <transition></transition>
                <target refid="avlayer-comppointtosource"></target>
            </section>
            <section ids="avlayer-comppointtosource id34" names="avlayer.comppointtosource() avlayer.comppointtosource">
                <title>AVLayer.compPointToSource()</title>
                <paragraph><literal>app.project.item(index).layer(index).compPointToSource()</literal></paragraph>
                <note>
                    <paragraph>This functionality was added in After Effects 13.2 (CC 2014.2)</paragraph>
                </note>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>Converts composition coordinates, such as <literal>sourcePointToComp</literal>, to layer coordinates.</paragraph>
                <warning>
                    <paragraph>This value only reflects the first character in the text layer at the current time.</paragraph>
                </warning>
                <paragraph><strong>Parameters</strong></paragraph>
                <table>
                    <tgroup cols="2">
                        <colspec colwidth="21"></colspec>
                        <colspec colwidth="69"></colspec>
                        <tbody>
                            <row>
                                <entry>
                                    <paragraph><literal>sourcePointToComp</literal></paragraph>
                                </entry>
                                <entry>
                                    <paragraph>A position array of composition coordinates in ([X, Y]) format.</paragraph>
                                </entry>
                            </row>
                        </tbody>
                    </tgroup>
                </table>
                <paragraph><strong>Returns</strong></paragraph>
                <paragraph>Array of ([X,Y]) position coordinates; read-only.</paragraph>
                <transition></transition>
                <target refid="avlayer-openinviewer"></target>
            </section>
            <section ids="avlayer-openinviewer id35" names="avlayer.openinviewer() avlayer.openinviewer">
                <title>AVLayer.openInViewer()</title>
                <paragraph><literal>app.project.item(index).layer(index).openInViewer()</literal></paragraph>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>Opens the layer in a Layer panel, and moves the Layer panel to front and gives it focus.</paragraph>
                <paragraph><strong>Parameters</strong></paragraph>
                <paragraph>None.</paragraph>
                <paragraph><strong>Returns</strong></paragraph>
                <paragraph>Viewer object for the Layer panel, or null if the layer could not be opened (e.g., for text or shape layers, which cannot be opened in the Layer panel).</paragraph>
                <transition></transition>
                <target refid="avlayer-removetrackmatte"></target>
            </section>
            <section ids="avlayer-removetrackmatte id36" names="avlayer.removetrackmatte() avlayer.removetrackmatte">
                <title>AVLayer.removeTrackMatte()</title>
                <paragraph><literal>app.project.item(index).layer(index).removeTrackMatte()</literal></paragraph>
                <note>
                    <paragraph>This functionality was added in After Effects 23.0</paragraph>
                </note>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>Removes the track matte for this layer while preserving the TrackMatteType.
                    See <reference internal="True" refid="avlayer-settrackmatte"><inline classes="std std-ref">AVLayer.setTrackMatte()</inline></reference> for another way of removing track matte.</paragraph>
                <paragraph><strong>Parameters</strong></paragraph>
                <paragraph>None.</paragraph>
                <paragraph><strong>Returns</strong></paragraph>
                <paragraph>Nothing.</paragraph>
                <literal_block classes="code javascript" force_highlighting="False" language="javascript" linenos="False" xml:space="preserve"><inline classes="comment single">// Sets the track matte layer of myLayer with otherLayer as LUMA type
</inline><inline classes="name other">myLayer</inline><inline classes="punctuation">.</inline><inline classes="name other">setTrackMatte</inline><inline classes="punctuation">(</inline><inline classes="name other">otherLayer</inline><inline classes="punctuation">,</inline> <inline classes="name other">TrackMatteType</inline><inline classes="punctuation">.</inline><inline classes="name other">LUMA</inline><inline classes="punctuation">);</inline>

<inline classes="comment single">// Removes the track matte for myLayer but preserves the LUMA type
</inline><inline classes="name other">myLayer</inline><inline classes="punctuation">.</inline><inline classes="name other">removeTrackMatte</inline><inline classes="punctuation">();</inline>

<inline classes="comment single">// Still returns TrackMatteType.LUMA
</inline><inline classes="name other">alert</inline><inline classes="punctuation">(</inline><inline classes="name other">myLayer</inline><inline classes="punctuation">.</inline><inline classes="name other">trackMatteType</inline><inline classes="punctuation">);</inline></literal_block>
                <transition></transition>
                <target refid="avlayer-replacesource"></target>
            </section>
            <section ids="avlayer-replacesource id37" names="avlayer.replacesource() avlayer.replacesource">
                <title>AVLayer.replaceSource()</title>
                <paragraph><literal>app.project.item(index).layer(index).replaceSource(newSource, fixExpressions)</literal></paragraph>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>Replaces the source for this layer.</paragraph>
                <paragraph><strong>Parameters</strong></paragraph>
                <table>
                    <tgroup cols="2">
                        <colspec colwidth="18"></colspec>
                        <colspec colwidth="57"></colspec>
                        <tbody>
                            <row>
                                <entry>
                                    <paragraph><literal>newSource</literal></paragraph>
                                </entry>
                                <entry>
                                    <paragraph>The new source AVItem object.</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph><literal>fixExpressions</literal></paragraph>
                                </entry>
                                <entry>
                                    <paragraph><literal>True</literal> to adjust expressions for the new source,
                                        <literal>false</literal> otherwise. Note that this feature can be
                                        resource-intensive; if replacing a large amount of
                                        footage, do this only at the end of the operation. See
                                        also <reference internal="True" refuri="../general/project#project-autofixexpressions"><inline classes="std std-ref">Project.autoFixExpressions()</inline></reference>.</paragraph>
                                </entry>
                            </row>
                        </tbody>
                    </tgroup>
                </table>
                <paragraph><strong>Returns</strong></paragraph>
                <paragraph>Nothing.</paragraph>
                <warning>
                    <paragraph>If this method is performed on a null layer, the layers <literal>isNull</literal> attribute is not changed from <literal>true</literal>. This causes the layer not to be visible in comp viewer and renders.</paragraph>
                </warning>
                <transition></transition>
                <target refid="avlayer-settrackmatte"></target>
            </section>
            <section ids="avlayer-settrackmatte id38" names="avlayer.settrackmatte() avlayer.settrackmatte">
                <title>AVLayer.setTrackMatte()</title>
                <paragraph><literal>app.project.item(index).layer(index).setTrackMatte(trackMatteLayer, trackMatteType)</literal></paragraph>
                <note>
                    <paragraph>This functionality was added in After Effects 23.0</paragraph>
                </note>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>Sets the track matte layer and type for this layer. Passing in <literal>null</literal> to trackMatteLayer parameter removes the track matte.
                    See <reference internal="True" refid="avlayer-removetrackmatte"><inline classes="std std-ref">AVLayer.removeTrackMatte()</inline></reference> for another way of removing track matte.</paragraph>
                <paragraph><strong>Parameters</strong></paragraph>
                <table>
                    <tgroup cols="2">
                        <colspec colwidth="19"></colspec>
                        <colspec colwidth="101"></colspec>
                        <tbody>
                            <row>
                                <entry>
                                    <paragraph><literal>trackMatteLayer</literal></paragraph>
                                </entry>
                                <entry>
                                    <paragraph>The AVLayer to be used as the track matte layer.</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph><literal>trackMatteType</literal></paragraph>
                                </entry>
                                <entry>
                                    <paragraph>The type of the track matte to be used. Please see <reference internal="True" refid="avlayer-trackmattetype"><inline classes="std std-ref">AVLayer.trackMatteType</inline></reference> for available types.</paragraph>
                                </entry>
                            </row>
                        </tbody>
                    </tgroup>
                </table>
                <warning>
                    <paragraph>Passing in <literal>TrackMatteType.NO_TRACK_MATTE</literal> as type is invalid and will result in no-op.</paragraph>
                </warning>
                <paragraph><strong>Returns</strong></paragraph>
                <paragraph>Nothing</paragraph>
                <paragraph><strong>Example</strong></paragraph>
                <literal_block classes="code javascript" force_highlighting="False" language="javascript" linenos="False" xml:space="preserve"><inline classes="comment single">// Sets the track matte layer of myLayer with otherLayer as Alpha type
</inline><inline classes="name other">myLayer</inline><inline classes="punctuation">.</inline><inline classes="name other">setTrackMatte</inline><inline classes="punctuation">(</inline><inline classes="name other">otherLayer</inline><inline classes="punctuation">,</inline> <inline classes="name other">TrackMatteType</inline><inline classes="punctuation">.</inline><inline classes="name other">ALPHA</inline><inline classes="punctuation">);</inline>

<inline classes="comment single">// Keeps the same trackMatteLayer and only changes the track matte type
</inline><inline classes="name other">myLayer</inline><inline classes="punctuation">.</inline><inline classes="name other">setTrackMatte</inline><inline classes="punctuation">(</inline><inline classes="name other">myLayer</inline><inline classes="punctuation">.</inline><inline classes="name other">trackMatteLayer</inline><inline classes="punctuation">,</inline> <inline classes="name other">TrackMatteType</inline><inline classes="punctuation">.</inline><inline classes="name other">LUMA</inline><inline classes="punctuation">);</inline>

<inline classes="comment single">// Changes the track matte layer but keep the same track matte type
</inline><inline classes="name other">myLayer</inline><inline classes="punctuation">.</inline><inline classes="name other">setTrackMatte</inline><inline classes="punctuation">(</inline><inline classes="name other">newTrackMatteLayer</inline><inline classes="punctuation">,</inline> <inline classes="name other">myLayer</inline><inline classes="punctuation">.</inline><inline classes="name other">trackMatteType</inline><inline classes="punctuation">);</inline>

<inline classes="comment single">// Removes the track matte for myLayer and sets the new specified TrackMatteType
</inline><inline classes="name other">myLayer</inline><inline classes="punctuation">.</inline><inline classes="name other">setTrackMatte</inline><inline classes="punctuation">(</inline><inline classes="keyword constant">null</inline><inline classes="punctuation">,</inline> <inline classes="name other">TrackMatteType</inline><inline classes="punctuation">.</inline><inline classes="name other">ALPHA</inline><inline classes="punctuation">);</inline>
<inline classes="name other">myLayer</inline><inline classes="punctuation">.</inline><inline classes="name other">setTrackMatte</inline><inline classes="punctuation">(</inline><inline classes="keyword constant">null</inline><inline classes="punctuation">,</inline> <inline classes="name other">TrackMatteType</inline><inline classes="punctuation">.</inline><inline classes="name other">NO_TRACK_MATTE</inline><inline classes="punctuation">);</inline>

<inline classes="comment single">// Invalid. Nothing happens
</inline><inline classes="name other">myLayer</inline><inline classes="punctuation">.</inline><inline classes="name other">setTrackMatte</inline><inline classes="punctuation">(</inline><inline classes="name other">otherLayer</inline><inline classes="punctuation">,</inline> <inline classes="name other">TrackMatteType</inline><inline classes="punctuation">.</inline><inline classes="name other">NO_TRACK_MATTE</inline><inline classes="punctuation">);</inline></literal_block>
                <transition></transition>
                <target refid="avlayer-sourcepointtocomp"></target>
            </section>
            <section ids="avlayer-sourcepointtocomp id39" names="avlayer.sourcepointtocomp() avlayer.sourcepointtocomp">
                <title>AVLayer.sourcePointToComp()</title>
                <paragraph><literal>app.project.item(index).layer(index).sourcePointToComp()</literal></paragraph>
                <note>
                    <paragraph>This functionality was added in After Effects 13.2 (CC 2014.2)</paragraph>
                </note>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>Converts layer coordinates, such as <literal>boxTextPos</literal>, to composition coordinates.</paragraph>
                <warning>
                    <paragraph>This value only reflects the first character in the text layer at the current time.</paragraph>
                </warning>
                <paragraph><strong>Parameters</strong></paragraph>
                <table>
                    <tgroup cols="2">
                        <colspec colwidth="14"></colspec>
                        <colspec colwidth="69"></colspec>
                        <tbody>
                            <row>
                                <entry>
                                    <paragraph><literal>boxTextPos</literal></paragraph>
                                </entry>
                                <entry>
                                    <paragraph>A position array of layer coordinates in ([X, Y]) format.</paragraph>
                                </entry>
                            </row>
                        </tbody>
                    </tgroup>
                </table>
                <paragraph><strong>Returns</strong></paragraph>
                <paragraph>Array of ([X,Y]) position coordinates; read-only.</paragraph>
                <paragraph><strong>Example</strong></paragraph>
                <literal_block classes="code javascript" force_highlighting="False" language="javascript" linenos="False" xml:space="preserve"><inline classes="comment single">// For a paragraph text layer.
// Converts position in layer coordinates to comp coordinates.
</inline><inline classes="keyword declaration">var</inline> <inline classes="name other">boxTextCompPos</inline> <inline classes="operator">=</inline> <inline classes="name other">myTextLayer</inline><inline classes="punctuation">.</inline><inline classes="name other">sourcePointToComp</inline><inline classes="punctuation">(</inline><inline classes="name other">boxTextLayerPos</inline><inline classes="punctuation">);</inline></literal_block>
                <transition></transition>
                <target refid="avlayer-sourcerectattime"></target>
            </section>
            <section ids="avlayer-sourcerectattime id40" names="avlayer.sourcerectattime() avlayer.sourcerectattime">
                <title>AVLayer.sourceRectAtTime()</title>
                <paragraph><literal>app.project.item(index).layer(index).sourceRectAtTime(timeT, extents)</literal></paragraph>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>Retrieves the rectangle bounds of the layer at the specified time index, corrected for text or shape layer content. Use, for example, to write text that is properly aligned to the baseline.</paragraph>
                <paragraph><strong>Parameters</strong></paragraph>
                <table>
                    <tgroup cols="2">
                        <colspec colwidth="11"></colspec>
                        <colspec colwidth="64"></colspec>
                        <tbody>
                            <row>
                                <entry>
                                    <paragraph><literal>timeT</literal></paragraph>
                                </entry>
                                <entry>
                                    <paragraph>The time index, in seconds. A floating-point value.</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph><literal>extents</literal></paragraph>
                                </entry>
                                <entry>
                                    <paragraph><literal>True</literal> to include the extents, <literal>false</literal> otherwise. Extents
                                        apply to shape layers, increasing the size of the layer bounds
                                        as necessary.</paragraph>
                                </entry>
                            </row>
                        </tbody>
                    </tgroup>
                </table>
                <paragraph><strong>Returns</strong></paragraph>
                <paragraph>A JavaScript object with four attributes, [<literal>top</literal>, <literal>left</literal>, <literal>width</literal>, <literal>height</literal>].</paragraph>
            </section>
        </section>
    </section>
</document>

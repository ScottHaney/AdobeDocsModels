<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.16 -->
<document source="/home/parallels/Desktop/code/AdobeDocsModels/after-effects-scripting-guide-master/docs/properties/property.rst">
    <target refid="property"></target>
    <section ids="property-object property" names="property\ object property">
        <title>Property object</title>
        <paragraph><literal>app.project.item(index).layer(index).propertySpec</literal></paragraph>
        <paragraph><strong>Description</strong></paragraph>
        <paragraph>The Property object contains value, keyframe, and expression information about a particular AE property of a layer. An AE property is a value, often animatable, of an effect, mask, or transform within an individual layer. For examples of how to access properties, see <reference internal="True" refuri="propertybase#propertybase"><inline classes="std std-ref">PropertyBase object</inline></reference> and <reference internal="True" refuri="propertygroup#propertygroup-property"><inline classes="std std-ref">PropertyGroup.property()</inline></reference>.</paragraph>
        <block_quote>
            <paragraph>Property is a subclass of <reference internal="True" refuri="propertybase#propertybase"><inline classes="std std-ref">PropertyBase</inline></reference>. All methods and attributes of PropertyBase, in addition to those listed below, are available when working with Property.</paragraph>
        </block_quote>
        <note>
            <paragraph>JavaScript objects commonly referred to as “properties” are called “attributes” in this guide, to avoid confusion with the After Effects definition of property.</paragraph>
        </note>
        <target refid="propertyexamples"></target>
        <paragraph ids="propertyexamples" names="propertyexamples"><strong>Examples</strong></paragraph>
        <bullet_list bullet="-">
            <list_item>
                <paragraph>Get and set the value of opacity</paragraph>
                <block_quote>
                    <literal_block classes="code javascript" force_highlighting="False" language="javascript" linenos="False" xml:space="preserve"><inline classes="keyword declaration">var</inline> <inline classes="name other">myProperty</inline> <inline classes="operator">=</inline> <inline classes="name other">myLayer</inline><inline classes="punctuation">.</inline><inline classes="name other">opacity</inline><inline classes="punctuation">;</inline>
<inline classes="comment single">// opacity has propertyValueType of OneD, and is stored as a float
</inline><inline classes="name other">myProperty</inline><inline classes="punctuation">.</inline><inline classes="name other">setValue</inline><inline classes="punctuation">(</inline><inline classes="literal number integer">50</inline><inline classes="punctuation">);</inline> <inline classes="comment single">//set opacity to 50%
// Variable my Opacity is a float value
</inline><inline classes="keyword declaration">var</inline> <inline classes="name other">myOpacity</inline> <inline classes="operator">=</inline> <inline classes="name other">myProperty</inline><inline classes="punctuation">.</inline><inline classes="name other">value</inline><inline classes="punctuation">;</inline></literal_block>
                </block_quote>
            </list_item>
            <list_item>
                <paragraph>Get and set the value of a position</paragraph>
                <block_quote>
                    <literal_block classes="code javascript" force_highlighting="False" language="javascript" linenos="False" xml:space="preserve"><inline classes="keyword declaration">var</inline> <inline classes="name other">myProperty</inline> <inline classes="operator">=</inline> <inline classes="name other">myLayer</inline><inline classes="punctuation">.</inline><inline classes="name other">position</inline><inline classes="punctuation">;</inline>
<inline classes="comment single">// position has propertyValueType of ThreeD_SPATIAL, and is stored as an array of 3 floats
</inline><inline classes="name other">myProperty</inline><inline classes="punctuation">.</inline><inline classes="name other">setValue</inline><inline classes="punctuation">([</inline><inline classes="literal number float">10.0</inline><inline classes="punctuation">,</inline> <inline classes="literal number float">30.0</inline><inline classes="punctuation">,</inline> <inline classes="literal number float">0.0</inline><inline classes="punctuation">]);</inline>
<inline classes="comment single">// Variable my Position is an array of 3 floats
</inline><inline classes="keyword declaration">var</inline> <inline classes="name other">myPosition</inline> <inline classes="operator">=</inline> <inline classes="name other">myProperty</inline><inline classes="punctuation">.</inline><inline classes="name other">value</inline><inline classes="punctuation">;</inline></literal_block>
                </block_quote>
            </list_item>
            <list_item>
                <paragraph>Change the value of a mask shape to be open instead of closed</paragraph>
                <block_quote>
                    <literal_block classes="code javascript" force_highlighting="False" language="javascript" linenos="False" xml:space="preserve"><inline classes="keyword declaration">var</inline> <inline classes="name other">myMask</inline> <inline classes="operator">=</inline> <inline classes="name other">mylayer</inline><inline classes="punctuation">.</inline><inline classes="name other">mask</inline><inline classes="punctuation">(</inline><inline classes="literal number integer">1</inline><inline classes="punctuation">);</inline>
<inline classes="keyword declaration">var</inline> <inline classes="name other">myProperty</inline> <inline classes="operator">=</inline> <inline classes="name other">myMask</inline><inline classes="punctuation">.</inline><inline classes="name other">maskPath</inline><inline classes="punctuation">;</inline>
<inline classes="name other">myShape</inline> <inline classes="operator">=</inline> <inline classes="name other">myProperty</inline><inline classes="punctuation">.</inline><inline classes="name other">value</inline><inline classes="punctuation">;</inline>
<inline classes="name other">myShape</inline><inline classes="punctuation">.</inline><inline classes="name other">closed</inline> <inline classes="operator">=</inline> <inline classes="keyword constant">false</inline><inline classes="punctuation">;</inline>
<inline classes="name other">myProperty</inline><inline classes="punctuation">.</inline><inline classes="name other">setValue</inline><inline classes="punctuation">(</inline><inline classes="name other">myShape</inline><inline classes="punctuation">);</inline></literal_block>
                </block_quote>
            </list_item>
            <list_item>
                <paragraph>Get the value of a color at a particular time. A color is stored as an array of four floats, <literal>[r, g, b, opacity]</literal>. This sets the value of the red component of a light’s color at time 4 to be half of that at time 2</paragraph>
                <block_quote>
                    <literal_block classes="code javascript" force_highlighting="False" language="javascript" linenos="False" xml:space="preserve"><inline classes="keyword declaration">var</inline> <inline classes="name other">myProperty</inline> <inline classes="operator">=</inline> <inline classes="name other">myLight</inline><inline classes="punctuation">.</inline><inline classes="name other">color</inline><inline classes="punctuation">;</inline>
<inline classes="keyword declaration">var</inline> <inline classes="name other">colorValue</inline> <inline classes="operator">=</inline> <inline classes="name other">myProperty</inline><inline classes="punctuation">.</inline><inline classes="name other">valueAtTime</inline><inline classes="punctuation">(</inline><inline classes="literal number integer">2</inline><inline classes="punctuation">,</inline> <inline classes="keyword constant">true</inline><inline classes="punctuation">);</inline>
<inline classes="name other">colorValue</inline><inline classes="punctuation">[</inline><inline classes="literal number integer">0</inline><inline classes="punctuation">]</inline> <inline classes="operator">=</inline> <inline classes="literal number float">0.5</inline> <inline classes="operator">*</inline> <inline classes="name other">colorValue</inline><inline classes="punctuation">[</inline><inline classes="literal number integer">0</inline><inline classes="punctuation">];</inline>
<inline classes="name other">myProperty</inline><inline classes="punctuation">.</inline><inline classes="name other">setValueAtTime</inline><inline classes="punctuation">(</inline><inline classes="literal number integer">4</inline><inline classes="punctuation">,</inline> <inline classes="name other">colorValue</inline><inline classes="punctuation">);</inline></literal_block>
                </block_quote>
            </list_item>
            <list_item>
                <paragraph>Check that a scale calculated by an expression at time 3.5 is the expected value of [10,50]</paragraph>
                <block_quote>
                    <literal_block classes="code javascript" force_highlighting="False" language="javascript" linenos="False" xml:space="preserve"><inline classes="keyword declaration">var</inline> <inline classes="name other">myProperty</inline> <inline classes="operator">=</inline> <inline classes="name other">myLayer</inline><inline classes="punctuation">.</inline><inline classes="name other">scale</inline><inline classes="punctuation">;</inline>
<inline classes="comment single">// false value of preExpression means evaluate the expression
</inline><inline classes="keyword declaration">var</inline> <inline classes="name other">scaleValue</inline> <inline classes="operator">=</inline> <inline classes="name other">myProperty</inline><inline classes="punctuation">.</inline><inline classes="name other">valueAtTime</inline><inline classes="punctuation">(</inline><inline classes="literal number float">3.5</inline><inline classes="punctuation">,</inline> <inline classes="keyword constant">false</inline><inline classes="punctuation">);</inline>

<inline classes="keyword">if</inline> <inline classes="punctuation">(</inline><inline classes="name other">scaleValue</inline><inline classes="punctuation">[</inline><inline classes="literal number integer">0</inline><inline classes="punctuation">]</inline> <inline classes="operator">===</inline> <inline classes="literal number integer">10</inline> <inline classes="operator">&amp;&amp;</inline> <inline classes="name other">scaleValue</inline><inline classes="punctuation">[</inline><inline classes="literal number integer">1</inline><inline classes="punctuation">]</inline> <inline classes="operator">===</inline> <inline classes="literal number integer">50</inline><inline classes="punctuation">)</inline> <inline classes="punctuation">{</inline>
    <inline classes="name other">alert</inline><inline classes="punctuation">(</inline><inline classes="literal string double">"hurray"</inline><inline classes="punctuation">);</inline>
<inline classes="punctuation">}</inline> <inline classes="keyword">else</inline> <inline classes="punctuation">{</inline>
    <inline classes="name other">alert</inline><inline classes="punctuation">(</inline><inline classes="literal string double">"oops"</inline><inline classes="punctuation">);</inline>
<inline classes="punctuation">}</inline></literal_block>
                </block_quote>
            </list_item>
            <list_item>
                <paragraph>Keyframe a rotation from 0 to 90 and back again. The animation is 10 seconds, and the middle keyframe is at the 5 second mark. Rotation properties are stored as a OneD value</paragraph>
                <block_quote>
                    <literal_block classes="code javascript" force_highlighting="False" language="javascript" linenos="False" xml:space="preserve"><inline classes="keyword declaration">var</inline> <inline classes="name other">myProperty</inline> <inline classes="operator">=</inline> <inline classes="name other">myLayer</inline><inline classes="punctuation">.</inline><inline classes="name other">rotation</inline><inline classes="punctuation">;</inline>
<inline classes="name other">myProperty</inline><inline classes="punctuation">.</inline><inline classes="name other">setValueAtTime</inline><inline classes="punctuation">(</inline><inline classes="literal number integer">0</inline><inline classes="punctuation">,</inline> <inline classes="literal number integer">0</inline><inline classes="punctuation">);</inline>
<inline classes="name other">myProperty</inline><inline classes="punctuation">.</inline><inline classes="name other">setValueAtTime</inline><inline classes="punctuation">(</inline><inline classes="literal number integer">5</inline><inline classes="punctuation">,</inline> <inline classes="literal number integer">90</inline><inline classes="punctuation">);</inline>
<inline classes="name other">myProperty</inline><inline classes="punctuation">.</inline><inline classes="name other">setValueAtTime</inline><inline classes="punctuation">(</inline><inline classes="literal number integer">10</inline><inline classes="punctuation">,</inline> <inline classes="literal number integer">0</inline><inline classes="punctuation">);</inline></literal_block>
                </block_quote>
            </list_item>
            <list_item>
                <paragraph>Change the key frame values for the first three keyframes of some sourcetext</paragraph>
                <block_quote>
                    <literal_block classes="code javascript" force_highlighting="False" language="javascript" linenos="False" xml:space="preserve"><inline classes="keyword declaration">var</inline> <inline classes="name other">myProperty</inline> <inline classes="operator">=</inline> <inline classes="name other">myTextLayer</inline><inline classes="punctuation">.</inline><inline classes="name other">sourceText</inline><inline classes="punctuation">;</inline>
<inline classes="keyword">if</inline> <inline classes="punctuation">(</inline><inline classes="name other">myProperty</inline><inline classes="punctuation">.</inline><inline classes="name other">numKeys</inline> <inline classes="operator">&lt;</inline> <inline classes="literal number integer">3</inline><inline classes="punctuation">)</inline> <inline classes="punctuation">{</inline>
    <inline classes="name other">alert</inline><inline classes="punctuation">(</inline><inline classes="literal string double">"error, I thought there were 3 keyframes"</inline><inline classes="punctuation">);</inline>
<inline classes="punctuation">}</inline> <inline classes="keyword">else</inline> <inline classes="punctuation">{</inline>
    <inline classes="name other">myProperty</inline><inline classes="punctuation">.</inline><inline classes="name other">setValueAtKey</inline><inline classes="punctuation">(</inline><inline classes="literal number integer">1</inline><inline classes="punctuation">,</inline> <inline classes="name other">newTextDocument</inline><inline classes="punctuation">(</inline><inline classes="literal string double">"keynumber1"</inline><inline classes="punctuation">));</inline>
    <inline classes="name other">myProperty</inline><inline classes="punctuation">.</inline><inline classes="name other">setValueAtKey</inline><inline classes="punctuation">(</inline><inline classes="literal number integer">2</inline><inline classes="punctuation">,</inline> <inline classes="name other">newTextDocument</inline><inline classes="punctuation">(</inline><inline classes="literal string double">"keynumber2"</inline><inline classes="punctuation">));</inline>
    <inline classes="name other">myProperty</inline><inline classes="punctuation">.</inline><inline classes="name other">setValueAtKey</inline><inline classes="punctuation">(</inline><inline classes="literal number integer">3</inline><inline classes="punctuation">,</inline> <inline classes="name other">newTextDocument</inline><inline classes="punctuation">(</inline><inline classes="literal string double">"keynumber3"</inline><inline classes="punctuation">));</inline>
<inline classes="punctuation">}</inline></literal_block>
                </block_quote>
            </list_item>
            <list_item>
                <paragraph>Set values using the convenience syntax for position, scale, color, or source text</paragraph>
                <block_quote>
                    <literal_block classes="code javascript" force_highlighting="False" language="javascript" linenos="False" xml:space="preserve"><inline classes="comment single">// These two are equivalent. The second fills in a default of 0.
</inline><inline classes="name other">myLayer</inline><inline classes="punctuation">.</inline><inline classes="name other">position</inline><inline classes="punctuation">.</inline><inline classes="name other">setValue</inline><inline classes="punctuation">([</inline><inline classes="literal number integer">20</inline><inline classes="punctuation">,</inline> <inline classes="literal number integer">30</inline><inline classes="punctuation">,</inline> <inline classes="literal number integer">0</inline><inline classes="punctuation">]);</inline>
<inline classes="name other">myLayer</inline><inline classes="punctuation">.</inline><inline classes="name other">position</inline><inline classes="punctuation">.</inline><inline classes="name other">setValue</inline><inline classes="punctuation">([</inline><inline classes="literal number integer">20</inline><inline classes="punctuation">,</inline> <inline classes="literal number integer">30</inline><inline classes="punctuation">]);</inline>
<inline classes="comment single">// These two are equivalent. The second fills in a defaultof 100.
</inline><inline classes="name other">myLayer</inline><inline classes="punctuation">.</inline><inline classes="name other">scale</inline><inline classes="punctuation">.</inline><inline classes="name other">setValue</inline><inline classes="punctuation">([</inline><inline classes="literal number integer">50</inline><inline classes="punctuation">,</inline> <inline classes="literal number integer">50</inline><inline classes="punctuation">,</inline> <inline classes="literal number integer">100</inline><inline classes="punctuation">]);</inline>
<inline classes="name other">myLayer</inline><inline classes="punctuation">.</inline><inline classes="name other">scale</inline><inline classes="punctuation">.</inline><inline classes="name other">setValue</inline><inline classes="punctuation">([</inline><inline classes="literal number integer">50</inline><inline classes="punctuation">,</inline> <inline classes="literal number integer">50</inline><inline classes="punctuation">]);</inline>
<inline classes="comment single">// These two are equivalent. The second fills in a defaultof 1.0
</inline><inline classes="name other">myLight</inline><inline classes="punctuation">.</inline><inline classes="name other">color</inline><inline classes="punctuation">.</inline><inline classes="name other">setValue</inline><inline classes="punctuation">([</inline><inline classes="literal number float">0.8</inline><inline classes="punctuation">,</inline> <inline classes="literal number float">0.3</inline><inline classes="punctuation">,</inline> <inline classes="literal number float">0.1</inline><inline classes="punctuation">,</inline> <inline classes="literal number float">1.0</inline><inline classes="punctuation">]);</inline>
<inline classes="name other">myLight</inline><inline classes="punctuation">.</inline><inline classes="name other">color</inline><inline classes="punctuation">.</inline><inline classes="name other">setValue</inline><inline classes="punctuation">([</inline><inline classes="literal number float">0.8</inline><inline classes="punctuation">,</inline> <inline classes="literal number float">0.3</inline><inline classes="punctuation">,</inline> <inline classes="literal number float">0.1</inline><inline classes="punctuation">]);</inline>
<inline classes="comment single">// These two are equivalent. The second creates a TextDocument
</inline><inline classes="name other">myTextLayer</inline><inline classes="punctuation">.</inline><inline classes="name other">sourceText</inline><inline classes="punctuation">.</inline><inline classes="name other">setValue</inline><inline classes="punctuation">(</inline><inline classes="name other">newTextDocument</inline><inline classes="punctuation">(</inline><inline classes="literal string double">"foo"</inline><inline classes="punctuation">));</inline>
<inline classes="name other">myTextLayer</inline><inline classes="punctuation">.</inline><inline classes="name other">sourceText</inline><inline classes="punctuation">.</inline><inline classes="name other">setValue</inline><inline classes="punctuation">(</inline><inline classes="literal string double">"foo"</inline><inline classes="punctuation">);</inline></literal_block>
                </block_quote>
            </list_item>
        </bullet_list>
        <transition></transition>
        <section ids="attributes" names="attributes">
            <title>Attributes</title>
            <target refid="property-alternatesource"></target>
            <section dupnames="property.alternatesource" ids="property-alternatesource id1" names="property.alternatesource">
                <title>Property.alternateSource</title>
                <paragraph><literal>app.project.item(index).layer(index).propertySpec.alternateSource</literal></paragraph>
                <note>
                    <paragraph>This functionality was added in After Effects 18.0 (2021)</paragraph>
                </note>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>The value is null when:</paragraph>
                <bullet_list bullet="-">
                    <list_item>
                        <paragraph>The alternate source is not set for the associated layer.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>The property cannot be used to set an alternate source.</paragraph>
                    </list_item>
                </bullet_list>
                <paragraph>Use <reference internal="True" refid="property-cansetalternatesource"><inline classes="std std-ref">Property.canSetAlternateSource</inline></reference> to determine if the property is a Media Replacement Essential Property.</paragraph>
                <paragraph>All Media Replacement Layers have an alternate source item that can be set.</paragraph>
                <paragraph>A layer is “marked” for media replacement when the layer is added to the Essential Graphics Panel (see <reference internal="True" refuri="../layers/avlayer#avlayer-addtomotiongraphicstemplate"><inline classes="std std-ref">AVLayer.addToMotionGraphicsTemplate()</inline></reference> or <reference internal="True" refuri="../layers/avlayer#avlayer-addtomotiongraphicstemplateas"><inline classes="std std-ref">AVLayer.addToMotionGraphicsTemplateAs()</inline></reference>).</paragraph>
                <bullet_list bullet="-">
                    <list_item>
                        <paragraph>If present, the render workflow will pick up the alternate source while rendering the layer.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>If the alternate source for the layer is not set, then the source layer of the Media Replacement control is used for rendering (this is the normal workflow).</paragraph>
                    </list_item>
                </bullet_list>
                <paragraph>Use <reference internal="True" refid="property-setalternatesource"><inline classes="std std-ref">Property.setAlternateSource()</inline></reference> to change the value.</paragraph>
                <paragraph><strong>Type</strong></paragraph>
                <paragraph>AVItem object; read-only.</paragraph>
                <transition></transition>
                <target refid="property-cansetalternatesource"></target>
            </section>
            <section dupnames="property.cansetalternatesource" ids="property-cansetalternatesource id2" names="property.cansetalternatesource">
                <title>Property.canSetAlternateSource</title>
                <paragraph><literal>app.project.item(index).layer(index).propertySpec.canSetAlternateSource</literal></paragraph>
                <note>
                    <paragraph>This functionality was added in After Effects 18.0 (2021)</paragraph>
                </note>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>Test whether the property is an Essential Property that supports Media Replacement.</paragraph>
                <paragraph>Returns true if the property allows Media Replacement, false otherwise.</paragraph>
                <paragraph><strong>Type</strong></paragraph>
                <paragraph>Boolean; read-only.</paragraph>
                <transition></transition>
                <target refid="property-cansetexpression"></target>
            </section>
            <section dupnames="property.cansetexpression" ids="property-cansetexpression id3" names="property.cansetexpression">
                <title>Property.canSetExpression</title>
                <paragraph><literal>app.project.item(index).layer(index).propertySpec.canSetExpression</literal></paragraph>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>When true, the named property is of a type whose expression can be set by a script. See also <reference internal="True" refid="property-expression"><inline classes="std std-ref">Property expression</inline></reference> attribute.</paragraph>
                <paragraph><strong>Type</strong></paragraph>
                <paragraph>Boolean; read-only.</paragraph>
                <transition></transition>
                <target refid="property-canvaryovertime"></target>
            </section>
            <section dupnames="property.canvaryovertime" ids="property-canvaryovertime id4" names="property.canvaryovertime">
                <title>Property.canVaryOverTime</title>
                <paragraph><literal>app.project.item(index).layer(index).propertySpec.canVaryOverTime</literal></paragraph>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>When true, the named property can vary over time—that is, keyframe values or expressions can be written to this property.</paragraph>
                <paragraph><strong>Type</strong></paragraph>
                <paragraph>Boolean; read-only.</paragraph>
                <transition></transition>
                <target refid="property-dimensionsseparated"></target>
            </section>
            <section dupnames="property.dimensionsseparated" ids="property-dimensionsseparated id5" names="property.dimensionsseparated">
                <title>Property.dimensionsSeparated</title>
                <paragraph><literal>app.project.item(index).layer(index).propertySpec.dimensionsSeparated</literal></paragraph>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>When true, the property’s dimensions are represented as separate properties. For example, if the layer’s position is represented as X Position and Y Position properties in the Timeline panel, the Position property has this attribute set to true.</paragraph>
                <note>
                    <paragraph>This attribute applies only when the <reference internal="True" refid="property-isseparationleader"><inline classes="std std-ref">isSeparationLeader</inline></reference> attribute is true.</paragraph>
                </note>
                <paragraph><strong>Type</strong></paragraph>
                <paragraph>Boolean; read/write.</paragraph>
                <transition></transition>
                <target refid="property-essentialpropertysource"></target>
            </section>
            <section dupnames="property.essentialpropertysource" ids="property-essentialpropertysource id6" names="property.essentialpropertysource">
                <title>Property.essentialPropertySource</title>
                <paragraph><literal>app.project.item(index).layer(index).essentialProperty.property(index).essentialPropertySource</literal></paragraph>
                <note>
                    <paragraph>This functionality was added in After Effects 22.0 (2022)</paragraph>
                </note>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>Instance property on an Essential Property object which returns the original source Property which was used to create the Essential Property.</paragraph>
                <paragraph><strong>Type</strong></paragraph>
                <paragraph>Can be either:</paragraph>
                <bullet_list bullet="-">
                    <list_item>
                        <paragraph>A read/write <reference internal="True" refid="property"><inline classes="std std-ref">Property object</inline></reference>, in the case that the source object used to create the Essential Property was a Property</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>A read/write <reference internal="True" refuri="../layers/avlayer#avlayer"><inline classes="std std-ref">AVLayer object</inline></reference>, in the case that the source object used to create the Essential Property was a Media Replacement Footage item</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>Null if called on a non-Essential Property</paragraph>
                    </list_item>
                </bullet_list>
                <paragraph><strong>Example</strong></paragraph>
                <literal_block classes="code javascript" force_highlighting="False" language="javascript" linenos="False" xml:space="preserve"><inline classes="keyword declaration">var</inline> <inline classes="name other">firstComp</inline> <inline classes="operator">=</inline> <inline classes="name other">app</inline><inline classes="punctuation">.</inline><inline classes="name other">project</inline><inline classes="punctuation">.</inline><inline classes="name other">item</inline><inline classes="punctuation">(</inline><inline classes="literal number integer">1</inline><inline classes="punctuation">);</inline>
<inline classes="keyword declaration">var</inline> <inline classes="name other">opacityProp</inline> <inline classes="operator">=</inline> <inline classes="name other">firstComp</inline><inline classes="punctuation">.</inline><inline classes="name other">layer</inline><inline classes="punctuation">(</inline><inline classes="literal number integer">1</inline><inline classes="punctuation">).</inline><inline classes="name other">property</inline><inline classes="punctuation">(</inline><inline classes="literal string double">"Transform"</inline><inline classes="punctuation">).</inline><inline classes="name other">property</inline><inline classes="punctuation">(</inline><inline classes="literal string double">"Opacity"</inline><inline classes="punctuation">);</inline>

<inline classes="name other">opacityProp</inline><inline classes="punctuation">.</inline><inline classes="name other">addToMotionGraphicsTemplate</inline><inline classes="punctuation">(</inline><inline classes="name other">firstComp</inline><inline classes="punctuation">);</inline>

<inline classes="keyword declaration">var</inline> <inline classes="name other">secondComp</inline> <inline classes="operator">=</inline> <inline classes="name other">app</inline><inline classes="punctuation">.</inline><inline classes="name other">project</inline><inline classes="punctuation">.</inline><inline classes="name other">item</inline><inline classes="punctuation">(</inline><inline classes="literal number integer">2</inline><inline classes="punctuation">);</inline>
<inline classes="name other">secondComp</inline><inline classes="punctuation">.</inline><inline classes="name other">layers</inline><inline classes="punctuation">.</inline><inline classes="name other">add</inline><inline classes="punctuation">(</inline><inline classes="name other">firstComp</inline><inline classes="punctuation">);</inline>

<inline classes="keyword declaration">var</inline> <inline classes="name other">essentialOpacity</inline> <inline classes="operator">=</inline> <inline classes="name other">secondComp</inline><inline classes="punctuation">.</inline><inline classes="name other">layer</inline><inline classes="punctuation">(</inline><inline classes="literal number integer">1</inline><inline classes="punctuation">).</inline><inline classes="name other">essentialProperty</inline><inline classes="punctuation">.</inline><inline classes="name other">property</inline><inline classes="punctuation">(</inline><inline classes="literal number integer">1</inline><inline classes="punctuation">);</inline>
<inline classes="keyword">if</inline> <inline classes="punctuation">(</inline><inline classes="name other">essentialOpacity</inline><inline classes="punctuation">.</inline><inline classes="name other">essentialPropertySource</inline> <inline classes="operator">==</inline> <inline classes="name other">opacityProp</inline><inline classes="punctuation">)</inline> <inline classes="punctuation">{</inline>
  <inline classes="name other">alert</inline><inline classes="punctuation">(</inline><inline classes="literal string double">"You can get the source Property from an Essential Property!"</inline><inline classes="punctuation">);</inline>
<inline classes="punctuation">}</inline></literal_block>
                <transition></transition>
                <target refid="property-expression"></target>
            </section>
            <section dupnames="property.expression" ids="property-expression id7" names="property.expression">
                <title>Property.expression</title>
                <paragraph><literal>app.project.item(index).layer(index).propertySpec.expression</literal></paragraph>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>The expression for the named property. Writeable only when <reference internal="True" refid="property-cansetexpression"><inline classes="std std-ref">canSetExpression</inline></reference> for the named property is true. When you specify a value for this attribute, the string is evaluated.</paragraph>
                <bullet_list bullet="-">
                    <list_item>
                        <paragraph>If the string contains a valid expression, <reference internal="True" refid="property-expressionenabled"><inline classes="std std-ref">expressionEnabled</inline></reference> becomes true.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>If the string does not contain a valid expression, an error is generated, and <reference internal="True" refid="property-expressionenabled"><inline classes="std std-ref">expressionEnabled</inline></reference> becomes false.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>If you set the attribute to the empty string, <reference internal="True" refid="property-expressionenabled"><inline classes="std std-ref">expressionEnabled</inline></reference> becomes false, but no error is generated.</paragraph>
                    </list_item>
                </bullet_list>
                <paragraph><strong>Type</strong></paragraph>
                <paragraph>String; read/write if <reference internal="True" refid="property-cansetexpression"><inline classes="std std-ref">canSetExpression</inline></reference> for the named property is true.</paragraph>
                <transition></transition>
                <target refid="property-expressionenabled"></target>
            </section>
            <section dupnames="property.expressionenabled" ids="property-expressionenabled id8" names="property.expressionenabled">
                <title>Property.expressionEnabled</title>
                <paragraph><literal>app.project.item(index).layer(index).propertySpec.expressionEnabled</literal></paragraph>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>When true, the named property uses its associated expression to generate a value. When false, the keyframe information or static value of the property is used. This attribute can be set to true only if <reference internal="True" refid="property-cansetexpression"><inline classes="std std-ref">canSetExpression</inline></reference> for the named property is true and <reference internal="True" refid="property-expression"><inline classes="std std-ref">expression</inline></reference> contains a valid expression string.</paragraph>
                <paragraph><strong>Type</strong></paragraph>
                <paragraph>Boolean; read/write.</paragraph>
                <transition></transition>
                <target refid="property-expressionerror"></target>
            </section>
            <section dupnames="property.expressionerror" ids="property-expressionerror id9" names="property.expressionerror">
                <title>Property.expressionError</title>
                <paragraph><literal>app.project.item(index).layer(index).propertySpec.expressionError</literal></paragraph>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>Contains the error, if any, generated by evaluation of the string most recently set in <reference internal="True" refid="property-expression"><inline classes="std std-ref">expression</inline></reference>. If no expression string has been specified, or if the last expression string evaluated without error, contains the empty string <literal>("")</literal>.</paragraph>
                <paragraph><strong>Type</strong></paragraph>
                <paragraph>String; read-only.</paragraph>
                <transition></transition>
                <target refid="property-hasmax"></target>
            </section>
            <section dupnames="property.hasmax" ids="property-hasmax id10" names="property.hasmax">
                <title>Property.hasMax</title>
                <paragraph><literal>app.project.item(index).layer(index).propertySpec.hasMax</literal></paragraph>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>When true, there is a maximum permitted value for the named property; otherwise false.</paragraph>
                <paragraph><strong>Type</strong></paragraph>
                <paragraph>Boolean; read-only.</paragraph>
                <transition></transition>
                <target refid="property-hasmin"></target>
            </section>
            <section dupnames="property.hasmin" ids="property-hasmin id11" names="property.hasmin">
                <title>Property.hasMin</title>
                <paragraph><literal>app.project.item(index).layer(index).propertySpec.hasMin</literal></paragraph>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>When true, there is a minimum permitted value for the named property; otherwise false.</paragraph>
                <paragraph><strong>Type</strong></paragraph>
                <paragraph>Boolean; read-only.</paragraph>
                <transition></transition>
                <target refid="property-isdropdowneffect"></target>
            </section>
            <section dupnames="property.isdropdowneffect" ids="property-isdropdowneffect id12" names="property.isdropdowneffect">
                <title>Property.isDropdownEffect</title>
                <paragraph><literal>app.project.item(index).layer(index).propertySpec.isDropdownEffect</literal></paragraph>
                <note>
                    <paragraph>This functionality was added in After Effects 17.0.1 (2020)</paragraph>
                </note>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>When true, the property is the Menu property of a Dropdown Menu Control effect and can have its items updated with <reference internal="True" refid="property-setpropertyparameters"><inline classes="std std-ref">setPropertyParameters</inline></reference>.</paragraph>
                <paragraph><strong>Examples</strong></paragraph>
                <literal_block classes="code javascript" force_highlighting="False" language="javascript" linenos="False" xml:space="preserve"><inline classes="name other">appliedEffect</inline><inline classes="punctuation">.</inline><inline classes="name other">property</inline><inline classes="punctuation">(</inline><inline classes="literal string double">"Menu"</inline><inline classes="punctuation">).</inline><inline classes="name other">isDropdownEffect</inline><inline classes="punctuation">;</inline>    <inline classes="comment single">// true
</inline><inline classes="name other">appliedEffect</inline><inline classes="punctuation">.</inline><inline classes="name other">property</inline><inline classes="punctuation">(</inline><inline classes="literal string double">"Color"</inline><inline classes="punctuation">).</inline><inline classes="name other">isDropdownEffect</inline><inline classes="punctuation">;</inline>   <inline classes="comment single">// false
</inline><inline classes="name other">appliedEffect</inline><inline classes="punctuation">.</inline><inline classes="name other">property</inline><inline classes="punctuation">(</inline><inline classes="literal string double">"Feather"</inline><inline classes="punctuation">).</inline><inline classes="name other">isDropdownEffect</inline><inline classes="punctuation">;</inline> <inline classes="comment single">// false</inline></literal_block>
                <paragraph><strong>Type</strong></paragraph>
                <paragraph>Boolean; read-only.</paragraph>
                <transition></transition>
                <target refid="property-isseparationfollower"></target>
            </section>
            <section dupnames="property.isseparationfollower" ids="property-isseparationfollower id13" names="property.isseparationfollower">
                <title>Property.isSeparationFollower</title>
                <paragraph><literal>app.project.item(index).layer(index).propertySpec.isSeparationFollower</literal></paragraph>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>When true, the property represents one of the separated dimensions for a multidimensional property. For example, the X Position property has this attribute set to true.</paragraph>
                <note>
                    <paragraph>The original, consolidated, multidimensional property is the “separation leader” and the new, separated, single-dimensional properties are its “separation followers”.</paragraph>
                </note>
                <paragraph><strong>Type</strong></paragraph>
                <paragraph>Boolean; read-only.</paragraph>
                <transition></transition>
                <target refid="property-isseparationleader"></target>
            </section>
            <section dupnames="property.isseparationleader" ids="property-isseparationleader id14" names="property.isseparationleader">
                <title>Property.isSeparationLeader</title>
                <paragraph><literal>app.project.item(index).layer(index).propertySpec.isSeparationLeader</literal></paragraph>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>When true, the property is multidimensional and can be separated. For example, the Position property has this attribute set to true.</paragraph>
                <note>
                    <paragraph>The original, consolidated, multidimensional property is the “separation leader” and the new, separated, single-dimensional properties are its “separation followers”.</paragraph>
                </note>
                <paragraph><strong>Type</strong></paragraph>
                <paragraph>Boolean; read-only.</paragraph>
                <transition></transition>
                <target refid="property-isspatial"></target>
            </section>
            <section dupnames="property.isspatial" ids="property-isspatial id15" names="property.isspatial">
                <title>Property.isSpatial</title>
                <paragraph><literal>app.project.item(index).layer(index).propertySpec.isSpatial</literal></paragraph>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>When true, the named property defines a spatial value. Examples are position and effect point controls.</paragraph>
                <paragraph><strong>Type</strong></paragraph>
                <paragraph>Boolean; read-only.</paragraph>
                <transition></transition>
                <target refid="property-istimevarying"></target>
            </section>
            <section dupnames="property.istimevarying" ids="property-istimevarying id16" names="property.istimevarying">
                <title>Property.isTimeVarying</title>
                <paragraph><literal>app.project.item(index).layer(index).propertySpec.isTimeVarying</literal></paragraph>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>When true, the named property is time varying — that is, it has keyframes or an enabled expression. When this attribute is true, the attribute <literal>canVaryOverTime</literal>
                    must also be true.</paragraph>
                <paragraph><strong>Type</strong></paragraph>
                <paragraph>Boolean; read-only.</paragraph>
                <transition></transition>
                <target refid="property-maxvalue"></target>
            </section>
            <section dupnames="property.maxvalue" ids="property-maxvalue id17" names="property.maxvalue">
                <title>Property.maxValue</title>
                <paragraph><literal>app.project.item(index).layer(index).propertySpec.maxValue</literal></paragraph>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>The maximum permitted value of the named property. If the <literal>hasMax</literal> attribute is false, an exception occurs, and an error is generated.</paragraph>
                <paragraph><strong>Type</strong></paragraph>
                <paragraph>Floating-point value; read-only.</paragraph>
                <transition></transition>
                <target refid="property-minvalue"></target>
            </section>
            <section dupnames="property.minvalue" ids="property-minvalue id18" names="property.minvalue">
                <title>Property.minValue</title>
                <paragraph><literal>app.project.item(index).layer(index).propertySpec.minValue</literal></paragraph>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>The minimum permitted value of the named property. If the <literal>hasMin</literal> attribute is false, an exception occurs, and an error is generated.</paragraph>
                <paragraph><strong>Type</strong></paragraph>
                <paragraph>Floating-point value; read-only.</paragraph>
                <transition></transition>
                <target refid="property-numkeys"></target>
            </section>
            <section dupnames="property.numkeys" ids="property-numkeys id19" names="property.numkeys">
                <title>Property.numKeys</title>
                <paragraph><literal>app.project.item(index).layer(index).propertySpec.numKeys</literal></paragraph>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>The number of keyframes in the named property. If the value is 0, the property is not being keyframed.</paragraph>
                <paragraph><strong>Type</strong></paragraph>
                <paragraph>Integer; read-only.</paragraph>
                <transition></transition>
                <target refid="property-propertyindex"></target>
            </section>
            <section dupnames="property.propertyindex" ids="property-propertyindex id20" names="property.propertyindex">
                <title>Property.propertyIndex</title>
                <paragraph><literal>app.project.item(index).layer(index).propertySpec.propertyIndex</literal></paragraph>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>The position index of the named property. The first property is at index position 1.</paragraph>
                <paragraph><strong>Type</strong></paragraph>
                <paragraph>Integer; read-only.</paragraph>
                <transition></transition>
                <target refid="property-propertyvaluetype"></target>
            </section>
            <section dupnames="property.propertyvaluetype" ids="property-propertyvaluetype id21" names="property.propertyvaluetype">
                <title>Property.propertyValueType</title>
                <paragraph><literal>app.project.item(index).layer(index).propertySpec.propertyValueType</literal></paragraph>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>The type of value stored in the named property. The <literal>PropertyValueType</literal> enumeration has one value for each type of data that can be stored in or retrieved from a property. Each type of data is stored and retrieved in a different kind of structure. All property objects store data according to one of these categories. For example, a 3D spatial property (such as a layer’s position) is stored as an array of three floating-point values. When setting a value for position, pass in such an array, as follows: <literal>mylayer.property("position").setValue([10, 20, 0]);</literal></paragraph>
                <paragraph>In contrast, a shape property (such as a layer’s mask shape) is stored as a Shape object. When setting a value for a shape, pass a Shape object, as follows:</paragraph>
                <literal_block classes="code javascript" force_highlighting="False" language="javascript" linenos="False" xml:space="preserve"><inline classes="keyword declaration">var</inline> <inline classes="name other">myShape</inline> <inline classes="operator">=</inline> <inline classes="keyword">new</inline> <inline classes="name other">Shape</inline><inline classes="punctuation">();</inline>
<inline classes="name other">myShape</inline><inline classes="punctuation">.</inline><inline classes="name other">vertices</inline> <inline classes="operator">=</inline> <inline classes="punctuation">[[</inline><inline classes="literal number integer">0</inline><inline classes="punctuation">,</inline><inline classes="literal number integer">0</inline><inline classes="punctuation">],</inline> <inline classes="punctuation">[</inline><inline classes="literal number integer">0</inline><inline classes="punctuation">,</inline><inline classes="literal number integer">100</inline><inline classes="punctuation">],</inline> <inline classes="punctuation">[</inline><inline classes="literal number integer">100</inline><inline classes="punctuation">,</inline><inline classes="literal number integer">100</inline><inline classes="punctuation">],</inline> <inline classes="punctuation">[</inline><inline classes="literal number integer">100</inline><inline classes="punctuation">,</inline><inline classes="literal number integer">0</inline><inline classes="punctuation">]];</inline>
<inline classes="keyword declaration">var</inline> <inline classes="name other">myMask</inline> <inline classes="operator">=</inline> <inline classes="name other">mylayer</inline><inline classes="punctuation">.</inline><inline classes="name other">property</inline><inline classes="punctuation">(</inline><inline classes="literal string double">"ADBE Mask Parade"</inline><inline classes="punctuation">).</inline><inline classes="name other">property</inline><inline classes="punctuation">(</inline><inline classes="literal number integer">1</inline><inline classes="punctuation">);</inline>
<inline classes="name other">myMask</inline><inline classes="punctuation">.</inline><inline classes="name other">property</inline><inline classes="punctuation">(</inline><inline classes="literal string double">"ADBE Mask Shape"</inline><inline classes="punctuation">).</inline><inline classes="name other">setValue</inline><inline classes="punctuation">(</inline><inline classes="name other">myShape</inline><inline classes="punctuation">);</inline></literal_block>
                <paragraph><strong>Type</strong></paragraph>
                <paragraph>A <literal>PropertyValueType</literal> enumerated value; read/write. One of:</paragraph>
                <bullet_list bullet="-">
                    <list_item>
                        <paragraph><literal>PropertyValueType.NO_VALUE</literal>: Stores no data.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><literal>PropertyValueType.ThreeD_SPATIAL</literal>: Array of three floating-point positional values. For example, an Anchor Point value might be [10.0, 20.2, 0.0]</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><literal>PropertyValueType.ThreeD</literal>: Array of three floating-point quantitative values. For example, a Scale value might be [100.0, 20.2, 0.0]</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><literal>PropertyValueType.TwoD_SPATIAL</literal>: Array of 2 floating-point positional values. For example, an Anchor Point value might be [5.1, 10.0]</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><literal>PropertyValueType.TwoD</literal>: Array of 2 floating-point quantitative values. For example, a Scale value might be [5.1, 100.0]</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><literal>PropertyValueType.OneD</literal>: A floating-point value.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><literal>PropertyValueType.COLOR</literal>:Array of 4 floating-point values in the range <literal>[0.0..1.0]</literal>. For example, [0.8, 0.3, 0.1, 1.0]</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><literal>PropertyValueType.CUSTOM_VALUE</literal> : Custom property value, such as the Histogram property for the Levels effect.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><literal>PropertyValueType.MARKER</literal>: <reference internal="True" refuri="../other/markervalue#markervalue"><inline classes="std std-ref">MarkerValue object</inline></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><literal>PropertyValueType.LAYER_INDEX</literal>: Integer; a value of 0 means no layer.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><literal>PropertyValueType.MASK_INDEX</literal>: Integer; a value of 0 means no mask.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><literal>PropertyValueType.SHAPE</literal>: <reference internal="True" refuri="../other/shape#shape"><inline classes="std std-ref">Shape object</inline></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><literal>PropertyValueType.TEXT_DOCUMENT</literal>: <reference internal="True" refuri="../other/textdocument#textdocument"><inline classes="std std-ref">TextDocument object</inline></reference></paragraph>
                    </list_item>
                </bullet_list>
                <transition></transition>
                <target refid="property-selectedkeys"></target>
            </section>
            <section dupnames="property.selectedkeys" ids="property-selectedkeys id22" names="property.selectedkeys">
                <title>Property.selectedKeys</title>
                <paragraph><literal>app.project.item(index).layer(index).propertySpec.selectedKeys</literal></paragraph>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>The indices of all the selected keyframes in the named property. If no keyframes are selected, or if the property has no keyframes, returns an empty array.</paragraph>
                <paragraph><strong>Type</strong></paragraph>
                <paragraph>Array of integers; read-only.</paragraph>
                <transition></transition>
                <target refid="property-separationdimension"></target>
            </section>
            <section dupnames="property.separationdimension" ids="property-separationdimension id23" names="property.separationdimension">
                <title>Property.separationDimension</title>
                <paragraph><literal>app.project.item(index).layer(index).propertySpec.separationDimension</literal></paragraph>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>For a separated follower, the dimension number it represents in the multidimensional leader. The first dimension starts at 0. For example, the Y Position property has a <literal>separationDimension</literal> value of 1; X Position has a value of 0.</paragraph>
                <paragraph><strong>Type</strong></paragraph>
                <paragraph>Integer; read-only.</paragraph>
                <transition></transition>
                <target refid="property-separationleader"></target>
            </section>
            <section dupnames="property.separationleader" ids="property-separationleader id24" names="property.separationleader">
                <title>Property.separationLeader</title>
                <paragraph><literal>app.project.item(index).layer(index).propertySpec.separationLeader</literal></paragraph>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>The original multidimensional property for this separated follower. For example, if the current property is Y Position, this attribute’s value points to the Position property.</paragraph>
                <note>
                    <paragraph>The original, consolidated, multidimensional property is the “separation leader” and the new, separated, single-dimensional properties are its “separation followers”.</paragraph>
                </note>
                <paragraph><strong>Type</strong></paragraph>
                <paragraph>Property object; read-only.</paragraph>
                <transition></transition>
                <target refid="property-unitstext"></target>
            </section>
            <section dupnames="property.unitstext" ids="property-unitstext id25" names="property.unitstext">
                <title>Property.unitsText</title>
                <paragraph><literal>app.project.item(index).layer(index).propertySpec.unitsText</literal></paragraph>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>The text description of the units in which the value is expressed.</paragraph>
                <paragraph><strong>Type</strong></paragraph>
                <paragraph>String; read-only.</paragraph>
                <transition></transition>
                <target refid="property-value"></target>
            </section>
            <section dupnames="property.value" ids="property-value id26" names="property.value">
                <title>Property.value</title>
                <paragraph><literal>app.project.item(index).layer(index).propertySpec.value</literal></paragraph>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>The value of the named property at the current time.</paragraph>
                <bullet_list bullet="-">
                    <list_item>
                        <paragraph>If <literal>expressionEnabled</literal> is true, returns the evaluated expression value.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>If there are keyframes, returns the keyframed value at the current time.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>Otherwise, returns the static value.</paragraph>
                    </list_item>
                </bullet_list>
                <paragraph>The type of value returned depends on the property value type. See <reference internal="True" refid="propertyexamples"><inline classes="std std-ref">examples for Property object</inline></reference>.</paragraph>
                <paragraph><strong>Type</strong></paragraph>
                <paragraph>A value appropriate for the type of the property (see <reference internal="True" refid="property-propertyvaluetype"><inline classes="std std-ref">Property.propertyValueType</inline></reference>); read-only.</paragraph>
            </section>
        </section>
        <transition></transition>
        <section ids="methods" names="methods">
            <title>Methods</title>
            <target refid="property-addkey"></target>
            <section ids="property-addkey id27" names="property.addkey() property.addkey">
                <title>Property.addKey()</title>
                <paragraph><literal>app.project.item(index).layer(index).propertySpec.addKey(time)</literal></paragraph>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>Adds a new keyframe or marker to the named property at the specified time and returns the index of the new keyframe.</paragraph>
                <paragraph><strong>Parameters</strong></paragraph>
                <table>
                    <tgroup cols="2">
                        <colspec colwidth="8"></colspec>
                        <colspec colwidth="68"></colspec>
                        <tbody>
                            <row>
                                <entry>
                                    <paragraph><literal>time</literal></paragraph>
                                </entry>
                                <entry>
                                    <paragraph>The time, in seconds, at which to add the keyframe. A floating-point
                                        value. The beginning of the composition is 0.</paragraph>
                                </entry>
                            </row>
                        </tbody>
                    </tgroup>
                </table>
                <paragraph><strong>Returns</strong></paragraph>
                <paragraph>Integer; the index of the new keyframe or marker.</paragraph>
                <transition></transition>
                <target refid="property-addtomotiongraphicstemplate"></target>
            </section>
            <section ids="property-addtomotiongraphicstemplate id28" names="property.addtomotiongraphicstemplate() property.addtomotiongraphicstemplate">
                <title>Property.addToMotionGraphicsTemplate()</title>
                <paragraph><literal>app.project.item(index).layer(index).propertySpec.addToMotionGraphicsTemplate(comp)</literal></paragraph>
                <note>
                    <paragraph>This functionality was added in After Effects 15.0 (CC 2018)</paragraph>
                </note>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>Adds the property to the Essential Graphics panel for the specified composition.</paragraph>
                <paragraph>Returns true if the property is successfully added, false otherwise.</paragraph>
                <paragraph>If the property is not added, it is either because it is not one of the supported property types or the property has already been added to the EGP for that composition. After Effects will present a warning dialog if the property cannot be added to the EGP.</paragraph>
                <paragraph>Use the <reference internal="True" refid="property-canaddtomotiongraphicstemplate"><inline classes="std std-ref">Property.canAddToMotionGraphicsTemplate()</inline></reference> method to test whether the property can be added to a Motion Graphics template.</paragraph>
                <paragraph><strong>Parameters</strong></paragraph>
                <table>
                    <tgroup cols="2">
                        <colspec colwidth="8"></colspec>
                        <colspec colwidth="68"></colspec>
                        <tbody>
                            <row>
                                <entry>
                                    <paragraph><literal>comp</literal></paragraph>
                                </entry>
                                <entry>
                                    <paragraph>The composition that you wish to add the property to, a CompItem.
                                        Required.</paragraph>
                                </entry>
                            </row>
                        </tbody>
                    </tgroup>
                </table>
                <paragraph><strong>Returns</strong></paragraph>
                <paragraph>Boolean.</paragraph>
                <transition></transition>
                <target refid="property-addtomotiongraphicstemplateas"></target>
            </section>
            <section ids="property-addtomotiongraphicstemplateas id29" names="property.addtomotiongraphicstemplateas() property.addtomotiongraphicstemplateas">
                <title>Property.addToMotionGraphicsTemplateAs()</title>
                <paragraph><literal>app.project.item(index).layer(index).propertySpec.addToMotionGraphicsTemplateAs(comp, name)</literal></paragraph>
                <note>
                    <paragraph>This functionality was added in After Effects 16.1 (CC 2019)</paragraph>
                </note>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>Adds the property to the Essential Graphics panel for the specified composition, but with an additional option to give the EGP property a custom name.</paragraph>
                <paragraph>Returns true if the property is successfully added, false otherwise.</paragraph>
                <paragraph>If the property is not added, it is either because it is not one of the supported property types or the property has already been added to the EGP for that composition. After Effects will present a warning dialog if the property cannot be added to the EGP.</paragraph>
                <paragraph>Use the <reference internal="True" refid="property-canaddtomotiongraphicstemplate"><inline classes="std std-ref">Property.canAddToMotionGraphicsTemplate()</inline></reference> method to test whether the property can be added to a Motion Graphics template.</paragraph>
                <paragraph><strong>Parameters</strong></paragraph>
                <table>
                    <tgroup cols="2">
                        <colspec colwidth="8"></colspec>
                        <colspec colwidth="68"></colspec>
                        <tbody>
                            <row>
                                <entry>
                                    <paragraph><literal>comp</literal></paragraph>
                                </entry>
                                <entry>
                                    <paragraph>The composition that you wish to add the property to, a CompItem.
                                        Required.</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph><literal>name</literal></paragraph>
                                </entry>
                                <entry>
                                    <paragraph>A string for the new name. Required.</paragraph>
                                </entry>
                            </row>
                        </tbody>
                    </tgroup>
                </table>
                <paragraph><strong>Returns</strong></paragraph>
                <paragraph>Boolean.</paragraph>
                <transition></transition>
                <target refid="property-canaddtomotiongraphicstemplate"></target>
            </section>
            <section ids="property-canaddtomotiongraphicstemplate id30" names="property.canaddtomotiongraphicstemplate() property.canaddtomotiongraphicstemplate">
                <title>Property.canAddToMotionGraphicsTemplate()</title>
                <paragraph><literal>app.project.item(index).layer(index).propertySpec.canAddToMotionGraphicsTemplate(comp)</literal></paragraph>
                <note>
                    <paragraph>This functionality was added in After Effects 15.0 (CC 2018)</paragraph>
                </note>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>Test whether or not the property can be added to the Essential Graphics panel for the specified composition.</paragraph>
                <paragraph>Returns true if the property can be added, false otherwise.</paragraph>
                <paragraph>If the property can not be added, it is either because it is not one of the supported property types or the property has already been added to the EGP for that composition. After Effects will present a warning dialog if the property cannot be added to the EGP.</paragraph>
                <paragraph>Supported property types are:</paragraph>
                <bullet_list bullet="-">
                    <list_item>
                        <paragraph>Checkbox</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>Color</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>Numerical Slider (i.e., a single-value numerical property, such as Transform &gt; Opacity or the Slider Control expression control effect)</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>Source Text</paragraph>
                    </list_item>
                </bullet_list>
                <paragraph><strong>Parameters</strong></paragraph>
                <table>
                    <tgroup cols="2">
                        <colspec colwidth="8"></colspec>
                        <colspec colwidth="68"></colspec>
                        <tbody>
                            <row>
                                <entry>
                                    <paragraph><literal>comp</literal></paragraph>
                                </entry>
                                <entry>
                                    <paragraph>The composition that you wish to add the property to, a CompItem.
                                        Required.</paragraph>
                                </entry>
                            </row>
                        </tbody>
                    </tgroup>
                </table>
                <paragraph><strong>Returns</strong></paragraph>
                <paragraph>Boolean.</paragraph>
                <transition></transition>
                <target refid="property-getseparationfollower"></target>
            </section>
            <section ids="property-getseparationfollower id31" names="property.getseparationfollower() property.getseparationfollower">
                <title>Property.getSeparationFollower()</title>
                <paragraph><literal>app.project.item(index).layer(index).propertySpec.getSeparationFollower(dim)</literal></paragraph>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>For a separated, multidimensional property, retrieves a specific follower property. For example, you can use this method on the Position property to access the separated X Position and Y Position properties</paragraph>
                <note>
                    <paragraph>This attribute applies only when the <reference internal="True" refid="property-isseparationleader"><inline classes="std std-ref">isSeparationLeader</inline></reference> attribute is true.</paragraph>
                </note>
                <paragraph><strong>Parameters</strong></paragraph>
                <table>
                    <tgroup cols="2">
                        <colspec colwidth="7"></colspec>
                        <colspec colwidth="37"></colspec>
                        <tbody>
                            <row>
                                <entry>
                                    <paragraph><literal>dim</literal></paragraph>
                                </entry>
                                <entry>
                                    <paragraph>The dimension number (starting at 0).</paragraph>
                                </entry>
                            </row>
                        </tbody>
                    </tgroup>
                </table>
                <paragraph><strong>Returns</strong></paragraph>
                <paragraph>Property object, or an error if the property is not multidimensional or does not have the specified dimension.</paragraph>
                <transition></transition>
                <target refid="property-isinterpolationtypevalid"></target>
            </section>
            <section ids="property-isinterpolationtypevalid id32" names="property.isinterpolationtypevalid() property.isinterpolationtypevalid">
                <title>Property.isInterpolationTypeValid()</title>
                <paragraph><literal>app.project.item(index).layer(index).propertySpec.isInterpolationTypeValid(type)</literal></paragraph>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>Returns true if the named property can be interpolated using the specified keyframe interpolation type.</paragraph>
                <paragraph><strong>Parameters</strong></paragraph>
                <paragraph><strong>Type</strong></paragraph>
                <paragraph>A <literal>KeyframeInterpolationType</literal> enumerated value; one of:</paragraph>
                <bullet_list bullet="-">
                    <list_item>
                        <paragraph><literal>KeyframeInterpolationType.LINEAR</literal></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><literal>KeyframeInterpolationType.BEZIER</literal></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><literal>KeyframeInterpolationType.HOLD</literal></paragraph>
                    </list_item>
                </bullet_list>
                <paragraph><strong>Returns</strong></paragraph>
                <paragraph>Boolean.</paragraph>
                <transition></transition>
                <target refid="property-keyininterpolationtype"></target>
            </section>
            <section ids="property-keyininterpolationtype id33" names="property.keyininterpolationtype() property.keyininterpolationtype">
                <title>Property.keyInInterpolationType()</title>
                <paragraph><literal>app.project.item(index).layer(index).propertySpec.keyInInterpolationType(keyIndex)</literal></paragraph>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>Returns the ‘in’ interpolation type for the specified keyframe.</paragraph>
                <paragraph><strong>Parameters</strong></paragraph>
                <table>
                    <tgroup cols="2">
                        <colspec colwidth="12"></colspec>
                        <colspec colwidth="51"></colspec>
                        <tbody>
                            <row>
                                <entry>
                                    <paragraph><literal>keyIndex</literal></paragraph>
                                </entry>
                                <entry>
                                    <paragraph>The index for the keyframe. An integer in the range
                                        <literal>[1..numKeys]</literal>, as returned by the
                                        <reference internal="True" refid="property-addkey"><inline classes="std std-ref">addKey</inline></reference> or
                                        <reference internal="True" refid="property-nearestkeyindex"><inline classes="std std-ref">nearestKeyIndex</inline></reference>.</paragraph>
                                </entry>
                            </row>
                        </tbody>
                    </tgroup>
                </table>
                <paragraph><strong>Returns</strong></paragraph>
                <paragraph>A <literal>KeyframeInterpolationType</literal> enumerated value; one of:</paragraph>
                <bullet_list bullet="-">
                    <list_item>
                        <paragraph><literal>KeyframeInterpolationType.LINEAR</literal></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><literal>KeyframeInterpolationType.BEZIER</literal></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><literal>KeyframeInterpolationType.HOLD</literal></paragraph>
                    </list_item>
                </bullet_list>
                <transition></transition>
                <target refid="property-keyinspatialtangent"></target>
            </section>
            <section ids="property-keyinspatialtangent id34" names="property.keyinspatialtangent() property.keyinspatialtangent">
                <title>Property.keyInSpatialTangent()</title>
                <paragraph><literal>app.project.item(index).layer(index).propertySpec.keyInSpatialTangent(keyIndex)</literal></paragraph>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>Returns the incoming spatial tangent for the specified keyframe, if the named property is spatial (that is, the value type is <literal>TwoD_SPATIALorThreeD_SPATIAL</literal>).</paragraph>
                <paragraph><strong>Parameters</strong></paragraph>
                <table>
                    <tgroup cols="2">
                        <colspec colwidth="12"></colspec>
                        <colspec colwidth="51"></colspec>
                        <tbody>
                            <row>
                                <entry>
                                    <paragraph><literal>keyIndex</literal></paragraph>
                                </entry>
                                <entry>
                                    <paragraph>The index for the keyframe. An integer in the range
                                        <literal>[1..numKeys]</literal>, as returned by the
                                        <reference internal="True" refid="property-addkey"><inline classes="std std-ref">addKey</inline></reference> or
                                        <reference internal="True" refid="property-nearestkeyindex"><inline classes="std std-ref">nearestKeyIndex</inline></reference>.</paragraph>
                                </entry>
                            </row>
                        </tbody>
                    </tgroup>
                </table>
                <paragraph><strong>Returns</strong></paragraph>
                <paragraph>Array of floating-point values:</paragraph>
                <bullet_list bullet="-">
                    <list_item>
                        <paragraph>If the property value type is <literal>PropertyValueType.TwoD_SPATIAL</literal>, the array contains 2 floating-point values.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>If the property value type is <literal>PropertyValueType.ThreeD_SPATIAL</literal>, the array contains 3 floating-point values.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>If the property value type is neither of these types, an exception is generated.</paragraph>
                    </list_item>
                </bullet_list>
                <transition></transition>
                <target refid="property-keyintemporalease"></target>
            </section>
            <section ids="property-keyintemporalease id35" names="property.keyintemporalease() property.keyintemporalease">
                <title>Property.keyInTemporalEase()</title>
                <paragraph><literal>app.project.item(index).layer(index).propertySpec.keyInTemporalEase(keyIndex)</literal></paragraph>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>Returns the incoming temporal ease for the specified keyframe.</paragraph>
                <paragraph><strong>Parameters</strong></paragraph>
                <table>
                    <tgroup cols="2">
                        <colspec colwidth="12"></colspec>
                        <colspec colwidth="51"></colspec>
                        <tbody>
                            <row>
                                <entry>
                                    <paragraph><literal>keyIndex</literal></paragraph>
                                </entry>
                                <entry>
                                    <paragraph>The index for the keyframe. An integer in the range
                                        <literal>[1..numKeys]</literal>, as returned by the
                                        <reference internal="True" refid="property-addkey"><inline classes="std std-ref">addKey</inline></reference> or
                                        <reference internal="True" refid="property-nearestkeyindex"><inline classes="std std-ref">nearestKeyIndex</inline></reference>.</paragraph>
                                </entry>
                            </row>
                        </tbody>
                    </tgroup>
                </table>
                <paragraph><strong>Returns</strong></paragraph>
                <paragraph>Array of <reference internal="True" refuri="../other/keyframeease#keyframeease"><inline classes="std std-ref">KeyframeEase objects</inline></reference>:</paragraph>
                <bullet_list bullet="-">
                    <list_item>
                        <paragraph>If the property value type is <literal>PropertyValueType.TwoD</literal>, the array contains 2 objects.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>If the property value type is <literal>PropertyValueType.ThreeD</literal>, the array contains 3 objects.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>For any other value type, the array contains 1 object.</paragraph>
                    </list_item>
                </bullet_list>
                <transition></transition>
                <target refid="property-keylabel"></target>
            </section>
            <section ids="property-keylabel id36" names="property.keylabel() property.keylabel">
                <title>Property.keyLabel()</title>
                <paragraph><literal>app.project.item(index).layer(index).propertySpec.keyLabel(keyIndex)</literal></paragraph>
                <note>
                    <paragraph>This functionality was added in After Effects 22.6.</paragraph>
                </note>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>The label color for the keyframe. Colors are represented by their number (0 for None, or 1 to 16 for one of the preset colors in the Labels preferences).</paragraph>
                <paragraph>Read only. Keyframe color labels can be set by <reference internal="True" refid="property-setlabelatkey"><inline classes="std std-ref">setLabelAtKey</inline></reference>.</paragraph>
                <paragraph><strong>Parameters</strong></paragraph>
                <table>
                    <tgroup cols="2">
                        <colspec colwidth="12"></colspec>
                        <colspec colwidth="51"></colspec>
                        <tbody>
                            <row>
                                <entry>
                                    <paragraph><literal>keyIndex</literal></paragraph>
                                </entry>
                                <entry>
                                    <paragraph>The index for the keyframe. An integer in the range
                                        <literal>[1..numKeys]</literal>, as returned by the
                                        <reference internal="True" refid="property-addkey"><inline classes="std std-ref">addKey</inline></reference> or
                                        <reference internal="True" refid="property-nearestkeyindex"><inline classes="std std-ref">nearestKeyIndex</inline></reference>.</paragraph>
                                </entry>
                            </row>
                        </tbody>
                    </tgroup>
                </table>
                <paragraph><strong>Returns</strong></paragraph>
                <paragraph>Integer (0 to 16); read only.</paragraph>
                <transition></transition>
                <target refid="property-keyoutinterpolationtype"></target>
            </section>
            <section ids="property-keyoutinterpolationtype id37" names="property.keyoutinterpolationtype() property.keyoutinterpolationtype">
                <title>Property.keyOutInterpolationType()</title>
                <paragraph><literal>app.project.item(index).layer(index).propertySpec.keyOutInterpolationType(keyIndex)</literal></paragraph>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>Returns the outgoing interpolation type for the specified keyframe.</paragraph>
                <paragraph><strong>Parameters</strong></paragraph>
                <table>
                    <tgroup cols="2">
                        <colspec colwidth="12"></colspec>
                        <colspec colwidth="51"></colspec>
                        <tbody>
                            <row>
                                <entry>
                                    <paragraph><literal>keyIndex</literal></paragraph>
                                </entry>
                                <entry>
                                    <paragraph>The index for the keyframe. An integer in the range
                                        <literal>[1..numKeys]</literal>, as returned by the
                                        <reference internal="True" refid="property-addkey"><inline classes="std std-ref">addKey</inline></reference> or
                                        <reference internal="True" refid="property-nearestkeyindex"><inline classes="std std-ref">nearestKeyIndex</inline></reference>.</paragraph>
                                </entry>
                            </row>
                        </tbody>
                    </tgroup>
                </table>
                <paragraph><strong>Returns</strong></paragraph>
                <paragraph>A <literal>KeyframeInterpolationType</literal> enumerated value; one of:</paragraph>
                <bullet_list bullet="-">
                    <list_item>
                        <paragraph><literal>KeyframeInterpolationType.LINEAR</literal></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><literal>KeyframeInterpolationType.BEZIER</literal></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><literal>KeyframeInterpolationType.HOLD</literal></paragraph>
                    </list_item>
                </bullet_list>
                <transition></transition>
                <target refid="property-keyoutspatialtangent"></target>
            </section>
            <section ids="property-keyoutspatialtangent id38" names="property.keyoutspatialtangent() property.keyoutspatialtangent">
                <title>Property.keyOutSpatialTangent()</title>
                <paragraph><literal>app.project.item(index).layer(index).propertySpec.keyOutSpatialTangent(keyIndex)</literal></paragraph>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>Returns the outgoing spatial tangent for the specified keyframe.</paragraph>
                <paragraph><strong>Parameters</strong></paragraph>
                <table>
                    <tgroup cols="2">
                        <colspec colwidth="12"></colspec>
                        <colspec colwidth="51"></colspec>
                        <tbody>
                            <row>
                                <entry>
                                    <paragraph><literal>keyIndex</literal></paragraph>
                                </entry>
                                <entry>
                                    <paragraph>The index for the keyframe. An integer in the range
                                        <literal>[1..numKeys]</literal>, as returned by the
                                        <reference internal="True" refid="property-addkey"><inline classes="std std-ref">addKey</inline></reference> or
                                        <reference internal="True" refid="property-nearestkeyindex"><inline classes="std std-ref">nearestKeyIndex</inline></reference>.</paragraph>
                                </entry>
                            </row>
                        </tbody>
                    </tgroup>
                </table>
                <paragraph><strong>Returns</strong></paragraph>
                <paragraph>Array of floating-point values:</paragraph>
                <bullet_list bullet="-">
                    <list_item>
                        <paragraph>If the property value type is <literal>PropertyValueType.TwoD_SPATIAL</literal>, the array contains 2 floating-point values.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>If the property value type is <literal>PropertyValueType.ThreeD_SPATIAL</literal>, the array contains 3 floating-point values.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>If the property value type is neither of these types, an exception is generated.</paragraph>
                    </list_item>
                </bullet_list>
                <transition></transition>
                <target refid="property-keyouttemporalease"></target>
            </section>
            <section ids="property-keyouttemporalease id39" names="property.keyouttemporalease() property.keyouttemporalease">
                <title>Property.keyOutTemporalEase()</title>
                <paragraph><literal>app.project.item(index).layer(index).propertySpec.keyOutTemporalEase(keyIndex)</literal></paragraph>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>Returns the outgoing temporal ease for the specified keyframe.</paragraph>
                <paragraph><strong>Parameters</strong></paragraph>
                <table>
                    <tgroup cols="2">
                        <colspec colwidth="12"></colspec>
                        <colspec colwidth="51"></colspec>
                        <tbody>
                            <row>
                                <entry>
                                    <paragraph><literal>keyIndex</literal></paragraph>
                                </entry>
                                <entry>
                                    <paragraph>The index for the keyframe. An integer in the range
                                        <literal>[1..numKeys]</literal>, as returned by the
                                        <reference internal="True" refid="property-addkey"><inline classes="std std-ref">addKey</inline></reference> or
                                        <reference internal="True" refid="property-nearestkeyindex"><inline classes="std std-ref">nearestKeyIndex</inline></reference>.</paragraph>
                                </entry>
                            </row>
                        </tbody>
                    </tgroup>
                </table>
                <paragraph><strong>Returns</strong></paragraph>
                <paragraph>Array of KeyframeEase objects:</paragraph>
                <bullet_list bullet="-">
                    <list_item>
                        <paragraph>If the property value type is <literal>PropertyValueType.TwoD</literal>, the array contains 2 objects.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>If the property value type is <literal>PropertyValueType.ThreeD</literal>, the array contains 3 objects.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>For any other value type, the array contains 1 object.</paragraph>
                    </list_item>
                </bullet_list>
                <transition></transition>
                <target refid="property-keyroving"></target>
            </section>
            <section ids="property-keyroving id40" names="property.keyroving() property.keyroving">
                <title>Property.keyRoving()</title>
                <paragraph><literal>app.project.item(index).layer(index).propertySpec.keyRoving(keyIndex)</literal></paragraph>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>Returns true if the specified keyframe is roving. The first and last keyframe in a property cannot rove; if you try to set roving for one of these, the operation is ignored, and <title_reference>keyRoving()</title_reference> continues to return false. If the property value type is neither <literal>TwoD_SPATIAL</literal> nor <literal>ThreeD_SPATIAL</literal>, an exception is generated.</paragraph>
                <paragraph><strong>Parameters</strong></paragraph>
                <table>
                    <tgroup cols="2">
                        <colspec colwidth="12"></colspec>
                        <colspec colwidth="51"></colspec>
                        <tbody>
                            <row>
                                <entry>
                                    <paragraph><literal>keyIndex</literal></paragraph>
                                </entry>
                                <entry>
                                    <paragraph>The index for the keyframe. An integer in the range
                                        <literal>[1..numKeys]</literal>, as returned by the
                                        <reference internal="True" refid="property-addkey"><inline classes="std std-ref">addKey</inline></reference> or
                                        <reference internal="True" refid="property-nearestkeyindex"><inline classes="std std-ref">nearestKeyIndex</inline></reference>.</paragraph>
                                </entry>
                            </row>
                        </tbody>
                    </tgroup>
                </table>
                <paragraph><strong>Returns</strong></paragraph>
                <paragraph>Boolean.</paragraph>
                <transition></transition>
                <target refid="property-keyselected"></target>
            </section>
            <section ids="property-keyselected id41" names="property.keyselected() property.keyselected">
                <title>Property.keySelected()</title>
                <paragraph><literal>app.project.item(index).layer(index).propertySpec.keySelected(keyIndex)</literal></paragraph>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>Returns true if the specified keyframe is selected.</paragraph>
                <paragraph><strong>Parameters</strong></paragraph>
                <table>
                    <tgroup cols="2">
                        <colspec colwidth="12"></colspec>
                        <colspec colwidth="51"></colspec>
                        <tbody>
                            <row>
                                <entry>
                                    <paragraph><literal>keyIndex</literal></paragraph>
                                </entry>
                                <entry>
                                    <paragraph>The index for the keyframe. An integer in the range
                                        <literal>[1..numKeys]</literal>, as returned by the
                                        <reference internal="True" refid="property-addkey"><inline classes="std std-ref">addKey</inline></reference> or
                                        <reference internal="True" refid="property-nearestkeyindex"><inline classes="std std-ref">nearestKeyIndex</inline></reference>.</paragraph>
                                </entry>
                            </row>
                        </tbody>
                    </tgroup>
                </table>
                <paragraph><strong>Returns</strong></paragraph>
                <paragraph>Boolean.</paragraph>
                <transition></transition>
                <target refid="property-keyspatialautobezier"></target>
            </section>
            <section ids="property-keyspatialautobezier id42" names="property.keyspatialautobezier() property.keyspatialautobezier">
                <title>Property.keySpatialAutoBezier()</title>
                <paragraph><literal>app.project.item(index).layer(index).propertySpec.keySpatialAutoBezier(keyIndex)</literal></paragraph>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>Returns true if the specified keyframe has spatial auto-Bezier interpolation. (This type of interpolation affects this keyframe only if <literal>keySpatialContinuous(keyIndex)</literal> is also true.) If the property value type is neither <literal>TwoD_SPATIAL</literal> nor <literal>ThreeD_SPATIAL</literal>, an exception is generated.</paragraph>
                <paragraph><strong>Parameters</strong></paragraph>
                <table>
                    <tgroup cols="2">
                        <colspec colwidth="12"></colspec>
                        <colspec colwidth="51"></colspec>
                        <tbody>
                            <row>
                                <entry>
                                    <paragraph><literal>keyIndex</literal></paragraph>
                                </entry>
                                <entry>
                                    <paragraph>The index for the keyframe. An integer in the range
                                        <literal>[1..numKeys]</literal>, as returned by the
                                        <reference internal="True" refid="property-addkey"><inline classes="std std-ref">addKey</inline></reference> or
                                        <reference internal="True" refid="property-nearestkeyindex"><inline classes="std std-ref">nearestKeyIndex</inline></reference>.</paragraph>
                                </entry>
                            </row>
                        </tbody>
                    </tgroup>
                </table>
                <paragraph><strong>Returns</strong></paragraph>
                <paragraph>Boolean.</paragraph>
                <transition></transition>
                <target refid="property-keyspatialcontinuous"></target>
            </section>
            <section ids="property-keyspatialcontinuous id43" names="property.keyspatialcontinuous() property.keyspatialcontinuous">
                <title>Property.keySpatialContinuous()</title>
                <paragraph><literal>app.project.item(index).layer(index).propertySpec.keySpatialContinuous(keyIndex)</literal></paragraph>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>Returns true if the specified keyframe has spatial continuity. If the property value type is neither <literal>TwoD_SPATIAL</literal> nor <literal>ThreeD_SPATIAL</literal>, an exception is generated.</paragraph>
                <paragraph><strong>Parameters</strong></paragraph>
                <table>
                    <tgroup cols="2">
                        <colspec colwidth="12"></colspec>
                        <colspec colwidth="51"></colspec>
                        <tbody>
                            <row>
                                <entry>
                                    <paragraph><literal>keyIndex</literal></paragraph>
                                </entry>
                                <entry>
                                    <paragraph>The index for the keyframe. An integer in the range
                                        <literal>[1..numKeys]</literal>, as returned by the
                                        <reference internal="True" refid="property-addkey"><inline classes="std std-ref">addKey</inline></reference> or
                                        <reference internal="True" refid="property-nearestkeyindex"><inline classes="std std-ref">nearestKeyIndex</inline></reference>.</paragraph>
                                </entry>
                            </row>
                        </tbody>
                    </tgroup>
                </table>
                <paragraph><strong>Returns</strong></paragraph>
                <paragraph>Boolean.</paragraph>
                <transition></transition>
                <target refid="property-keytemporalautobezier"></target>
            </section>
            <section ids="property-keytemporalautobezier id44" names="property.keytemporalautobezier() property.keytemporalautobezier">
                <title>Property.keyTemporalAutoBezier()</title>
                <paragraph><literal>app.project.item(index).layer(index).propertySpec.keyTemporalAutoBezier(keyIndex)</literal></paragraph>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>Returns true if the specified keyframe has temporal auto-Bezier interpolation. Temporal auto-Bezier interpolation affects this keyframe only if the keyframe interpolation type is <literal>KeyframeInterpolationType.BEZIER</literal> for both <literal>keyInInterpolationType(keyIndex)</literal> and <literal>keyOutInterpolationType(keyIndex)</literal>.</paragraph>
                <paragraph><strong>Parameters</strong></paragraph>
                <table>
                    <tgroup cols="2">
                        <colspec colwidth="12"></colspec>
                        <colspec colwidth="51"></colspec>
                        <tbody>
                            <row>
                                <entry>
                                    <paragraph><literal>keyIndex</literal></paragraph>
                                </entry>
                                <entry>
                                    <paragraph>The index for the keyframe. An integer in the range
                                        <literal>[1..numKeys]</literal>, as returned by the
                                        <reference internal="True" refid="property-addkey"><inline classes="std std-ref">addKey</inline></reference> or
                                        <reference internal="True" refid="property-nearestkeyindex"><inline classes="std std-ref">nearestKeyIndex</inline></reference>.</paragraph>
                                </entry>
                            </row>
                        </tbody>
                    </tgroup>
                </table>
                <paragraph><strong>Returns</strong></paragraph>
                <paragraph>Boolean.</paragraph>
                <transition></transition>
                <target refid="property-keytemporalcontinuous"></target>
            </section>
            <section ids="property-keytemporalcontinuous id45" names="property.keytemporalcontinuous() property.keytemporalcontinuous">
                <title>Property.keyTemporalContinuous()</title>
                <paragraph><literal>app.project.item(index).layer(index).propertySpec.keyTemporalContinuous(keyIndex)</literal></paragraph>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>Returns true if the specified keyframe has temporal continuity. Temporal continuity affects this keyframe only if keyframe interpolation type is <literal>KeyframeInterpolationType.BEZIER</literal> for both <literal>keyInInterpolationType(keyIndex)</literal> and <literal>keyOutInterpolationType(keyIndex)</literal>.</paragraph>
                <paragraph><strong>Parameters</strong></paragraph>
                <table>
                    <tgroup cols="2">
                        <colspec colwidth="12"></colspec>
                        <colspec colwidth="51"></colspec>
                        <tbody>
                            <row>
                                <entry>
                                    <paragraph><literal>keyIndex</literal></paragraph>
                                </entry>
                                <entry>
                                    <paragraph>The index for the keyframe. An integer in the range
                                        <literal>[1..numKeys]</literal>, as returned by the
                                        <reference internal="True" refid="property-addkey"><inline classes="std std-ref">addKey</inline></reference> or
                                        <reference internal="True" refid="property-nearestkeyindex"><inline classes="std std-ref">nearestKeyIndex</inline></reference>.</paragraph>
                                </entry>
                            </row>
                        </tbody>
                    </tgroup>
                </table>
                <paragraph><strong>Returns</strong></paragraph>
                <paragraph>Boolean.</paragraph>
                <transition></transition>
                <target refid="property-keytime"></target>
            </section>
            <section ids="property-keytime id46" names="property.keytime() property.keytime">
                <title>Property.keyTime()</title>
                <paragraph><literal>app.project.item(index).layer(index).propertySpec.keyTime(keyIndex)</literal>
                    <literal>app.project.item(index).layer(index).propertySpec.keyTime(markerComment)</literal></paragraph>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>Finds the specified keyframe or marker and returns the time at which it occurs. If no keyframe or marker can be found that matches the argument, this method generates an exception, and an error is displayed.</paragraph>
                <paragraph><strong>Parameters</strong></paragraph>
                <table>
                    <tgroup cols="2">
                        <colspec colwidth="17"></colspec>
                        <colspec colwidth="51"></colspec>
                        <tbody>
                            <row>
                                <entry>
                                    <paragraph><literal>keyIndex</literal></paragraph>
                                </entry>
                                <entry>
                                    <paragraph>The index for the keyframe. An integer in the range
                                        <literal>[1..numKeys]</literal>, as returned by the
                                        <reference internal="True" refid="property-addkey"><inline classes="std std-ref">addKey</inline></reference> or
                                        <reference internal="True" refid="property-nearestkeyindex"><inline classes="std std-ref">nearestKeyIndex</inline></reference>.</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph><literal>markerComment</literal></paragraph>
                                </entry>
                                <entry>
                                    <paragraph>The comment string attached to a marker (see
                                        <reference internal="True" refuri="../other/markervalue#markervalue-comment"><inline classes="std std-ref">MarkerValue.comment</inline></reference> attribute).</paragraph>
                                </entry>
                            </row>
                        </tbody>
                    </tgroup>
                </table>
                <paragraph><strong>Returns</strong></paragraph>
                <paragraph>Floating-point value.</paragraph>
                <transition></transition>
                <target refid="property-keyvalue"></target>
            </section>
            <section ids="property-keyvalue id47" names="property.keyvalue() property.keyvalue">
                <title>Property.keyValue()</title>
                <line_block>
                    <line><literal>app.project.item(index).layer(index).propertySpec.keyValue(keyIndex)</literal></line>
                    <line><literal>app.project.item(index).layer(index).propertySpec.keyValue(markerComment)</literal></line>
                </line_block>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>Finds the specified keyframe or marker and returns its current value. If no keyframe or marker can be found that matches the argument, this method generates an exception, and an error is displayed.</paragraph>
                <paragraph><strong>Parameters</strong></paragraph>
                <table>
                    <tgroup cols="2">
                        <colspec colwidth="17"></colspec>
                        <colspec colwidth="51"></colspec>
                        <tbody>
                            <row>
                                <entry>
                                    <paragraph><literal>keyIndex</literal></paragraph>
                                </entry>
                                <entry>
                                    <paragraph>The index for the keyframe. An integer in the range
                                        <literal>[1..numKeys]</literal>, as returned by the
                                        <reference internal="True" refid="property-addkey"><inline classes="std std-ref">addKey</inline></reference> or
                                        <reference internal="True" refid="property-nearestkeyindex"><inline classes="std std-ref">nearestKeyIndex</inline></reference>.</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph><literal>markerComment</literal></paragraph>
                                </entry>
                                <entry>
                                    <paragraph>The comment string attached to a marker (see
                                        <reference internal="True" refuri="../other/markervalue#markervalue-comment"><inline classes="std std-ref">MarkerValue.comment</inline></reference> attribute).</paragraph>
                                </entry>
                            </row>
                        </tbody>
                    </tgroup>
                </table>
                <paragraph><strong>Returns</strong></paragraph>
                <paragraph>Floating-point value for keyframes, MarkerValue object for markers.</paragraph>
                <transition></transition>
                <target refid="property-nearestkeyindex"></target>
            </section>
            <section ids="property-nearestkeyindex id48" names="property.nearestkeyindex() property.nearestkeyindex">
                <title>Property.nearestKeyIndex()</title>
                <paragraph><literal>app.project.item(index).layer(index).propertySpec.nearestKeyIndex(time)</literal></paragraph>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>Returns the index of the keyframe nearest to the specified time.</paragraph>
                <paragraph><strong>Parameters</strong></paragraph>
                <table>
                    <tgroup cols="2">
                        <colspec colwidth="8"></colspec>
                        <colspec colwidth="65"></colspec>
                        <tbody>
                            <row>
                                <entry>
                                    <paragraph><literal>time</literal></paragraph>
                                </entry>
                                <entry>
                                    <paragraph>The time in seconds; a floating-point value. The beginning of the
                                        composition is 0.</paragraph>
                                </entry>
                            </row>
                        </tbody>
                    </tgroup>
                </table>
                <paragraph><strong>Returns</strong></paragraph>
                <paragraph>Integer.</paragraph>
                <transition></transition>
                <target refid="property-removekey"></target>
            </section>
            <section ids="property-removekey id49" names="property.removekey() property.removekey">
                <title>Property.removeKey()</title>
                <paragraph><literal>app.project.item(index).layer(index).propertySpec.removeKey(keyIndex)</literal></paragraph>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>Removes the specified keyframe from the named property. If no keyframe with the specified index exists, generates an exception and displays an error. When a keyframe is removed, the remaining index numbers change. To remove more than one keyframe, you must start with the highest index number and work down to the lowest to ensure that the remaining indices reference the same keyframe after each removal.</paragraph>
                <paragraph><strong>Parameters</strong></paragraph>
                <table>
                    <tgroup cols="2">
                        <colspec colwidth="12"></colspec>
                        <colspec colwidth="51"></colspec>
                        <tbody>
                            <row>
                                <entry>
                                    <paragraph><literal>keyIndex</literal></paragraph>
                                </entry>
                                <entry>
                                    <paragraph>The index for the keyframe. An integer in the range
                                        <literal>[1..numKeys]</literal>, as returned by the
                                        <reference internal="True" refid="property-addkey"><inline classes="std std-ref">addKey</inline></reference> or
                                        <reference internal="True" refid="property-nearestkeyindex"><inline classes="std std-ref">nearestKeyIndex</inline></reference>.</paragraph>
                                </entry>
                            </row>
                        </tbody>
                    </tgroup>
                </table>
                <paragraph><strong>Returns</strong></paragraph>
                <paragraph>Nothing.</paragraph>
                <transition></transition>
                <target refid="property-setalternatesource"></target>
            </section>
            <section ids="property-setalternatesource id50" names="property.setalternatesource() property.setalternatesource">
                <title>Property.setAlternateSource()</title>
                <paragraph><literal>app.project.item(index).layer(index).propertySpec.setAlternateSource(newSource)</literal></paragraph>
                <note>
                    <paragraph>This functionality was added in After Effects 18.0 (2021)</paragraph>
                </note>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>Set the alternate source for this property.</paragraph>
                <paragraph>The Property object and the input parameters for the AVItem that is being called needs to be Media Replacement compatible for the action to go through.</paragraph>
                <bullet_list bullet="-">
                    <list_item>
                        <paragraph>Use the <reference internal="True" refuri="../items/avitem#avitem-ismediareplacementcompatible"><inline classes="std std-ref">AVItem.isMediaReplacementCompatible</inline></reference> method to test whether the AVItem can be used as an alternate source for Media Replacement.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>Use <reference internal="True" refid="property-cansetalternatesource"><inline classes="std std-ref">Property.canSetAlternateSource</inline></reference> to test if the property allows Media Replacement.</paragraph>
                    </list_item>
                </bullet_list>
                <paragraph><strong>Parameters</strong></paragraph>
                <table>
                    <tgroup cols="2">
                        <colspec colwidth="13"></colspec>
                        <colspec colwidth="51"></colspec>
                        <tbody>
                            <row>
                                <entry>
                                    <paragraph><literal>newSource</literal></paragraph>
                                </entry>
                                <entry>
                                    <paragraph>The new source AVItem object. Required.</paragraph>
                                </entry>
                            </row>
                        </tbody>
                    </tgroup>
                </table>
                <paragraph><strong>Returns</strong></paragraph>
                <paragraph>Nothing.</paragraph>
                <transition></transition>
                <target refid="property-setinterpolationtypeatkey"></target>
            </section>
            <section ids="property-setinterpolationtypeatkey id51" names="property.setinterpolationtypeatkey() property.setinterpolationtypeatkey">
                <title>Property.setInterpolationTypeAtKey()</title>
                <paragraph><literal>app.project.item(index).layer(index).propertySpec.setInterpolationTypeAtKey(keyIndex, inType[, outType])</literal></paragraph>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>Sets the <literal>in</literal> and <literal>out</literal> interpolation types for the specified keyframe.</paragraph>
                <paragraph><strong>Parameters</strong></paragraph>
                <table>
                    <tgroup cols="2">
                        <colspec colwidth="13"></colspec>
                        <colspec colwidth="64"></colspec>
                        <tbody>
                            <row>
                                <entry>
                                    <paragraph><literal>keyIndex</literal></paragraph>
                                </entry>
                                <entry>
                                    <paragraph>The index for the keyframe. An integer in the range
                                        <literal>[1..numKeys]</literal>, as returned by the
                                        <reference internal="True" refid="property-addkey"><inline classes="std std-ref">addKey</inline></reference> or
                                        <reference internal="True" refid="property-nearestkeyindex"><inline classes="std std-ref">nearestKeyIndex</inline></reference>.</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph><literal>inType</literal></paragraph>
                                </entry>
                                <entry>
                                    <paragraph>The incoming interpolation type. A <literal>KeyframeInterpolationType</literal>
                                        enumerated value; one of:</paragraph>
                                    <bullet_list bullet="-">
                                        <list_item>
                                            <paragraph><literal>KeyframeInterpolationType.LINEAR</literal></paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal>KeyframeInterpolationType.BEZIER</literal></paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal>KeyframeInterpolationType.HOLD</literal></paragraph>
                                        </list_item>
                                    </bullet_list>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph><literal>outType</literal></paragraph>
                                </entry>
                                <entry>
                                    <paragraph>(Optional) The outgoing interpolation type. If not supplied, the
                                        ‘out’ type is set to the <literal>inType</literal> value. A
                                        <literal>KeyframeInterpolationType</literal> enumerated value; one of:</paragraph>
                                    <bullet_list bullet="-">
                                        <list_item>
                                            <paragraph><literal>KeyframeInterpolationType.LINEAR</literal></paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal>KeyframeInterpolationType.BEZIER</literal></paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal>KeyframeInterpolationType.HOLD</literal></paragraph>
                                        </list_item>
                                    </bullet_list>
                                </entry>
                            </row>
                        </tbody>
                    </tgroup>
                </table>
                <paragraph><strong>Returns</strong></paragraph>
                <paragraph>Nothing.</paragraph>
                <transition></transition>
                <target refid="property-setlabelatkey"></target>
            </section>
            <section ids="property-setlabelatkey id52" names="property.setlabelatkey() property.setlabelatkey">
                <title>Property.setLabelAtKey()</title>
                <paragraph><literal>app.project.item(index).layer(index).propertySpec.setLabelAtKey(keyIndex, labelIndex)</literal></paragraph>
                <note>
                    <paragraph>This functionality was added in After Effects 22.6 (2022)</paragraph>
                </note>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>Set the label color for the keyframe. Colors are represented by their number (0 for None, or 1 to 16 for one of the preset colors in the Labels preferences).</paragraph>
                <paragraph><strong>Parameters</strong></paragraph>
                <table>
                    <tgroup cols="2">
                        <colspec colwidth="14"></colspec>
                        <colspec colwidth="51"></colspec>
                        <tbody>
                            <row>
                                <entry>
                                    <paragraph><literal>keyIndex</literal></paragraph>
                                </entry>
                                <entry>
                                    <paragraph>The index for the keyframe. An integer in the range
                                        <literal>[1..numKeys]</literal>, as returned by the
                                        <reference internal="True" refid="property-addkey"><inline classes="std std-ref">addKey</inline></reference> or
                                        <reference internal="True" refid="property-nearestkeyindex"><inline classes="std std-ref">nearestKeyIndex</inline></reference>.</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph><literal>labelIndex</literal></paragraph>
                                </entry>
                                <entry>
                                    <paragraph>The index for the new label value. An integer in
                                        the range 0-16.</paragraph>
                                </entry>
                            </row>
                        </tbody>
                    </tgroup>
                </table>
                <paragraph><strong>Returns</strong></paragraph>
                <paragraph>Nothing.</paragraph>
                <transition></transition>
                <target refid="property-setpropertyparameters"></target>
            </section>
            <section ids="property-setpropertyparameters id53" names="property.setpropertyparameters() property.setpropertyparameters">
                <title>Property.setPropertyParameters()</title>
                <paragraph><literal>app.project.item(index).layer(index).propertySpec.setPropertyParameters(items)</literal></paragraph>
                <note>
                    <paragraph>This functionality was added in After Effects 17.0.1 (2020)</paragraph>
                </note>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>Sets parameters for a Dropdown Menu Control’s Menu Property. This method will overwrite the existing set of Menu items with the provided array of strings.</paragraph>
                <bullet_list bullet="-">
                    <list_item>
                        <paragraph>The Dropdown Menu Control effect’s Menu property is the only property that allows parameters to be set.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>To check if a property allows parameters to be set, check with <reference internal="True" refid="property-isdropdowneffect"><inline classes="std std-ref">isDropdownEffect</inline></reference> before calling this method.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>An exception is raised whenever this method fails.</paragraph>
                    </list_item>
                </bullet_list>
                <paragraph><strong>Parameters</strong></paragraph>
                <table>
                    <tgroup cols="2">
                        <colspec colwidth="13"></colspec>
                        <colspec colwidth="178"></colspec>
                        <tbody>
                            <row>
                                <entry>
                                    <paragraph><literal>items</literal></paragraph>
                                </entry>
                                <entry>
                                    <paragraph>An array of strings which will replace the existing
                                        menu entries in a Dropdown Menu Control.</paragraph>
                                    <bullet_list bullet="-">
                                        <list_item>
                                            <paragraph>Only strings are allowed.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph>Empty item strings are not allowed.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph>Duplicate item strings are not allowed.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph>The character “|” is not allowed in the item strings.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph>The string “(-” - can be specified as of the item strings. These appear as separator lines in the dropdown menu. The separator lines will claim an index for each of themselves.</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </entry>
                            </row>
                        </tbody>
                    </tgroup>
                </table>
                <note>
                    <paragraph>Item strings should be in ASCII or MultiByte encodable in the current code-page. In other words, the item strings should be provided in the script of the running system. For example: Specifying the item strings in Japanese while running the script on an English system will create a dropdown effect with illegible characters in the item strings.</paragraph>
                </note>
                <paragraph><strong>Example</strong></paragraph>
                <literal_block classes="code javascript" force_highlighting="False" language="javascript" linenos="False" xml:space="preserve"><inline classes="keyword declaration">var</inline> <inline classes="name other">dropdownItems</inline> <inline classes="operator">=</inline> <inline classes="punctuation">[</inline>
    <inline classes="literal string double">"First Item"</inline><inline classes="punctuation">,</inline>
    <inline classes="literal string double">"Second Item"</inline><inline classes="punctuation">,</inline>
    <inline classes="literal string double">"(-"</inline><inline classes="punctuation">,</inline>
    <inline classes="literal string double">"Another Item"</inline><inline classes="punctuation">,</inline>
    <inline classes="literal string double">"Last Item"</inline>
<inline classes="punctuation">];</inline>

<inline classes="keyword declaration">var</inline> <inline classes="name other">dropdownEffect</inline> <inline classes="operator">=</inline> <inline classes="name other">layer</inline><inline classes="punctuation">.</inline><inline classes="name other">property</inline><inline classes="punctuation">(</inline><inline classes="literal string double">"ADBE Effect Parade"</inline><inline classes="punctuation">).</inline><inline classes="name other">addProperty</inline><inline classes="punctuation">(</inline><inline classes="literal string double">"ADBE Dropdown Control"</inline><inline classes="punctuation">);</inline>
<inline classes="name other">dropdownEffect</inline><inline classes="punctuation">.</inline><inline classes="name other">property</inline><inline classes="punctuation">(</inline><inline classes="literal number integer">1</inline><inline classes="punctuation">).</inline><inline classes="name other">setPropertyParameters</inline><inline classes="punctuation">(</inline><inline classes="name other">dropdownItems</inline><inline classes="punctuation">);</inline></literal_block>
                <paragraph><strong>Returns</strong></paragraph>
                <paragraph>Property object, the updated Dropdown Menu Control’s Menu property.</paragraph>
                <transition></transition>
                <target refid="property-setrovingatkey"></target>
            </section>
            <section ids="property-setrovingatkey id54" names="property.setrovingatkey() property.setrovingatkey">
                <title>Property.setRovingAtKey()</title>
                <paragraph><literal>app.project.item(index).layer(index).propertySpec.setRovingAtKey(keyIndex, newVal)</literal></paragraph>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>Turns roving on or off for the specified keyframe. The first and last keyframe in a property cannot rove; if you try to set roving for one of these, the operation is ignored, and <literal>keyRoving()</literal> continues to return false. If the property value type is neither <literal>TwoD_SPATIAL</literal> nor <literal>ThreeD_SPATIAL</literal>, an exception is generated.</paragraph>
                <paragraph><strong>Parameters</strong></paragraph>
                <table>
                    <tgroup cols="2">
                        <colspec colwidth="13"></colspec>
                        <colspec colwidth="51"></colspec>
                        <tbody>
                            <row>
                                <entry>
                                    <paragraph><literal>keyIndex</literal></paragraph>
                                </entry>
                                <entry>
                                    <paragraph>The index for the keyframe. An integer in the range
                                        <literal>[1..numKeys]</literal>, as returned by the
                                        <reference internal="True" refid="property-addkey"><inline classes="std std-ref">addKey</inline></reference> or
                                        <reference internal="True" refid="property-nearestkeyindex"><inline classes="std std-ref">nearestKeyIndex</inline></reference>.</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph><literal>newVal</literal></paragraph>
                                </entry>
                                <entry>
                                    <paragraph>True to turn roving on, false to turn roving off.</paragraph>
                                </entry>
                            </row>
                        </tbody>
                    </tgroup>
                </table>
                <paragraph><strong>Returns</strong></paragraph>
                <paragraph>Nothing.</paragraph>
                <transition></transition>
                <target refid="property-setselectedatkey"></target>
            </section>
            <section ids="property-setselectedatkey id55" names="property.setselectedatkey() property.setselectedatkey">
                <title>Property.setSelectedAtKey()</title>
                <paragraph><literal>app.project.item(index).layer(index).propertySpec.setSelectedAtKey(keyIndex, onOff)</literal></paragraph>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>Selects or deselects the specified keyframe.</paragraph>
                <paragraph><strong>Parameters</strong></paragraph>
                <table>
                    <tgroup cols="2">
                        <colspec colwidth="13"></colspec>
                        <colspec colwidth="51"></colspec>
                        <tbody>
                            <row>
                                <entry>
                                    <paragraph><literal>keyIndex</literal></paragraph>
                                </entry>
                                <entry>
                                    <paragraph>The index for the keyframe. An integer in the range
                                        <literal>[1..numKeys]</literal>, as returned by the
                                        <reference internal="True" refid="property-addkey"><inline classes="std std-ref">addKey</inline></reference> or
                                        <reference internal="True" refid="property-nearestkeyindex"><inline classes="std std-ref">nearestKeyIndex</inline></reference>.</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph><literal>onOff</literal></paragraph>
                                </entry>
                                <entry>
                                    <paragraph>True to select the keyframe, false to deselect it.</paragraph>
                                </entry>
                            </row>
                        </tbody>
                    </tgroup>
                </table>
                <paragraph><strong>Returns</strong></paragraph>
                <paragraph>Nothing.</paragraph>
                <transition></transition>
                <target refid="property-setspatialautobezieratkey"></target>
            </section>
            <section ids="property-setspatialautobezieratkey id56" names="property.setspatialautobezieratkey() property.setspatialautobezieratkey">
                <title>Property.setSpatialAutoBezierAtKey()</title>
                <paragraph><literal>app.project.item(index).layer(index).propertySpec.setSpatialAutoBezierAtKey(keyIndex, newVal)</literal></paragraph>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>Turns spatial auto-Bezier interpolation on or off for the specified keyframe. If the property value type is neither <literal>TwoD_SPATIAL</literal> nor <literal>ThreeD_SPATIAL</literal>, an exception is generated.</paragraph>
                <paragraph><strong>Parameters</strong></paragraph>
                <table>
                    <tgroup cols="2">
                        <colspec colwidth="13"></colspec>
                        <colspec colwidth="58"></colspec>
                        <tbody>
                            <row>
                                <entry>
                                    <paragraph><literal>keyIndex</literal></paragraph>
                                </entry>
                                <entry>
                                    <paragraph>The index for the keyframe. An integer in the range
                                        <literal>[1..numKeys]</literal>, as returned by the
                                        <reference internal="True" refid="property-addkey"><inline classes="std std-ref">addKey</inline></reference> or
                                        <reference internal="True" refid="property-nearestkeyindex"><inline classes="std std-ref">nearestKeyIndex</inline></reference>.</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph><literal>newVal</literal></paragraph>
                                </entry>
                                <entry>
                                    <paragraph>True to turn spatial auto-Bezier on, false to turn it off.</paragraph>
                                </entry>
                            </row>
                        </tbody>
                    </tgroup>
                </table>
                <paragraph><strong>Returns</strong></paragraph>
                <paragraph>Nothing.</paragraph>
                <transition></transition>
                <target refid="property-setspatialcontinuousatkey"></target>
            </section>
            <section ids="property-setspatialcontinuousatkey id57" names="property.setspatialcontinuousatkey() property.setspatialcontinuousatkey">
                <title>Property.setSpatialContinuousAtKey()</title>
                <paragraph><literal>app.project.item(index).layer(index).propertySpec.setSpatialContinuousAtKey(keyIndex, newVal)</literal></paragraph>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>Turns spatial continuity on or off for the specified keyframe. If the property value type is neither <literal>TwoD_SPATIAL</literal> nor <literal>ThreeD_SPATIAL</literal>, an exception is generated.</paragraph>
                <paragraph><strong>Parameters</strong></paragraph>
                <table>
                    <tgroup cols="2">
                        <colspec colwidth="13"></colspec>
                        <colspec colwidth="58"></colspec>
                        <tbody>
                            <row>
                                <entry>
                                    <paragraph><literal>keyIndex</literal></paragraph>
                                </entry>
                                <entry>
                                    <paragraph>The index for the keyframe. An integer in the range
                                        <literal>[1..numKeys]</literal>, as returned by the
                                        <reference internal="True" refid="property-addkey"><inline classes="std std-ref">addKey</inline></reference> or
                                        <reference internal="True" refid="property-nearestkeyindex"><inline classes="std std-ref">nearestKeyIndex</inline></reference>.</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph><literal>newVal</literal></paragraph>
                                </entry>
                                <entry>
                                    <paragraph>True to turn spatial auto-Bezier on, false to turn it off.</paragraph>
                                </entry>
                            </row>
                        </tbody>
                    </tgroup>
                </table>
                <paragraph><strong>Returns</strong></paragraph>
                <paragraph>Nothing.</paragraph>
                <transition></transition>
                <target refid="property-setspatialtangentsatkey"></target>
            </section>
            <section ids="property-setspatialtangentsatkey id58" names="property.setspatialtangentsatkey() property.setspatialtangentsatkey">
                <title>Property.setSpatialTangentsAtKey()</title>
                <paragraph><literal>app.project.item(index).layer(index).propertySpec.setSpatialTangentsAtKey(keyIndex, inTangent[, outTangent])</literal></paragraph>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>Sets the incoming and outgoing tangent vectors for the specified keyframe. If the property value type is neither <literal>TwoD_SPATIAL</literal> nor <literal>ThreeD_SPATIAL</literal>, an exception is generated.</paragraph>
                <paragraph><strong>Parameters</strong></paragraph>
                <table>
                    <tgroup cols="2">
                        <colspec colwidth="15"></colspec>
                        <colspec colwidth="63"></colspec>
                        <tbody>
                            <row>
                                <entry>
                                    <paragraph><literal>keyIndex</literal></paragraph>
                                </entry>
                                <entry>
                                    <paragraph>The index for the keyframe. An integer in the range
                                        <literal>[1..numKeys]</literal>, as returned by the <reference internal="True" refid="property-addkey"><inline classes="std std-ref">addKey</inline></reference> or <reference internal="True" refid="property-nearestkeyindex"><inline classes="std std-ref">nearestKeyIndex()</inline></reference> method.</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph><literal>inTangent</literal></paragraph>
                                </entry>
                                <entry>
                                    <paragraph>The incoming tangent vector. An array of 2 or 3 floating-point
                                        values.</paragraph>
                                    <bullet_list bullet="-">
                                        <list_item>
                                            <paragraph>If the property value type is
                                                <literal>PropertyValueType.TwoD_SPATIAL</literal>, the array contains 2
                                                values.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph>If the property value type is
                                                <literal>PropertyValueType.ThreeD_SPATIAL</literal>, the array contains 3
                                                values.</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph><literal>outTangent</literal></paragraph>
                                </entry>
                                <entry>
                                    <paragraph>(Optional) The outgoing tangent vector. If not supplied, the
                                        <literal>out</literal> tangent is set to the <literal>inTangent</literal> value. An array of
                                        2 or 3 floating-point values.</paragraph>
                                    <bullet_list bullet="-">
                                        <list_item>
                                            <paragraph>If the property value type is
                                                <literal>PropertyValueType.TwoD_SPATIAL</literal>, the array contains 2
                                                values.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph>If the property value type is
                                                <literal>PropertyValueType.ThreeD_SPATIAL</literal>, the array contains 3
                                                values.</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </entry>
                            </row>
                        </tbody>
                    </tgroup>
                </table>
                <paragraph><strong>Returns</strong></paragraph>
                <paragraph>Nothing.</paragraph>
                <transition></transition>
                <target refid="property-settemporalautobezieratkey"></target>
            </section>
            <section ids="property-settemporalautobezieratkey id59" names="property.settemporalautobezieratkey() property.settemporalautobezieratkey">
                <title>Property.setTemporalAutoBezierAtKey()</title>
                <paragraph><literal>app.project.item(index).layer(index).propertySpec.setTemporalAutoBezierAtKey(keyIndex, newVal)</literal></paragraph>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>Turns temporal auto-Bezier interpolation on or off for the specified keyframe. When this is turned on, it affects this keyframe only if <literal>keySpatialContinuous(keyIndex)</literal> is also true.</paragraph>
                <paragraph><strong>Parameters</strong></paragraph>
                <table>
                    <tgroup cols="2">
                        <colspec colwidth="13"></colspec>
                        <colspec colwidth="59"></colspec>
                        <tbody>
                            <row>
                                <entry>
                                    <paragraph><literal>keyIndex</literal></paragraph>
                                </entry>
                                <entry>
                                    <paragraph>The index for the keyframe. An integer in the range
                                        <literal>[1..numKeys]</literal>, as returned by the
                                        <reference internal="True" refid="property-addkey"><inline classes="std std-ref">addKey</inline></reference> or
                                        <reference internal="True" refid="property-nearestkeyindex"><inline classes="std std-ref">nearestKeyIndex</inline></reference>.</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph><literal>newVal</literal></paragraph>
                                </entry>
                                <entry>
                                    <paragraph>True to turn temporal auto-Bezier on, false to turn it off.</paragraph>
                                </entry>
                            </row>
                        </tbody>
                    </tgroup>
                </table>
                <paragraph><strong>Returns</strong></paragraph>
                <paragraph>Nothing.</paragraph>
                <transition></transition>
                <target refid="property-settemporalcontinuousatkey"></target>
            </section>
            <section ids="property-settemporalcontinuousatkey id60" names="property.settemporalcontinuousatkey() property.settemporalcontinuousatkey">
                <title>Property.setTemporalContinuousAtKey()</title>
                <paragraph><literal>app.project.item(index).layer(index).propertySpec.setTemporalContinuousAtKey(keyIndex, newVal)</literal></paragraph>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>Turns temporal continuity on or off for the specified keyframe. When temporal continuity is turned on, it affects this keyframe only if the keyframe interpolation type is <literal>KeyframeInterpolationType.BEZIER</literal> for both <literal>keyInInterpolationType(keyIndex)</literal> and <literal>keyOutInterpolationType(keyIndex)</literal>.</paragraph>
                <paragraph><strong>Parameters</strong></paragraph>
                <table>
                    <tgroup cols="2">
                        <colspec colwidth="13"></colspec>
                        <colspec colwidth="58"></colspec>
                        <tbody>
                            <row>
                                <entry>
                                    <paragraph><literal>keyIndex</literal></paragraph>
                                </entry>
                                <entry>
                                    <paragraph>The index for the keyframe. An integer in the range
                                        <literal>[1..numKeys]</literal>, as returned by the
                                        <reference internal="True" refid="property-addkey"><inline classes="std std-ref">addKey</inline></reference> or
                                        <reference internal="True" refid="property-nearestkeyindex"><inline classes="std std-ref">nearestKeyIndex</inline></reference>.</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph><literal>newVal</literal></paragraph>
                                </entry>
                                <entry>
                                    <paragraph>True to turn temporal continuity on, false to turn it off.</paragraph>
                                </entry>
                            </row>
                        </tbody>
                    </tgroup>
                </table>
                <paragraph><strong>Returns</strong></paragraph>
                <paragraph>Nothing.</paragraph>
                <transition></transition>
                <target refid="property-settemporaleaseatkey"></target>
            </section>
            <section ids="property-settemporaleaseatkey id61" names="property.settemporaleaseatkey() property.settemporaleaseatkey">
                <title>Property.setTemporalEaseAtKey()</title>
                <paragraph><literal>app.project.item(index).layer(index).propertySpec.setTemporalEaseAtKey(keyIndex, inTemporalEase[, outTemporalEase])</literal></paragraph>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>Sets the incoming and outgoing temporal ease for the specified keyframe. See <reference internal="True" refuri="../other/keyframeease#keyframeease"><inline classes="std std-ref">KeyframeEase object</inline></reference>.</paragraph>
                <paragraph><strong>Parameters</strong></paragraph>
                <table>
                    <tgroup cols="2">
                        <colspec colwidth="20"></colspec>
                        <colspec colwidth="58"></colspec>
                        <tbody>
                            <row>
                                <entry>
                                    <paragraph><literal>keyIndex</literal></paragraph>
                                </entry>
                                <entry>
                                    <paragraph>The index for the keyframe. An integer in the range
                                        <literal>[1..numKeys]</literal>, as returned by the
                                        <reference internal="True" refid="property-addkey"><inline classes="std std-ref">addKey</inline></reference> or
                                        <reference internal="True" refid="property-nearestkeyindex"><inline classes="std std-ref">nearestKeyIndex</inline></reference>.</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph><literal>inTemporalEase</literal></paragraph>
                                </entry>
                                <entry>
                                    <paragraph>The incoming temporal ease. An array of 1, 2, or 3
                                        KeyframeEase objects.</paragraph>
                                    <bullet_list bullet="-">
                                        <list_item>
                                            <paragraph>If the property value type is
                                                <literal>PropertyValueType.TwoD</literal>, the array contains 2
                                                objects.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph>If the property value type is
                                                <literal>PropertyValueType.ThreeD</literal>, the array contains 3
                                                objects.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph>For all other value types, the array contains 1 object.</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph><literal>outTemporalEase</literal></paragraph>
                                </entry>
                                <entry>
                                    <paragraph>(Optional) The outgoing temporal ease. If not supplied,
                                        the outgoing ease is set to the <literal>inTemporalEase</literal> value.
                                        An array of 1, 2, or 3 KeyframeEase objects.</paragraph>
                                    <bullet_list bullet="-">
                                        <list_item>
                                            <paragraph>If the property value type is
                                                <literal>PropertyValueType.TwoD</literal>, the array contains 2
                                                objects.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph>If the property value type is
                                                <literal>PropertyValueType.ThreeD</literal>, the array contains 3
                                                objects.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph>For all other value types, the array contains 1 object.</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </entry>
                            </row>
                        </tbody>
                    </tgroup>
                </table>
                <paragraph><strong>Returns</strong></paragraph>
                <paragraph>Nothing.</paragraph>
                <transition></transition>
                <target refid="property-setvalue"></target>
            </section>
            <section ids="property-setvalue id62" names="property.setvalue() property.setvalue">
                <title>Property.setValue()</title>
                <paragraph><literal>app.project.item(index).layer(index).propertySpec.setValue(newValue)</literal></paragraph>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>Sets the static value of a property that has no keyframes. If the named property has keyframes, this method generates an exception and displays an error. To set the value of a property with keyframes, use <reference internal="True" refid="property-setvalueattime"><inline classes="std std-ref">Property.setValueAtTime()</inline></reference> or <reference internal="True" refid="property-setvalueatkey"><inline classes="std std-ref">Property.setValueAtKey()</inline></reference>.</paragraph>
                <paragraph><strong>Parameters</strong></paragraph>
                <table>
                    <tgroup cols="2">
                        <colspec colwidth="13"></colspec>
                        <colspec colwidth="59"></colspec>
                        <tbody>
                            <row>
                                <entry>
                                    <paragraph><literal>newValue</literal></paragraph>
                                </entry>
                                <entry>
                                    <paragraph>A value appropriate for the type of property being set; see
                                        <reference internal="True" refid="property-propertyvaluetype"><inline classes="std std-ref">Property.propertyValueType</inline></reference>.</paragraph>
                                </entry>
                            </row>
                        </tbody>
                    </tgroup>
                </table>
                <paragraph><strong>Returns</strong></paragraph>
                <paragraph>Nothing.</paragraph>
                <transition></transition>
                <target refid="property-setvalueatkey"></target>
            </section>
            <section ids="property-setvalueatkey id63" names="property.setvalueatkey() property.setvalueatkey">
                <title>Property.setValueAtKey()</title>
                <paragraph><literal>app.project.item(index).layer(index).propertySpec.setValueAtKey(keyIndex, newValue)</literal></paragraph>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>Finds the specified keyframe and sets its value. If the named property has no keyframes, or no keyframe with the specified index, this method generates an exception and displays an error.</paragraph>
                <paragraph><strong>Parameters</strong></paragraph>
                <table>
                    <tgroup cols="2">
                        <colspec colwidth="13"></colspec>
                        <colspec colwidth="59"></colspec>
                        <tbody>
                            <row>
                                <entry>
                                    <paragraph><literal>keyIndex</literal></paragraph>
                                </entry>
                                <entry>
                                    <paragraph>The index for the keyframe. An integer in the range
                                        <literal>[1..numKeys]</literal>, as returned by the
                                        <reference internal="True" refid="property-addkey"><inline classes="std std-ref">addKey</inline></reference> or
                                        <reference internal="True" refid="property-nearestkeyindex"><inline classes="std std-ref">nearestKeyIndex</inline></reference>.</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph><literal>newValue</literal></paragraph>
                                </entry>
                                <entry>
                                    <paragraph>A value appropriate for the type of property being set; see
                                        <reference internal="True" refid="property-propertyvaluetype"><inline classes="std std-ref">Property.propertyValueType</inline></reference>.</paragraph>
                                </entry>
                            </row>
                        </tbody>
                    </tgroup>
                </table>
                <paragraph><strong>Returns</strong></paragraph>
                <paragraph>Nothing.</paragraph>
                <transition></transition>
                <target refid="property-setvalueattime"></target>
            </section>
            <section ids="property-setvalueattime id64" names="property.setvalueattime() property.setvalueattime">
                <title>Property.setValueAtTime()</title>
                <paragraph><literal>app.project.item(index).layer(index).propertySpec.setValueAtTime(time, newValue)</literal></paragraph>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>Sets the value of a keyframe at the specified time. Creates a new keyframe for the named property, if one does not currently exist for the specified time, and sets its value.</paragraph>
                <paragraph><strong>Parameters</strong></paragraph>
                <table>
                    <tgroup cols="2">
                        <colspec colwidth="13"></colspec>
                        <colspec colwidth="61"></colspec>
                        <tbody>
                            <row>
                                <entry>
                                    <paragraph><literal>time</literal></paragraph>
                                </entry>
                                <entry>
                                    <paragraph>The time in seconds, a floating-point value. The beginning of
                                        the composition is 0.</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph><literal>newValue</literal></paragraph>
                                </entry>
                                <entry>
                                    <paragraph>A value appropriate for the type of property being set; see
                                        <reference internal="True" refid="property-propertyvaluetype"><inline classes="std std-ref">Property.propertyValueType</inline></reference>.</paragraph>
                                </entry>
                            </row>
                        </tbody>
                    </tgroup>
                </table>
                <paragraph><strong>Returns</strong></paragraph>
                <paragraph>Nothing.</paragraph>
                <transition></transition>
                <target refid="property-setvaluesattimes"></target>
            </section>
            <section ids="property-setvaluesattimes id65" names="property.setvaluesattimes() property.setvaluesattimes">
                <title>Property.setValuesAtTimes()</title>
                <paragraph><literal>app.project.item(index).layer(index).propertySpec.setValuesAtTimes(times, newValues)</literal></paragraph>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>Sets values for a set of keyframes at specified times. Creates a new keyframe for the named property, if one does not currently exist for a specified time, and sets its value. Times and values are expressed as arrays; the arrays must be of the same length.</paragraph>
                <paragraph><strong>Parameters</strong></paragraph>
                <table>
                    <tgroup cols="2">
                        <colspec colwidth="14"></colspec>
                        <colspec colwidth="60"></colspec>
                        <tbody>
                            <row>
                                <entry>
                                    <paragraph><literal>times</literal></paragraph>
                                </entry>
                                <entry>
                                    <paragraph>An array of times, in seconds. Each time is a floating-point
                                        value. The beginning of the composition is 0.</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph><literal>newValues</literal></paragraph>
                                </entry>
                                <entry>
                                    <paragraph>A array of values appropriate for the type of property being
                                        set; see <reference internal="True" refid="property-propertyvaluetype"><inline classes="std std-ref">Property.propertyValueType</inline></reference>.</paragraph>
                                </entry>
                            </row>
                        </tbody>
                    </tgroup>
                </table>
                <paragraph><strong>Returns</strong></paragraph>
                <paragraph>Nothing.</paragraph>
                <transition></transition>
                <target refid="property-valueattime"></target>
            </section>
            <section ids="property-valueattime id66" names="property.valueattime() property.valueattime">
                <title>Property.valueAtTime()</title>
                <paragraph><literal>app.project.item(index).layer(index).propertySpec.valueAtTime(time, preExpression)</literal></paragraph>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>The value of the named property as evaluated at the specified time. Note that the type of value returned is not made explicit; it will be of a different type, depending on the property evaluated.</paragraph>
                <note>
                    <paragraph>As After Effects 13.6, this method now waits for time-intensive expressions, like <literal>sampleImage</literal>, to finish evaluating before it returns the result.</paragraph>
                </note>
                <paragraph><strong>Parameters</strong></paragraph>
                <table>
                    <tgroup cols="2">
                        <colspec colwidth="18"></colspec>
                        <colspec colwidth="60"></colspec>
                        <tbody>
                            <row>
                                <entry>
                                    <paragraph><literal>time</literal></paragraph>
                                </entry>
                                <entry>
                                    <paragraph>The time in seconds; a floating-point value. The beginning
                                        of the composition is 0.</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph><literal>preExpression</literal></paragraph>
                                </entry>
                                <entry>
                                    <paragraph>If the property has an expression and this is true, return
                                        the value for the specified time without applying the
                                        expression to it. When false, return the result of
                                        evaluating the expression for the specified time. Ignored if
                                        the property does not have an associated expression.</paragraph>
                                </entry>
                            </row>
                        </tbody>
                    </tgroup>
                </table>
                <paragraph><strong>Returns</strong></paragraph>
                <paragraph>A value appropriate for the type of the property (see “Property propertyValueType attribute” on page 138).</paragraph>
            </section>
        </section>
    </section>
</document>

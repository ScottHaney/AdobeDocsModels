<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.16 -->
<document source="/home/parallels/Desktop/code/AdobeDocsModels/after-effects-scripting-guide-master/docs/renderqueue/renderqueue.rst">
    <target refid="renderqueue"></target>
    <section ids="renderqueue-object renderqueue" names="renderqueue\ object renderqueue">
        <title>RenderQueue object</title>
        <paragraph><literal>app.project.renderQueue</literal></paragraph>
        <paragraph><strong>Description</strong></paragraph>
        <paragraph>The RenderQueue object represents the render automation process, the data and functionality that is available through the Render Queue panel of a particular After Effects project. Attributes provide access to items in the render queue and their render status. Methods can start, pause, and stop the rendering process. The <reference internal="True" refuri="renderqueueitem#renderqueueitem"><inline classes="std std-ref">RenderQueueItem object</inline></reference> provides access to the specific settings for an item to be rendered.</paragraph>
        <transition></transition>
        <section ids="attributes" names="attributes">
            <title>Attributes</title>
            <target refid="renderqueue-canqueueiname"></target>
            <section dupnames="renderqueue.canqueueiname" ids="renderqueue-canqueueiname id1" names="renderqueue.canqueueiname">
                <title>RenderQueue.canQueueInAME</title>
                <paragraph><literal>app.project.renderQueue.canQueueInAME</literal></paragraph>
                <note>
                    <paragraph>This functionality was added in After Effects 14.0 (CC 2017)</paragraph>
                </note>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>indicates whether or not there are queued render items in the After Effects render queue. Only queued items can be added to the AME queue.</paragraph>
                <paragraph><reference internal="True" refid="renderqueue-queueiname"><inline classes="std std-ref">RenderQueue.queueInAME()</inline></reference></paragraph>
                <paragraph><strong>Type</strong></paragraph>
                <paragraph>Boolean; read-only.</paragraph>
                <transition></transition>
                <target refid="renderqueue-queuenotify"></target>
            </section>
            <section dupnames="renderqueue.queuenotify" ids="renderqueue-queuenotify id2" names="renderqueue.queuenotify">
                <title>RenderQueue.queueNotify</title>
                <paragraph><literal>app.project.renderQueue.queueNotify</literal></paragraph>
                <note>
                    <paragraph>This functionality was added in After Effects 22.0 (2022)</paragraph>
                </note>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>Read or write the <strong>Notify</strong> property for the entire Render Queue.
                    This is exposed in the UI as a checkbox in the lower right corner of the Render Queue panel.</paragraph>
                <paragraph><strong>Type</strong></paragraph>
                <paragraph>Boolean; read/write.</paragraph>
                <transition></transition>
                <target refid="renderqueue-items"></target>
            </section>
            <section dupnames="renderqueue.items" ids="renderqueue-items id3" names="renderqueue.items">
                <title>RenderQueue.items</title>
                <paragraph><literal>app.project.renderQueue.items</literal></paragraph>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>A collection of all items in the render queue. See <reference internal="True" refuri="renderqueueitem#renderqueueitem"><inline classes="std std-ref">RenderQueueItem object</inline></reference>.</paragraph>
                <paragraph><strong>Type</strong></paragraph>
                <paragraph><reference internal="True" refuri="rqitemcollection#rqitemcollection"><inline classes="std std-ref">RQItemCollection object</inline></reference>; read-only.</paragraph>
                <transition></transition>
                <target refid="renderqueue-numitems"></target>
            </section>
            <section dupnames="renderqueue.numitems" ids="renderqueue-numitems id4" names="renderqueue.numitems">
                <title>RenderQueue.numItems</title>
                <paragraph><literal>app.project.renderQueue.numItems</literal></paragraph>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>The total number of items in the render queue.</paragraph>
                <paragraph><strong>Type</strong></paragraph>
                <paragraph>Integer; read-only.</paragraph>
                <transition></transition>
                <target refid="renderqueue-rendering"></target>
            </section>
            <section dupnames="renderqueue.rendering" ids="renderqueue-rendering id5" names="renderqueue.rendering">
                <title>RenderQueue.rendering</title>
                <paragraph><literal>app.project.renderQueue.rendering</literal></paragraph>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>When true, the rendering process is in progress or paused. When false, it is stopped.</paragraph>
                <paragraph><strong>Type</strong></paragraph>
                <paragraph>Boolean; read-only.</paragraph>
            </section>
        </section>
        <transition></transition>
        <section ids="methods" names="methods">
            <title>Methods</title>
            <target refid="renderqueue-item"></target>
            <section ids="renderqueue-item id6" names="renderqueue.item() renderqueue.item">
                <title>RenderQueue.item()</title>
                <paragraph><literal>app.project.renderQueue.item(index)</literal></paragraph>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>Gets a specified item from the ite ms collection.</paragraph>
                <paragraph><strong>Parameters</strong></paragraph>
                <paragraph><literal>index</literal>
                    The position index of the item. An integer in the range <literal>[0..numItems]</literal>.</paragraph>
                <paragraph><strong>Returns</strong></paragraph>
                <paragraph><reference internal="True" refuri="renderqueueitem#renderqueueitem"><inline classes="std std-ref">RenderQueueItem object</inline></reference>.</paragraph>
                <transition></transition>
                <target refid="renderqueue-pauserendering"></target>
            </section>
            <section ids="renderqueue-pauserendering id7" names="renderqueue.pauserendering() renderqueue.pauserendering">
                <title>RenderQueue.pauseRendering()</title>
                <paragraph><literal>app.project.renderQueue.pauseRendering(pause)</literal></paragraph>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>Pauses the current rendering process, or continues a paused rendering process. This is the same as clicking Pause in the Render Queue panel during a render. You can call this method from an <reference internal="True" refuri="renderqueueitem#renderqueueitem-onstatus"><inline classes="std std-ref">RenderQueueItem.onstatus</inline></reference> or <reference internal="True" refuri="../general/application#app-onerror"><inline classes="std std-ref">app.onError</inline></reference> callback.</paragraph>
                <paragraph><strong>Parameters</strong></paragraph>
                <table>
                    <tgroup cols="2">
                        <colspec colwidth="9"></colspec>
                        <colspec colwidth="68"></colspec>
                        <tbody>
                            <row>
                                <entry>
                                    <paragraph><literal>pause</literal></paragraph>
                                </entry>
                                <entry>
                                    <paragraph>True to pause a current render process, false to continue a paused
                                        render.</paragraph>
                                </entry>
                            </row>
                        </tbody>
                    </tgroup>
                </table>
                <paragraph><strong>Returns</strong></paragraph>
                <paragraph>Nothing.</paragraph>
                <transition></transition>
                <target refid="renderqueue-render"></target>
            </section>
            <section ids="renderqueue-render id8" names="renderqueue.render() renderqueue.render">
                <title>RenderQueue.render()</title>
                <paragraph><literal>app.project.renderQueue.render()</literal></paragraph>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>Starts the rendering process. This is the same as clicking Render in the Render Queue panel. The method does not return until the render process is complete. To pause or stop the rendering process, call <reference internal="True" refid="renderqueue-pauserendering"><inline classes="std std-ref">RenderQueue.pauseRendering()</inline></reference> or <reference internal="True" refid="renderqueue-stoprendering"><inline classes="std std-ref">RenderQueue.stopRendering()</inline></reference> from an <literal>onError</literal> or <literal>onstatus</literal> callback.</paragraph>
                <bullet_list bullet="-">
                    <list_item>
                        <paragraph>To respond to errors during the rendering process, define a callback function in <reference internal="True" refuri="../general/application#app-onerror"><inline classes="std std-ref">app.onError</inline></reference>.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>To respond to changes in the status of a particular item while the render is progressing, define a callback function in <reference internal="True" refuri="renderqueueitem#renderqueueitem-onstatus"><inline classes="std std-ref">RenderQueueItem.onstatus</inline></reference> in the associated RenderQueueItem object.</paragraph>
                    </list_item>
                </bullet_list>
                <paragraph><strong>Parameters</strong></paragraph>
                <paragraph>None.</paragraph>
                <paragraph><strong>Returns</strong></paragraph>
                <paragraph>Nothing.</paragraph>
                <transition></transition>
                <target refid="renderqueue-showwindow"></target>
            </section>
            <section ids="renderqueue-showwindow id9" names="renderqueue.showwindow() renderqueue.showwindow">
                <title>RenderQueue.showWindow()</title>
                <paragraph><literal>app.project.renderQueue.showWindow(doShow)</literal></paragraph>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>Shows or hides the Render Queue panel.</paragraph>
                <paragraph><strong>Parameters</strong></paragraph>
                <table>
                    <tgroup cols="2">
                        <colspec colwidth="10"></colspec>
                        <colspec colwidth="61"></colspec>
                        <tbody>
                            <row>
                                <entry>
                                    <paragraph><literal>doShow</literal></paragraph>
                                </entry>
                                <entry>
                                    <paragraph>When true, show the Render Queue panel. When false, hide it.</paragraph>
                                </entry>
                            </row>
                        </tbody>
                    </tgroup>
                </table>
                <paragraph><strong>Returns</strong></paragraph>
                <paragraph>Nothing.</paragraph>
                <transition></transition>
                <target refid="renderqueue-stoprendering"></target>
            </section>
            <section ids="renderqueue-stoprendering id10" names="renderqueue.stoprendering() renderqueue.stoprendering">
                <title>RenderQueue.stopRendering()</title>
                <paragraph><literal>app.project.renderQueue.stopRendering()</literal></paragraph>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>Stops the rendering process. This is the same as clicking Stop in the Render Queue panel during a render. You can call this method from an <reference internal="True" refuri="renderqueueitem#renderqueueitem-onstatus"><inline classes="std std-ref">RenderQueueItem.onstatus</inline></reference> or <reference internal="True" refuri="../general/application#app-onerror"><inline classes="std std-ref">app.onError</inline></reference> callback.</paragraph>
                <paragraph><strong>Parameters</strong></paragraph>
                <paragraph>None.</paragraph>
                <paragraph><strong>Returns</strong></paragraph>
                <paragraph>Nothing.</paragraph>
                <transition></transition>
                <target refid="renderqueue-queueiname"></target>
            </section>
            <section ids="renderqueue-queueiname id11" names="renderqueue.queueiname() renderqueue.queueiname">
                <title>RenderQueue.queueInAME()</title>
                <paragraph><literal>app.project.renderQueue.queueInAME(render_immediately_in_AME)</literal></paragraph>
                <note>
                    <paragraph>This functionality was added in After Effects 14.0 (CC 2017)</paragraph>
                </note>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>Calls the Queue In AME command. This method requires passing a boolean value, telling AME whether to only queue the render items (false) or if AME should also start processing its queue (true).</paragraph>
                <note>
                    <paragraph>This requires Adobe Media Encoder CC 2017 (11.0) or later.</paragraph>
                </note>
                <note>
                    <paragraph>When AME receives the queued items, it applies the most recently used encoding preset. If <literal>render_immediately_in_AME</literal> is set to true, you will not have an opportunity to change the encoding settings.</paragraph>
                </note>
                <paragraph><strong>Parameters</strong></paragraph>
                <table>
                    <tgroup cols="2">
                        <colspec colwidth="29"></colspec>
                        <colspec colwidth="62"></colspec>
                        <tbody>
                            <row>
                                <entry>
                                    <paragraph><literal>render_immediately_in_AME</literal></paragraph>
                                </entry>
                                <entry>
                                    <paragraph>Telling AME whether to only queue the render items (<literal>false</literal>)
                                        or if AME should also start processing its queue (<literal>true</literal>).</paragraph>
                                </entry>
                            </row>
                        </tbody>
                    </tgroup>
                </table>
                <paragraph><strong>Returns</strong></paragraph>
                <paragraph>Nothing.</paragraph>
                <paragraph><strong>Example</strong></paragraph>
                <paragraph>The following sample code checks to see if there are queued items in the render queue, and if so queues them in AME but does not immediately start rendering:</paragraph>
                <literal_block classes="code javascript" force_highlighting="False" language="javascript" linenos="False" xml:space="preserve"><inline classes="comment single">// Scripting support for Queue in AME.
// Requires Adobe Media Encoder 11.0.
</inline><inline classes="keyword">if</inline> <inline classes="punctuation">(</inline><inline classes="name other">app</inline><inline classes="punctuation">.</inline><inline classes="name other">project</inline><inline classes="punctuation">.</inline><inline classes="name other">renderQueue</inline><inline classes="punctuation">.</inline><inline classes="name other">canQueueInAME</inline> <inline classes="operator">===</inline> <inline classes="keyword constant">true</inline><inline classes="punctuation">)</inline> <inline classes="punctuation">{</inline>
    <inline classes="comment single">// Send queued items to AME, but do not start rendering.
</inline>    <inline classes="name other">app</inline><inline classes="punctuation">.</inline><inline classes="name other">project</inline><inline classes="punctuation">.</inline><inline classes="name other">renderQueue</inline><inline classes="punctuation">.</inline><inline classes="name other">queueInAME</inline><inline classes="punctuation">(</inline><inline classes="keyword constant">false</inline><inline classes="punctuation">);</inline>
<inline classes="punctuation">}</inline> <inline classes="keyword">else</inline> <inline classes="punctuation">{</inline>
    <inline classes="name other">alert</inline><inline classes="punctuation">(</inline><inline classes="literal string double">"There are no queued item in the Render Queue."</inline><inline classes="punctuation">);</inline>
<inline classes="punctuation">}</inline></literal_block>
            </section>
        </section>
    </section>
</document>

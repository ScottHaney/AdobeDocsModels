<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.16 -->
<document source="/home/parallels/Desktop/code/AdobeDocsModels/after-effects-scripting-guide-master/docs/other/textdocument.rst">
    <target refid="textdocument"></target>
    <section ids="textdocument-object textdocument" names="textdocument\ object textdocument">
        <title>TextDocument object</title>
        <line_block>
            <line><literal>new TextDocument(docText)</literal></line>
            <line><literal>app.project.item(index).layer(index).property("Source Text").value</literal></line>
        </line_block>
        <paragraph><strong>Description</strong></paragraph>
        <paragraph>The TextDocument object stores a value for a TextLayer’s Source Text property. Create it with the constructor, passing the string to be encapsulated.</paragraph>
        <paragraph><strong>Examples</strong></paragraph>
        <paragraph>This sets a value of some source text and displays an alert showing the new value.</paragraph>
        <literal_block classes="code javascript" force_highlighting="False" language="javascript" linenos="False" xml:space="preserve"><inline classes="keyword declaration">var</inline> <inline classes="name other">myTextDocument</inline> <inline classes="operator">=</inline> <inline classes="keyword">new</inline> <inline classes="name other">TextDocument</inline><inline classes="punctuation">(</inline><inline classes="literal string double">"HappyCake"</inline><inline classes="punctuation">);</inline>
<inline classes="name other">myTextLayer</inline><inline classes="punctuation">.</inline><inline classes="name other">property</inline><inline classes="punctuation">(</inline><inline classes="literal string double">"Source Text"</inline><inline classes="punctuation">).</inline><inline classes="name other">setValue</inline><inline classes="punctuation">(</inline><inline classes="name other">myTextDocument</inline><inline classes="punctuation">);</inline>
<inline classes="name other">alert</inline><inline classes="punctuation">(</inline><inline classes="name other">myTextLayer</inline><inline classes="punctuation">.</inline><inline classes="name other">property</inline><inline classes="punctuation">(</inline><inline classes="literal string double">"Source Text"</inline><inline classes="punctuation">).</inline><inline classes="name other">value</inline><inline classes="punctuation">);</inline></literal_block>
        <paragraph>This sets keyframe values for text that show different words over time</paragraph>
        <literal_block classes="code javascript" force_highlighting="False" language="javascript" linenos="False" xml:space="preserve"><inline classes="keyword declaration">var</inline> <inline classes="name other">textProp</inline> <inline classes="operator">=</inline> <inline classes="name other">myTextLayer</inline><inline classes="punctuation">.</inline><inline classes="name other">property</inline><inline classes="punctuation">(</inline><inline classes="literal string double">"Source Text"</inline><inline classes="punctuation">);</inline>
<inline classes="name other">textProp</inline><inline classes="punctuation">.</inline><inline classes="name other">setValueAtTime</inline><inline classes="punctuation">(</inline><inline classes="literal number integer">0</inline><inline classes="punctuation">,</inline> <inline classes="name other">newTextDocument</inline><inline classes="punctuation">(</inline><inline classes="literal string double">"Happy"</inline><inline classes="punctuation">));</inline>
<inline classes="name other">textProp</inline><inline classes="punctuation">.</inline><inline classes="name other">setValueAtTime</inline><inline classes="punctuation">(</inline><inline classes="literal number float">.33</inline><inline classes="punctuation">,</inline> <inline classes="name other">newTextDocument</inline><inline classes="punctuation">(</inline><inline classes="literal string double">"cake"</inline><inline classes="punctuation">));</inline>
<inline classes="name other">textProp</inline><inline classes="punctuation">.</inline><inline classes="name other">setValueAtTime</inline><inline classes="punctuation">(</inline><inline classes="literal number float">.66</inline><inline classes="punctuation">,</inline> <inline classes="name other">newTextDocument</inline><inline classes="punctuation">(</inline><inline classes="literal string double">"is"</inline><inline classes="punctuation">));</inline>
<inline classes="name other">textProp</inline><inline classes="punctuation">.</inline><inline classes="name other">setValueAtTime</inline><inline classes="punctuation">(</inline><inline classes="literal number integer">1</inline><inline classes="punctuation">,</inline> <inline classes="name other">newTextDocument</inline><inline classes="punctuation">(</inline><inline classes="literal string double">"yummy!"</inline><inline classes="punctuation">));</inline></literal_block>
        <paragraph>This sets various character and paragraph settings for some text</paragraph>
        <literal_block classes="code javascript" force_highlighting="False" language="javascript" linenos="False" xml:space="preserve"><inline classes="keyword declaration">var</inline> <inline classes="name other">textProp</inline> <inline classes="operator">=</inline> <inline classes="name other">myTextLayer</inline><inline classes="punctuation">.</inline><inline classes="name other">property</inline><inline classes="punctuation">(</inline><inline classes="literal string double">"Source Text"</inline><inline classes="punctuation">);</inline>
<inline classes="keyword declaration">var</inline> <inline classes="name other">textDocument</inline> <inline classes="operator">=</inline> <inline classes="name other">textProp</inline><inline classes="punctuation">.</inline><inline classes="name other">value</inline><inline classes="punctuation">;</inline>
<inline classes="name other">myString</inline> <inline classes="operator">=</inline> <inline classes="literal string double">"Happy holidays!"</inline><inline classes="punctuation">;</inline>
<inline classes="name other">textDocument</inline><inline classes="punctuation">.</inline><inline classes="name other">resetCharStyle</inline><inline classes="punctuation">();</inline>
<inline classes="name other">textDocument</inline><inline classes="punctuation">.</inline><inline classes="name other">fontSize</inline> <inline classes="operator">=</inline> <inline classes="literal number integer">60</inline><inline classes="punctuation">;</inline>
<inline classes="name other">textDocument</inline><inline classes="punctuation">.</inline><inline classes="name other">fillColor</inline> <inline classes="operator">=</inline> <inline classes="punctuation">[</inline><inline classes="literal number integer">1</inline><inline classes="punctuation">,</inline> <inline classes="literal number integer">0</inline><inline classes="punctuation">,</inline> <inline classes="literal number integer">0</inline><inline classes="punctuation">];</inline>
<inline classes="name other">textDocument</inline><inline classes="punctuation">.</inline><inline classes="name other">strokeColor</inline> <inline classes="operator">=</inline> <inline classes="punctuation">[</inline><inline classes="literal number integer">0</inline><inline classes="punctuation">,</inline> <inline classes="literal number integer">1</inline><inline classes="punctuation">,</inline> <inline classes="literal number integer">0</inline><inline classes="punctuation">];</inline>
<inline classes="name other">textDocument</inline><inline classes="punctuation">.</inline><inline classes="name other">strokeWidth</inline> <inline classes="operator">=</inline> <inline classes="literal number integer">2</inline><inline classes="punctuation">;</inline>
<inline classes="name other">textDocument</inline><inline classes="punctuation">.</inline><inline classes="name other">font</inline> <inline classes="operator">=</inline> <inline classes="literal string double">"Times New Roman PSMT"</inline><inline classes="punctuation">;</inline>
<inline classes="name other">textDocument</inline><inline classes="punctuation">.</inline><inline classes="name other">strokeOverFill</inline> <inline classes="operator">=</inline> <inline classes="keyword constant">true</inline><inline classes="punctuation">;</inline>
<inline classes="name other">textDocument</inline><inline classes="punctuation">.</inline><inline classes="name other">applyStroke</inline> <inline classes="operator">=</inline> <inline classes="keyword constant">true</inline><inline classes="punctuation">;</inline>
<inline classes="name other">textDocument</inline><inline classes="punctuation">.</inline><inline classes="name other">applyFill</inline> <inline classes="operator">=</inline> <inline classes="keyword constant">true</inline><inline classes="punctuation">;</inline>
<inline classes="name other">textDocument</inline><inline classes="punctuation">.</inline><inline classes="name other">text</inline> <inline classes="operator">=</inline> <inline classes="name other">myString</inline><inline classes="punctuation">;</inline>
<inline classes="name other">textDocument</inline><inline classes="punctuation">.</inline><inline classes="name other">justification</inline> <inline classes="operator">=</inline> <inline classes="name other">ParagraphJustification</inline><inline classes="punctuation">.</inline><inline classes="name other">CENTER_JUSTIFY</inline><inline classes="punctuation">;</inline>
<inline classes="name other">textDocument</inline><inline classes="punctuation">.</inline><inline classes="name other">tracking</inline> <inline classes="operator">=</inline> <inline classes="literal number integer">50</inline><inline classes="punctuation">;</inline>
<inline classes="name other">textProp</inline><inline classes="punctuation">.</inline><inline classes="name other">setValue</inline><inline classes="punctuation">(</inline><inline classes="name other">textDocument</inline><inline classes="punctuation">);</inline></literal_block>
        <transition></transition>
        <section ids="attributes" names="attributes">
            <title>Attributes</title>
            <target refid="textdocument-allcaps"></target>
            <section dupnames="textdocument.allcaps" ids="textdocument-allcaps id1" names="textdocument.allcaps">
                <title>TextDocument.allCaps</title>
                <paragraph><literal>textDocument.allCaps</literal></paragraph>
                <note>
                    <paragraph>This functionality was added in After Effects 13.2 (CC 2014.2)</paragraph>
                </note>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>True if a Text layer has All Caps enabled; otherwise false. To set this value, use <literal>fontCapsOption</literal> added in After Effects 24.0.</paragraph>
                <warning>
                    <paragraph>This value only reflects the first character in the Text layer.</paragraph>
                </warning>
                <paragraph><strong>Type</strong></paragraph>
                <paragraph>Boolean; read-only.</paragraph>
                <transition></transition>
                <target refid="textdocument-applyfill"></target>
            </section>
            <section dupnames="textdocument.applyfill" ids="textdocument-applyfill id2" names="textdocument.applyfill">
                <title>TextDocument.applyFill</title>
                <paragraph><literal>textDocument.applyFill</literal></paragraph>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>When true, the Text layer shows a fill. Access the <literal>fillColor</literal> attribute for the actual color. When false, only a stroke is shown.</paragraph>
                <paragraph><strong>Type</strong></paragraph>
                <paragraph>Boolean; read/write.</paragraph>
                <transition></transition>
                <target refid="textdocument-applystroke"></target>
            </section>
            <section dupnames="textdocument.applystroke" ids="textdocument-applystroke id3" names="textdocument.applystroke">
                <title>TextDocument.applyStroke</title>
                <paragraph><literal>textDocument.applyStroke</literal></paragraph>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>When true, the Text layer shows a stroke. Access the <literal>strokeColor</literal> attribute for the actual color and <literal>strokeWidth</literal> for its thickness. When false, only a fill is shown.</paragraph>
                <paragraph><strong>Type</strong></paragraph>
                <paragraph>Boolean; read/write.</paragraph>
                <transition></transition>
                <target refid="textdocument-autohyphenate"></target>
            </section>
            <section dupnames="textdocument.autohyphenate" ids="textdocument-autohyphenate id4" names="textdocument.autohyphenate">
                <title>TextDocument.autoHyphenate</title>
                <paragraph><literal>textDocument.autoHyphenate</literal></paragraph>
                <note>
                    <paragraph>This functionality was added in After Effects 24.0.</paragraph>
                </note>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>The Text layer’s auto hyphenate paragraph option.</paragraph>
                <paragraph>If this attribute has a mixed value, it will be read as <literal>undefined</literal>.</paragraph>
                <warning>
                    <paragraph>This value reflects all paragraphs in the Text layer.
                        If you change this value, it will set all paragraphs in the Text layer to the specified setting.</paragraph>
                </warning>
                <paragraph><strong>Type</strong></paragraph>
                <paragraph>Boolean; read/write.</paragraph>
                <transition></transition>
                <target refid="textdocument-autoleading"></target>
            </section>
            <section dupnames="textdocument.autoleading" ids="textdocument-autoleading id5" names="textdocument.autoleading">
                <title>TextDocument.autoLeading</title>
                <paragraph><literal>textDocument.autoLeading</literal></paragraph>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>The Text layer’s auto leading character option.</paragraph>
                <paragraph>If this attribute has a mixed value, it will be read as <literal>undefined</literal>.</paragraph>
                <warning>
                    <paragraph>This value reflects all paragraphs in the Text layer.
                        If you change this value, it will set all paragraphs in the Text layer to the specified setting.</paragraph>
                </warning>
                <paragraph><strong>Type</strong></paragraph>
                <paragraph>Boolean; read/write.</paragraph>
                <transition></transition>
                <target refid="textdocument-autokerntype"></target>
            </section>
            <section dupnames="textdocument.autokerntype" ids="textdocument-autokerntype id6" names="textdocument.autokerntype">
                <title>TextDocument.autoKernType</title>
                <paragraph><literal>textDocument.autoKernType</literal></paragraph>
                <note>
                    <paragraph>This functionality was added in After Effects 24.0.</paragraph>
                </note>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>The Text layer’s auto kern type option.</paragraph>
                <warning>
                    <paragraph>This value only reflects the first character in the Text layer.
                        If you change this value, it will set all characters in the Text layer to the specified setting.</paragraph>
                </warning>
                <paragraph><strong>Type</strong></paragraph>
                <paragraph>An <literal>AutoKernType</literal> enumerated value; read/write. One of:</paragraph>
                <bullet_list bullet="-">
                    <list_item>
                        <paragraph><literal>AutoKernType.NO_AUTO_KERN</literal></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><literal>AutoKernType.METRIC_KERN</literal></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><literal>AutoKernType.OPTICAL_KERN</literal></paragraph>
                    </list_item>
                </bullet_list>
                <transition></transition>
                <target refid="textdocument-baselinedirection"></target>
            </section>
            <section dupnames="textdocument.baselinedirection" ids="textdocument-baselinedirection id7" names="textdocument.baselinedirection">
                <title>TextDocument.baselineDirection</title>
                <paragraph><literal>textDocument.baselineDirection</literal></paragraph>
                <note>
                    <paragraph>This functionality was added in After Effects 24.0.</paragraph>
                </note>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>The Text layer’s baseline direction option. This is significant for Japanese language in vertical texts. “BASELINE_VERTICAL_CROSS_STREAM” is also know as Tate-Chu-Yoko.</paragraph>
                <warning>
                    <paragraph>This value only reflects the first character in the Text layer.
                        If you change this value, it will set all characters in the Text layer to the specified setting.</paragraph>
                </warning>
                <paragraph><strong>Type</strong></paragraph>
                <paragraph>A <literal>BaselineDirection</literal> enumerated value; read/write. One of:</paragraph>
                <bullet_list bullet="-">
                    <list_item>
                        <paragraph><literal>BaselineDirection.BASELINE_WITH_STREAM</literal></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><literal>BaselineDirection.BASELINE_VERTICAL_ROTATED</literal></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><literal>BaselineDirection.BASELINE_VERTICAL_CROSS_STREAM</literal></paragraph>
                    </list_item>
                </bullet_list>
                <transition></transition>
                <target refid="textdocument-baselinelocs"></target>
            </section>
            <section dupnames="textdocument.baselinelocs" ids="textdocument-baselinelocs id8" names="textdocument.baselinelocs">
                <title>TextDocument.baselineLocs</title>
                <paragraph><literal>textDocument.baselineLocs</literal></paragraph>
                <note>
                    <paragraph>This functionality was added in After Effects 13.6 (CC 2015)</paragraph>
                </note>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>The baseline (x,y) locations for a Text layer. Line wraps in a paragraph text box are treated as multiple lines.</paragraph>
                <note>
                    <paragraph>If a line has no characters, the x and y values for start and end will be the maximum float value (3.402823466e+38F).</paragraph>
                </note>
                <paragraph><strong>Type</strong></paragraph>
                <paragraph>Array of floating-point values in the form of</paragraph>
                <literal_block classes="code javascript" force_highlighting="False" language="javascript" linenos="False" xml:space="preserve"><inline classes="punctuation">[</inline>
  <inline classes="name other">line0</inline><inline classes="punctuation">.</inline><inline classes="name other">start_x</inline><inline classes="punctuation">,</inline>
  <inline classes="name other">line0</inline><inline classes="punctuation">.</inline><inline classes="name other">start_y</inline><inline classes="punctuation">,</inline>
  <inline classes="name other">line0</inline><inline classes="punctuation">.</inline><inline classes="name other">end_x</inline><inline classes="punctuation">,</inline>
  <inline classes="name other">line0</inline><inline classes="punctuation">.</inline><inline classes="name other">end_y</inline><inline classes="punctuation">,</inline>
  <inline classes="name other">line1</inline><inline classes="punctuation">.</inline><inline classes="name other">start_x</inline><inline classes="punctuation">,</inline>
  <inline classes="name other">line1</inline><inline classes="punctuation">.</inline><inline classes="name other">start_y</inline><inline classes="punctuation">,</inline>
  <inline classes="name other">line1</inline><inline classes="punctuation">.</inline><inline classes="name other">end_x</inline><inline classes="punctuation">,</inline>
  <inline classes="name other">line1</inline><inline classes="punctuation">.</inline><inline classes="name other">end_y</inline><inline classes="punctuation">,</inline>
  <inline classes="punctuation">...</inline>
  <inline classes="name other">lineN</inline><inline classes="operator">-</inline><inline classes="literal number float">1.</inline><inline classes="name other">start_x</inline><inline classes="punctuation">,</inline>
  <inline classes="name other">lineN</inline><inline classes="operator">-</inline><inline classes="literal number float">1.</inline><inline classes="name other">start_y</inline><inline classes="punctuation">,</inline>
  <inline classes="name other">lineN</inline><inline classes="operator">-</inline><inline classes="literal number float">1.</inline><inline classes="name other">end_x</inline><inline classes="punctuation">,</inline>
  <inline classes="name other">lineN</inline><inline classes="operator">-</inline><inline classes="literal number float">1.</inline><inline classes="name other">end_y</inline>
<inline classes="punctuation">]</inline></literal_block>
                <transition></transition>
                <target refid="textdocument-baselineshift"></target>
            </section>
            <section dupnames="textdocument.baselineshift" ids="textdocument-baselineshift id9" names="textdocument.baselineshift">
                <title>TextDocument.baselineShift</title>
                <paragraph><literal>textDocument.baselineShift</literal></paragraph>
                <note>
                    <paragraph>This functionality was added in After Effects 13.2 (CC 2014.2)</paragraph>
                </note>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>This Text layer’s baseline shift in pixels.</paragraph>
                <warning>
                    <paragraph>This value only reflects the first character in the Text layer.
                        If you change this value, it will set all characters in the Text layer to the specified setting.</paragraph>
                </warning>
                <paragraph><strong>Type</strong></paragraph>
                <paragraph>Floating-point value; read-write.</paragraph>
                <transition></transition>
                <target refid="textdocument-boxtext"></target>
            </section>
            <section dupnames="textdocument.boxtext" ids="textdocument-boxtext id10" names="textdocument.boxtext">
                <title>TextDocument.boxText</title>
                <paragraph><literal>textDocument.boxText</literal></paragraph>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>True if a Text layer is a layer of paragraph (bounded) text; otherwise false.</paragraph>
                <paragraph><strong>Type</strong></paragraph>
                <paragraph>Boolean; read-only.</paragraph>
                <transition></transition>
                <target refid="textdocument-boxtextpos"></target>
            </section>
            <section dupnames="textdocument.boxtextpos" ids="textdocument-boxtextpos id11" names="textdocument.boxtextpos">
                <title>TextDocument.boxTextPos</title>
                <paragraph><literal>textDocument.boxTextPos</literal></paragraph>
                <note>
                    <paragraph>This functionality was added in After Effects 13.2 (CC 2014.2)
                        As of After Effects 14 (CC2017), it seems this is also writeable.</paragraph>
                </note>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>The layer coordinates from a paragraph (box) Text layer’s anchor point as a [width, height] array of pixel dimensions.</paragraph>
                <warning>
                    <paragraph>Throws an exception if <literal>boxText</literal> does not return true for the Text layer.</paragraph>
                </warning>
                <paragraph><strong>Type</strong></paragraph>
                <paragraph>Array of ([X,Y]) position coordinates; read/write.</paragraph>
                <paragraph><strong>Example</strong></paragraph>
                <literal_block classes="code javascript" force_highlighting="False" language="javascript" linenos="False" xml:space="preserve"><inline classes="comment single">// For a paragraph Text layer returns [x, y] position from layer anchor point in layer coordinates.
// e.g. approximately [0, -25] with default character panel settings.
</inline><inline classes="keyword declaration">var</inline> <inline classes="name other">boxTextLayerPos</inline> <inline classes="operator">=</inline> <inline classes="name other">myTextLayer</inline><inline classes="punctuation">.</inline><inline classes="name other">sourceText</inline><inline classes="punctuation">.</inline><inline classes="name other">value</inline><inline classes="punctuation">.</inline><inline classes="name other">boxTextPos</inline><inline classes="punctuation">;</inline></literal_block>
                <transition></transition>
                <target refid="textdocument-boxtextsize"></target>
            </section>
            <section dupnames="textdocument.boxtextsize" ids="textdocument-boxtextsize id12" names="textdocument.boxtextsize">
                <title>TextDocument.boxTextSize</title>
                <paragraph><literal>textDocument.boxTextSize</literal></paragraph>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>The size of a paragraph (box) Text layer as a [width, height] array of pixel dimensions.</paragraph>
                <warning>
                    <paragraph>Throws an exception if <literal>boxText</literal> does not return true for the Text layer.</paragraph>
                </warning>
                <paragraph><strong>Type</strong></paragraph>
                <paragraph>Array of two integers (minimum value of 1); read/write.</paragraph>
                <transition></transition>
                <target refid="textdocument-composerengine"></target>
            </section>
            <section dupnames="textdocument.composerengine" ids="textdocument-composerengine id13" names="textdocument.composerengine">
                <title>TextDocument.composerEngine</title>
                <paragraph><literal>textDocument.composerEngine</literal></paragraph>
                <note>
                    <paragraph>This functionality was added in After Effects 24.0.</paragraph>
                </note>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>The Text layer’s paragraph composer engine option. By default new Text layers will use the <literal>ComposerEngine.UNIVERSAL_TYPE_ENGINE</literal>; the other enum value will only be encountered in projects created before the Universal Type Engine engine (formerly known as the South Asian and Middle Eastern engine) became the default in <reference name="After Effects 22.1.1" refuri="https://helpx.adobe.com/after-effects/using/whats-new/2022-1.html">After Effects 22.1.1</reference><target ids="after-effects-22-1-1" names="after\ effects\ 22.1.1" refuri="https://helpx.adobe.com/after-effects/using/whats-new/2022-1.html"></target>.</paragraph>
                <paragraph>If this attribute has a mixed value, it will be read as <literal>undefined</literal>.</paragraph>
                <paragraph>This property is read-write, but an exception will be thrown if any enum value other than <literal>ComposerEngine.UNIVERSAL_TYPE_ENGINE</literal> is written.</paragraph>
                <paragraph>In effect, you can change an older document from <literal>ComposerEngine.LATIN_CJK_ENGINE</literal> to <literal>ComposerEngine.UNIVERSAL_TYPE_ENGINE</literal>, but not the reverse.</paragraph>
                <warning>
                    <paragraph>This value reflects all paragraphs in the Text layer.
                        If you change this value, it will set all paragraphs in the Text layer to the specified setting.</paragraph>
                </warning>
                <paragraph><strong>Type</strong></paragraph>
                <paragraph>A <literal>ComposerEngine</literal> enumerated value; read-write. One of:</paragraph>
                <bullet_list bullet="-">
                    <list_item>
                        <paragraph><literal>ComposerEngine.LATIN_CJK_ENGINE</literal></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><literal>ComposerEngine.UNIVERSAL_TYPE_ENGINE</literal></paragraph>
                    </list_item>
                </bullet_list>
                <transition></transition>
                <target refid="textdocument-digitset"></target>
            </section>
            <section dupnames="textdocument.digitset" ids="textdocument-digitset id14" names="textdocument.digitset">
                <title>TextDocument.digitSet</title>
                <paragraph><literal>textDocument.digitSet</literal></paragraph>
                <note>
                    <paragraph>This functionality was added in After Effects 24.0.</paragraph>
                </note>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>The Text layer’s digit set option.</paragraph>
                <warning>
                    <paragraph>This value only reflects the first character in the Text layer.
                        If you change this value, it will set all characters in the Text layer to the specified setting.</paragraph>
                </warning>
                <paragraph><strong>Type</strong></paragraph>
                <paragraph>A <literal>DigitSet</literal> enumerated value; read/write. One of:</paragraph>
                <bullet_list bullet="-">
                    <list_item>
                        <paragraph><literal>DigitSet.DEFAULT_DIGITS</literal></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><literal>DigitSet.ARABIC_DIGITS</literal></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><literal>DigitSet.HINDI_DIGITS</literal></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><literal>DigitSet.FARSI_DIGITS</literal></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><literal>DigitSet.ARABIC_DIGITS_RTL</literal></paragraph>
                    </list_item>
                </bullet_list>
                <transition></transition>
                <target refid="textdocument-direction"></target>
            </section>
            <section dupnames="textdocument.direction" ids="textdocument-direction id15" names="textdocument.direction">
                <title>TextDocument.direction</title>
                <paragraph><literal>textDocument.direction</literal></paragraph>
                <note>
                    <paragraph>This functionality was added in After Effects 24.0.</paragraph>
                </note>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>The Text layer’s paragraph direction option.</paragraph>
                <paragraph>If this attribute has a mixed value, it will be read as <literal>undefined</literal>.</paragraph>
                <warning>
                    <paragraph>This value reflects all paragraphs in the Text layer.
                        If you change this value, it will set all paragraphs in the Text layer to the specified setting.</paragraph>
                </warning>
                <paragraph><strong>Type</strong></paragraph>
                <paragraph>A <literal>ParagraphDirection</literal> enumerated value; read/write. One of:</paragraph>
                <bullet_list bullet="-">
                    <list_item>
                        <paragraph><literal>ParagraphDirection.DIRECTION_LEFT_TO_RIGHT</literal></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><literal>ParagraphDirection.DIRECTION_RIGHT_TO_LEFT</literal></paragraph>
                    </list_item>
                </bullet_list>
                <transition></transition>
                <target refid="textdocument-endindent"></target>
            </section>
            <section dupnames="textdocument.endindent" ids="textdocument-endindent id16" names="textdocument.endindent">
                <title>TextDocument.endIndent</title>
                <paragraph><literal>textDocument.endIndent</literal></paragraph>
                <note>
                    <paragraph>This functionality was added in After Effects 24.0.</paragraph>
                </note>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>The Text layer’s paragraph end indent option.</paragraph>
                <paragraph>If this attribute has a mixed value, it will be read as <literal>undefined</literal>.</paragraph>
                <warning>
                    <paragraph>This value reflects all paragraphs in the Text layer.
                        If you change this value, it will set all paragraphs in the Text layer to the specified setting.</paragraph>
                </warning>
                <paragraph><strong>Type</strong></paragraph>
                <paragraph>Floating-point value; read/write.</paragraph>
                <transition></transition>
                <target refid="textdocument-everylinecomposer"></target>
            </section>
            <section dupnames="textdocument.everylinecomposer" ids="textdocument-everylinecomposer id17" names="textdocument.everylinecomposer">
                <title>TextDocument.everyLineComposer</title>
                <paragraph><literal>textDocument.everyLineComposer</literal></paragraph>
                <note>
                    <paragraph>This functionality was added in After Effects 24.0.</paragraph>
                </note>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>The Text layer’s Every-Line Composer paragraph option. If set to false, the TextDocument will use the Single-Line Composer.</paragraph>
                <paragraph>If this attribute has a mixed value, it will be read as <literal>undefined</literal>.</paragraph>
                <warning>
                    <paragraph>This value reflects all paragraphs in the Text layer.
                        If you change this value, it will set all paragraphs in the Text layer to the specified setting.</paragraph>
                </warning>
                <paragraph><strong>Type</strong></paragraph>
                <paragraph>Boolean; read/write.</paragraph>
                <transition></transition>
                <target refid="textdocument-fauxbold"></target>
            </section>
            <section dupnames="textdocument.fauxbold" ids="textdocument-fauxbold id18" names="textdocument.fauxbold">
                <title>TextDocument.fauxBold</title>
                <paragraph><literal>textDocument.fauxBold</literal></paragraph>
                <note>
                    <line_block>
                        <line>The read functionality was added in After Effects 13.2 (CC 2014.2).</line>
                        <line>The write functionality was added in After Effects 24.0.</line>
                    </line_block>
                </note>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>True if a Text layer has faux bold enabled; otherwise false.</paragraph>
                <warning>
                    <paragraph>This value only reflects the first character in the Text layer.
                        If you change this value, it will set all characters in the Text layer to the specified setting.</paragraph>
                </warning>
                <paragraph><strong>Type</strong></paragraph>
                <paragraph>Boolean; read/write.</paragraph>
                <paragraph><strong>Example</strong></paragraph>
                <literal_block classes="code javascript" force_highlighting="False" language="javascript" linenos="False" xml:space="preserve"><inline classes="keyword declaration">var</inline> <inline classes="name other">isFauxBold</inline> <inline classes="operator">=</inline> <inline classes="name other">myTextLayer</inline><inline classes="punctuation">.</inline><inline classes="name other">sourceText</inline><inline classes="punctuation">.</inline><inline classes="name other">value</inline><inline classes="punctuation">.</inline><inline classes="name other">fauxBold</inline><inline classes="punctuation">;</inline></literal_block>
                <transition></transition>
                <target refid="textdocument-fauxitalic"></target>
            </section>
            <section dupnames="textdocument.fauxitalic" ids="textdocument-fauxitalic id19" names="textdocument.fauxitalic">
                <title>TextDocument.fauxItalic</title>
                <paragraph><literal>textDocument.fauxItalic</literal></paragraph>
                <note>
                    <line_block>
                        <line>The read functionality was added in After Effects 13.2 (CC 2014.2).</line>
                        <line>The write functionality was added in After Effects 24.0.</line>
                    </line_block>
                </note>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>True if a Text layer has faux italic enabled; otherwise false.</paragraph>
                <warning>
                    <paragraph>This value only reflects the first character in the Text layer.
                        If you change this value, it will set all characters in the Text layer to the specified setting.</paragraph>
                </warning>
                <paragraph><strong>Type</strong></paragraph>
                <paragraph>Boolean; read/write.</paragraph>
                <transition></transition>
                <target refid="textdocument-fillcolor"></target>
            </section>
            <section dupnames="textdocument.fillcolor" ids="textdocument-fillcolor id20" names="textdocument.fillcolor">
                <title>TextDocument.fillColor</title>
                <paragraph><literal>textDocument.fillColor</literal></paragraph>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>The Text layer’s fill color, as an array of <literal>[r, g, b]</literal> floating-point values. For example, in an 8-bpc project, a red value of 255 would be 1.0, and in a 32-bpc project, an overbright blue value can be something like 3.2.</paragraph>
                <paragraph>Throws an exception on read if <literal>applyFill</literal> is not true.</paragraph>
                <paragraph>Setting this value will also set <literal>applyFill</literal> to true across the affected characters.</paragraph>
                <warning>
                    <paragraph>This value only reflects the first character in the Text layer.
                        If you change this value, it will set all characters in the Text layer to the specified setting.</paragraph>
                </warning>
                <paragraph><strong>Type</strong></paragraph>
                <paragraph>Array <literal>[r, g, b]</literal> of floating-point values; read/write.</paragraph>
                <transition></transition>
                <target refid="textdocument-firstlineindent"></target>
            </section>
            <section dupnames="textdocument.firstlineindent" ids="textdocument-firstlineindent id21" names="textdocument.firstlineindent">
                <title>TextDocument.firstLineIndent</title>
                <paragraph><literal>textDocument.firstLineIndent</literal></paragraph>
                <note>
                    <paragraph>This functionality was added in After Effects 24.0.</paragraph>
                </note>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>The Text layer’s paragraph first line indent option.</paragraph>
                <paragraph>If this attribute has a mixed value, it will be read as <literal>undefined</literal>.</paragraph>
                <warning>
                    <paragraph>This value reflects all paragraphs in the Text layer.
                        If you change this value, it will set all paragraphs in the Text layer to the specified setting.</paragraph>
                </warning>
                <paragraph><strong>Type</strong></paragraph>
                <paragraph>Floating-point value; read/write.</paragraph>
                <transition></transition>
                <target refid="textdocument-font"></target>
            </section>
            <section dupnames="textdocument.font" ids="textdocument-font id22" names="textdocument.font">
                <title>TextDocument.font</title>
                <paragraph><literal>textDocument.font</literal></paragraph>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>The Text layer’s font specified by its PostScript name.</paragraph>
                <paragraph>On write, there are very few resrictions on what can be supplied - if the underlying font management system does not have a matching <reference internal="True" refuri="fontobject#fontobject"><inline classes="std std-ref">Font object</inline></reference> instance matching the supplied PostScript name a substitute instance will be created.
                    The Font instance returned in the case of duplicate PostScript names will be the 0th element of the array returned from <reference internal="True" refuri="fontsobject#fontsobject-getfontsbypostscriptname"><inline classes="std std-ref">FontsObject.getFontsByPostScriptName()</inline></reference>.</paragraph>
                <paragraph>You should use the <reference internal="True" refuri="fontobject#fontobject"><inline classes="std std-ref">Font object</inline></reference> property for precise control.</paragraph>
                <warning>
                    <paragraph>This value only reflects the first character in the Text layer.
                        If you change this value, it will set all characters in the Text layer to the specified setting.</paragraph>
                </warning>
                <paragraph><strong>Type</strong></paragraph>
                <paragraph>String; read/write.</paragraph>
                <transition></transition>
                <target refid="textdocument-fontbaselineoption"></target>
            </section>
            <section dupnames="textdocument.fontbaselineoption" ids="textdocument-fontbaselineoption id23" names="textdocument.fontbaselineoption">
                <title>TextDocument.fontBaselineOption</title>
                <paragraph><literal>textDocument.fontBaselineOption</literal></paragraph>
                <note>
                    <paragraph>This functionality was added in After Effects 24.0.</paragraph>
                </note>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>The Text layer’s font baseline option. This is for setting a textDocument to superscript or subscript.</paragraph>
                <warning>
                    <paragraph>This value only reflects the first character in the Text layer.
                        If you change this value, it will set all characters in the Text layer to the specified setting.</paragraph>
                </warning>
                <paragraph><strong>Type</strong></paragraph>
                <paragraph>A <literal>FontBaselineOption</literal> enumerated value; read/write. One of:</paragraph>
                <bullet_list bullet="-">
                    <list_item>
                        <paragraph><literal>FontBaselineOption.FONT_NORMAL_BASELINE</literal></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><literal>FontBaselineOption.FONT_FAUXED_SUPERSCRIPT</literal></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><literal>FontBaselineOption.FONT_FAUXED_SUBSCRIPT</literal></paragraph>
                    </list_item>
                </bullet_list>
                <transition></transition>
                <target refid="textdocument-fontcapsoption"></target>
            </section>
            <section dupnames="textdocument.fontcapsoption" ids="textdocument-fontcapsoption id24" names="textdocument.fontcapsoption">
                <title>TextDocument.fontCapsOption</title>
                <paragraph><literal>textDocument.fontCapsOption</literal></paragraph>
                <note>
                    <paragraph>This functionality was added in After Effects 24.0.</paragraph>
                </note>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>The Text layer’s font caps option.</paragraph>
                <warning>
                    <paragraph>This value only reflects the first character in the Text layer.
                        If you change this value, it will set all characters in the Text layer to the specified setting.</paragraph>
                </warning>
                <paragraph><strong>Type</strong></paragraph>
                <paragraph>A <literal>FontCapsOption</literal> enumerated value; read/write. One of:</paragraph>
                <bullet_list bullet="-">
                    <list_item>
                        <paragraph><literal>FontCapsOption.FONT_NORMAL_CAPS</literal></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><literal>FontCapsOption.FONT_SMALL_CAPS</literal></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><literal>FontCapsOption.FONT_ALL_CAPS</literal></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><literal>FontCapsOption.FONT_ALL_SMALL_CAPS</literal></paragraph>
                    </list_item>
                </bullet_list>
                <transition></transition>
                <target refid="textdocument-fontfamily"></target>
            </section>
            <section dupnames="textdocument.fontfamily" ids="textdocument-fontfamily id25" names="textdocument.fontfamily">
                <title>TextDocument.fontFamily</title>
                <paragraph><literal>textDocument.fontFamily</literal></paragraph>
                <note>
                    <paragraph>This functionality was added in After Effects 13.1 (CC 2014.1)</paragraph>
                </note>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>String with with the name of the font family.</paragraph>
                <warning>
                    <paragraph>This value only reflects the first character in the Text layer.</paragraph>
                </warning>
                <paragraph><strong>Type</strong></paragraph>
                <paragraph>String; read-only.</paragraph>
                <transition></transition>
                <target refid="textdocument-fontlocation"></target>
            </section>
            <section dupnames="textdocument.fontlocation" ids="textdocument-fontlocation id26" names="textdocument.fontlocation">
                <title>TextDocument.fontLocation</title>
                <paragraph><literal>textDocument.fontLocation</literal></paragraph>
                <note>
                    <paragraph>This functionality was added in After Effects 13.1 (CC 2014.1)</paragraph>
                </note>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>Path of font file, providing its location on disk.</paragraph>
                <warning>
                    <paragraph>Not guaranteed to be returned for all font types; return value may be empty string for some kinds of fonts.</paragraph>
                </warning>
                <warning>
                    <paragraph>This value only reflects the first character in the Text layer.</paragraph>
                </warning>
                <paragraph><strong>Type</strong></paragraph>
                <paragraph>String; read-only.</paragraph>
                <transition></transition>
                <target refid="textdocument-fontobject"></target>
            </section>
            <section dupnames="textdocument.fontobject" ids="textdocument-fontobject id27" names="textdocument.fontobject">
                <title>TextDocument.fontObject</title>
                <paragraph><literal>textDocument.fontObject</literal></paragraph>
                <note>
                    <paragraph>This functionality was added in After Effects 24.0.</paragraph>
                </note>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>The Text layer’s <reference internal="True" refuri="fontobject#fontobject"><inline classes="std std-ref">Font object</inline></reference> specified by its PostScript name.</paragraph>
                <warning>
                    <paragraph>This value only reflects the first character in the Text layer.</paragraph>
                </warning>
                <paragraph><strong>Type</strong></paragraph>
                <paragraph><reference internal="True" refuri="fontobject#fontobject"><inline classes="std std-ref">Font object</inline></reference>; read/write.</paragraph>
                <transition></transition>
                <target refid="textdocument-fontsize"></target>
            </section>
            <section dupnames="textdocument.fontsize" ids="textdocument-fontsize id28" names="textdocument.fontsize">
                <title>TextDocument.fontSize</title>
                <paragraph><literal>textDocument.fontSize</literal></paragraph>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>The Text layer’s font size in pixels.</paragraph>
                <warning>
                    <paragraph>This value only reflects the first character in the Text layer.
                        If you change this value, it will set all characters in the Text layer to the specified setting.</paragraph>
                </warning>
                <paragraph><strong>Type</strong></paragraph>
                <paragraph>Floating-point value (0.1 to 1296, inclusive); read/write.</paragraph>
                <transition></transition>
                <target refid="textdocument-fontstyle"></target>
            </section>
            <section dupnames="textdocument.fontstyle" ids="textdocument-fontstyle id29" names="textdocument.fontstyle">
                <title>TextDocument.fontStyle</title>
                <paragraph><literal>textDocument.fontStyle</literal></paragraph>
                <note>
                    <paragraph>This functionality was added in After Effects 13.1 (CC 2014.1)</paragraph>
                </note>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>String with style information, e.g., “bold”, “italic”</paragraph>
                <warning>
                    <paragraph>This value only reflects the first character in the Text layer.</paragraph>
                </warning>
                <paragraph><strong>Type</strong></paragraph>
                <paragraph>String; read-only.</paragraph>
                <transition></transition>
                <target refid="textdocument-hangingroman"></target>
            </section>
            <section dupnames="textdocument.hangingroman" ids="textdocument-hangingroman id30" names="textdocument.hangingroman">
                <title>TextDocument.hangingRoman</title>
                <paragraph><literal>textDocument.hangingRoman</literal></paragraph>
                <note>
                    <paragraph>This functionality was added in After Effects 24.0.</paragraph>
                </note>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>The Text layer’s Roman Hanging Punctuation paragraph option. This is only meaningful to box Text layers—it allows punctuation to fit outside the box rather than flow to the next line.</paragraph>
                <paragraph>If this attribute has a mixed value, it will be read as <literal>undefined</literal>.</paragraph>
                <warning>
                    <paragraph>This value reflects all paragraphs in the Text layer.
                        If you change this value, it will set all paragraphs in the Text layer to the specified setting.</paragraph>
                </warning>
                <paragraph><strong>Type</strong></paragraph>
                <paragraph>Boolean; read/write.</paragraph>
                <transition></transition>
                <target refid="textdocument-horizontalscale"></target>
            </section>
            <section dupnames="textdocument.horizontalscale" ids="textdocument-horizontalscale id31" names="textdocument.horizontalscale">
                <title>TextDocument.horizontalScale</title>
                <paragraph><literal>textDocument.horizontalScale</literal></paragraph>
                <note>
                    <paragraph>This functionality was added in After Effects 13.2 (CC 2014.2)</paragraph>
                </note>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>This Text layer’s horizontal scale in pixels.</paragraph>
                <warning>
                    <paragraph>This value only reflects the first character in the Text layer.
                        If you change this value, it will set all characters in the Text layer to the specified setting.</paragraph>
                </warning>
                <paragraph><strong>Type</strong></paragraph>
                <paragraph>Floating-point value; read-write.</paragraph>
                <paragraph><strong>Example</strong></paragraph>
                <literal_block classes="code javascript" force_highlighting="False" language="javascript" linenos="False" xml:space="preserve"><inline classes="keyword declaration">var</inline> <inline classes="name other">valOfHScale</inline> <inline classes="operator">=</inline> <inline classes="name other">myTextLayer</inline><inline classes="punctuation">.</inline><inline classes="name other">sourceText</inline><inline classes="punctuation">.</inline><inline classes="name other">value</inline><inline classes="punctuation">.</inline><inline classes="name other">horizontalScale</inline><inline classes="punctuation">;</inline></literal_block>
                <transition></transition>
                <target refid="textdocument-justification"></target>
            </section>
            <section dupnames="textdocument.justification" ids="textdocument-justification id32" names="textdocument.justification">
                <title>TextDocument.justification</title>
                <paragraph><literal>textDocument.justification</literal></paragraph>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>The paragraph justification for the Text layer.</paragraph>
                <paragraph><strong>Type</strong></paragraph>
                <paragraph>A <literal>ParagraphJustification</literal> enumerated value; read/write. One of:</paragraph>
                <bullet_list bullet="-">
                    <list_item>
                        <paragraph><literal>ParagraphJustification.LEFT_JUSTIFY</literal></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><literal>ParagraphJustification.RIGHT_JUSTIFY</literal></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><literal>ParagraphJustification.CENTER_JUSTIFY</literal></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><literal>ParagraphJustification.FULL_JUSTIFY_LASTLINE_LEFT</literal></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><literal>ParagraphJustification.FULL_JUSTIFY_LASTLINE_RIGHT</literal></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><literal>ParagraphJustification.FULL_JUSTIFY_LASTLINE_CENTER</literal></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><literal>ParagraphJustification.FULL_JUSTIFY_LASTLINE_FULL</literal></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><literal>ParagraphJustification.MULTIPLE_JUSTIFICATIONS</literal></paragraph>
                    </list_item>
                </bullet_list>
                <paragraph>Text layers with mixed justification values will be read as <literal>ParagraphJustification.MULTIPLE_JUSTIFICATIONS</literal>.</paragraph>
                <paragraph>Setting a TextDocument to use <literal>ParagraphJustification.MULTIPLE_JUSTIFICATIONS</literal> will result in <literal>ParagraphJustification.CENTER_JUSTIFY</literal> instead.</paragraph>
                <warning>
                    <paragraph>This value reflects all paragraphs in the Text layer.
                        If you change this value, it will set all paragraphs in the Text layer to the specified setting.</paragraph>
                </warning>
                <transition></transition>
                <target refid="textdocument-kerning"></target>
            </section>
            <section dupnames="textdocument.kerning" ids="textdocument-kerning id33" names="textdocument.kerning">
                <title>TextDocument.kerning</title>
                <paragraph><literal>textDocument.kerning</literal></paragraph>
                <note>
                    <paragraph>This functionality was added in After Effects 24.0.</paragraph>
                </note>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>The Text layer’s kerning option.</paragraph>
                <paragraph>Returns zero for <literal>AutoKernType.METRIC_KERN</literal> and <literal>AutoKernType.OPTICAL_KERN</literal>.</paragraph>
                <paragraph>Setting this value will also set <literal>AutoKernType.NO_AUTO_KERN</literal> to true across the affected characters.</paragraph>
                <warning>
                    <paragraph>This value only reflects the first character in the Text layer.
                        If you change this value, it will set all characters in the Text layer to the specified setting.</paragraph>
                </warning>
                <paragraph><strong>Type</strong></paragraph>
                <paragraph>Integer value; read/write.</paragraph>
                <transition></transition>
                <target refid="textdocument-leading"></target>
            </section>
            <section dupnames="textdocument.leading" ids="textdocument-leading id34" names="textdocument.leading">
                <title>TextDocument.leading</title>
                <paragraph><literal>textDocument.leading</literal></paragraph>
                <note>
                    <paragraph>This functionality was added in After Effects 14.2 (CC 2017.1)</paragraph>
                </note>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>The Text layer’s spacing between lines.</paragraph>
                <paragraph>Returns zero if <reference internal="True" refid="textdocument-autoleading"><inline classes="std std-ref">TextDocument.autoLeading</inline></reference> is true.</paragraph>
                <paragraph>Setting this value will also set <reference internal="True" refid="textdocument-autoleading"><inline classes="std std-ref">TextDocument.autoLeading</inline></reference> to true across the affected characters.</paragraph>
                <warning>
                    <paragraph>This value only reflects the first character in the Text layer.
                        If you change this value, it will set all characters in the Text layer to the specified setting.</paragraph>
                    <paragraph>The minimum accepted value to set is 0, but this will be silently clipped to 0.01.</paragraph>
                </warning>
                <paragraph><strong>Type</strong></paragraph>
                <paragraph>Floating-point value; read/write.</paragraph>
                <paragraph><strong>Example</strong></paragraph>
                <literal_block classes="code javascript" force_highlighting="False" language="javascript" linenos="False" xml:space="preserve"><inline classes="comment single">// This creates a Text layer and sets the leading to 100
</inline>
<inline classes="keyword declaration">var</inline> <inline classes="name other">composition</inline> <inline classes="operator">=</inline> <inline classes="name other">app</inline><inline classes="punctuation">.</inline><inline classes="name other">project</inline><inline classes="punctuation">.</inline><inline classes="name other">activeItem</inline><inline classes="punctuation">;</inline>
<inline classes="keyword declaration">var</inline> <inline classes="name other">myTextLayer</inline> <inline classes="operator">=</inline> <inline classes="name other">comp</inline><inline classes="punctuation">.</inline><inline classes="name other">layers</inline><inline classes="punctuation">.</inline><inline classes="name other">addText</inline><inline classes="punctuation">(</inline><inline classes="literal string double">"Spring\nSummer\nAutumn\nWinter"</inline><inline classes="punctuation">);</inline>
<inline classes="keyword declaration">var</inline> <inline classes="name other">myTextSource</inline> <inline classes="operator">=</inline> <inline classes="name other">myTextLayer</inline><inline classes="punctuation">.</inline><inline classes="name other">sourceText</inline><inline classes="punctuation">;</inline>
<inline classes="keyword declaration">var</inline> <inline classes="name other">myTextDocument</inline> <inline classes="operator">=</inline> <inline classes="name other">myTextSource</inline><inline classes="punctuation">.</inline><inline classes="name other">value</inline><inline classes="punctuation">;</inline>
<inline classes="name other">myTextDocument</inline><inline classes="punctuation">.</inline><inline classes="name other">leading</inline> <inline classes="operator">=</inline> <inline classes="literal number integer">100</inline><inline classes="punctuation">;</inline>
<inline classes="name other">myTextSource</inline><inline classes="punctuation">.</inline><inline classes="name other">setValue</inline><inline classes="punctuation">(</inline><inline classes="name other">myTextDocument</inline><inline classes="punctuation">);</inline></literal_block>
                <transition></transition>
                <target refid="textdocument-leadingtype"></target>
            </section>
            <section dupnames="textdocument.leadingtype" ids="textdocument-leadingtype id35" names="textdocument.leadingtype">
                <title>TextDocument.leadingType</title>
                <paragraph><literal>textDocument.leadingType</literal></paragraph>
                <note>
                    <paragraph>This functionality was added in After Effects 24.0.</paragraph>
                </note>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>The Text layer’s paragraph leading type option.</paragraph>
                <paragraph>If this attribute has a mixed value, it will be read as <literal>undefined</literal>.</paragraph>
                <warning>
                    <paragraph>This value reflects all paragraphs in the Text layer.
                        If you change this value, it will set all paragraphs in the Text layer to the specified setting.</paragraph>
                </warning>
                <paragraph><strong>Type</strong></paragraph>
                <paragraph>A <literal>LeadingType</literal> enumerated value; read/write. One of:</paragraph>
                <bullet_list bullet="-">
                    <list_item>
                        <paragraph><literal>LeadingType.ROMAN_LEADING_TYPE</literal></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><literal>LeadingType.JAPANESE_LEADING_TYPE</literal></paragraph>
                    </list_item>
                </bullet_list>
                <transition></transition>
                <target refid="textdocument-ligature"></target>
            </section>
            <section dupnames="textdocument.ligature" ids="textdocument-ligature id36" names="textdocument.ligature">
                <title>TextDocument.ligature</title>
                <paragraph><literal>textDocument.ligature</literal></paragraph>
                <note>
                    <paragraph>This functionality was added in After Effects 24.0.</paragraph>
                </note>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>The Text layer’s ligature option.</paragraph>
                <warning>
                    <paragraph>This value only reflects the first character in the Text layer.
                        If you change this value, it will set all characters in the Text layer to the specified setting.</paragraph>
                </warning>
                <paragraph><strong>Type</strong></paragraph>
                <paragraph>Boolean; read/write.</paragraph>
                <transition></transition>
                <target refid="textdocument-linejointype"></target>
            </section>
            <section dupnames="textdocument.linejointype" ids="textdocument-linejointype id37" names="textdocument.linejointype">
                <title>TextDocument.lineJoinType</title>
                <paragraph><literal>textDocument.lineJoinType</literal></paragraph>
                <note>
                    <paragraph>This functionality was added in After Effects 24.0.</paragraph>
                </note>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>The Text layer’s line join type option for Stroke.</paragraph>
                <warning>
                    <paragraph>This value only reflects the first character in the Text layer.
                        If you change this value, it will set all characters in the Text layer to the specified setting.</paragraph>
                </warning>
                <paragraph><strong>Type</strong></paragraph>
                <paragraph>A <literal>LineJoinType</literal> enumerated value; read/write. One of:</paragraph>
                <bullet_list bullet="-">
                    <list_item>
                        <paragraph><literal>LineJoinType.LINE_JOIN_MITER</literal></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><literal>LineJoinType.LINE_JOIN_ROUND</literal></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><literal>LineJoinType.LINE_JOIN_BEVEL</literal></paragraph>
                    </list_item>
                </bullet_list>
                <transition></transition>
                <target refid="textdocument-lineorientation"></target>
            </section>
            <section dupnames="textdocument.lineorientation" ids="textdocument-lineorientation id38" names="textdocument.lineorientation">
                <title>TextDocument.lineOrientation</title>
                <paragraph><literal>textDocument.lineOrientation</literal></paragraph>
                <note>
                    <paragraph>This functionality was added in After Effects (Beta) 24.2 and is subject to change while it remains in Beta.</paragraph>
                </note>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>The Text layer’s line orientation, in general horizontal vs vertical, which affects how all text in the layer is composed.</paragraph>
                <paragraph><strong>Type</strong></paragraph>
                <paragraph>A <literal>LineOrientation</literal> enumerated value; read/write. One of:</paragraph>
                <bullet_list bullet="-">
                    <list_item>
                        <paragraph><literal>LineOrientation.HORIZONTAL</literal></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><literal>LineOrientation.VERTICAL_RIGHT_TO_LEFT</literal></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><literal>LineOrientation.VERTICAL_LEFT_TO_RIGHT</literal></paragraph>
                    </list_item>
                </bullet_list>
                <transition></transition>
                <target refid="textdocument-nobreak"></target>
            </section>
            <section dupnames="textdocument.nobreak" ids="textdocument-nobreak id39" names="textdocument.nobreak">
                <title>TextDocument.noBreak</title>
                <paragraph><literal>textDocument.noBreak</literal></paragraph>
                <note>
                    <paragraph>This functionality was added in After Effects 24.0.</paragraph>
                </note>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>The Text layer’s no break attribute.</paragraph>
                <warning>
                    <paragraph>This value only reflects the first character in the Text layer.
                        If you change this value, it will set all characters in the Text layer to the specified setting.</paragraph>
                </warning>
                <paragraph><strong>Type</strong></paragraph>
                <paragraph>Boolean; read/write.</paragraph>
                <transition></transition>
                <target refid="textdocument-paragraphcount"></target>
            </section>
            <section dupnames="textdocument.paragraphcount" ids="textdocument-paragraphcount id40" names="textdocument.paragraphcount">
                <title>TextDocument.paragraphCount</title>
                <paragraph><literal>textDocument.paragraphCount</literal></paragraph>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>Returns the number of paragraphs in the text layer, always greater than or equal to 1.</paragraph>
                <paragraph><strong>Type</strong></paragraph>
                <paragraph>Number; read-only.</paragraph>
                <transition></transition>
                <target refid="textdocument-pointtext"></target>
            </section>
            <section dupnames="textdocument.pointtext" ids="textdocument-pointtext id41" names="textdocument.pointtext">
                <title>TextDocument.pointText</title>
                <paragraph><literal>textDocument.pointText</literal></paragraph>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>True if a Text layer is a layer of point (unbounded) text; otherwise false.</paragraph>
                <paragraph><strong>Type</strong></paragraph>
                <paragraph>Boolean; read-only.</paragraph>
                <transition></transition>
                <target refid="textdocument-smallcaps"></target>
            </section>
            <section dupnames="textdocument.smallcaps" ids="textdocument-smallcaps id42" names="textdocument.smallcaps">
                <title>TextDocument.smallCaps</title>
                <paragraph><literal>textDocument.smallCaps</literal></paragraph>
                <note>
                    <paragraph>This functionality was added in After Effects 13.2 (CC 2014.2)</paragraph>
                </note>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>True if a Text layer has small caps enabled; otherwise false. To set this value, use <reference internal="True" refid="textdocument-fontcapsoption"><inline classes="std std-ref">TextDocument.fontCapsOption</inline></reference> added in After Effects 24.0.</paragraph>
                <warning>
                    <paragraph>This value only reflects the first character in the Text layer.</paragraph>
                </warning>
                <paragraph><strong>Type</strong></paragraph>
                <paragraph>Boolean; read-only.</paragraph>
                <transition></transition>
                <target refid="textdocument-spaceafter"></target>
            </section>
            <section dupnames="textdocument.spaceafter" ids="textdocument-spaceafter id43" names="textdocument.spaceafter">
                <title>TextDocument.spaceAfter</title>
                <paragraph><literal>textDocument.spaceAfter</literal></paragraph>
                <note>
                    <paragraph>This functionality was added in After Effects 24.0.</paragraph>
                </note>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>The Text layer’s paragraph space after option.</paragraph>
                <paragraph>If this attribute has a mixed value, it will be read as <literal>undefined</literal>.</paragraph>
                <warning>
                    <paragraph>This value reflects all paragraphs in the Text layer.
                        If you change this value, it will set all paragraphs in the Text layer to the specified setting.</paragraph>
                </warning>
                <paragraph><strong>Type</strong></paragraph>
                <paragraph>Floating-point value; read/write.</paragraph>
                <transition></transition>
                <target refid="textdocument-spacebefore"></target>
            </section>
            <section dupnames="textdocument.spacebefore" ids="textdocument-spacebefore id44" names="textdocument.spacebefore">
                <title>TextDocument.spaceBefore</title>
                <paragraph><literal>textDocument.spaceBefore</literal></paragraph>
                <note>
                    <paragraph>This functionality was added in After Effects 24.0.</paragraph>
                </note>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>The Text layer’s paragraph space before option.</paragraph>
                <paragraph>If this attribute has a mixed value, it will be read as <literal>undefined</literal>.</paragraph>
                <warning>
                    <paragraph>This value reflects all paragraphs in the Text layer.
                        If you change this value, it will set all paragraphs in the Text layer to the specified setting.</paragraph>
                </warning>
                <paragraph><strong>Type</strong></paragraph>
                <paragraph>Floating-point value; read/write.</paragraph>
                <transition></transition>
                <target refid="textdocument-startindent"></target>
            </section>
            <section dupnames="textdocument.startindent" ids="textdocument-startindent id45" names="textdocument.startindent">
                <title>TextDocument.startIndent</title>
                <paragraph><literal>textDocument.startIndent</literal></paragraph>
                <note>
                    <paragraph>This functionality was added in After Effects 24.0.</paragraph>
                </note>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>The Text layer’s paragraph start indent option.</paragraph>
                <paragraph>If this attribute has a mixed value, it will be read as <literal>undefined</literal>.</paragraph>
                <warning>
                    <paragraph>This value reflects all paragraphs in the Text layer.
                        If you change this value, it will set all paragraphs in the Text layer to the specified setting.</paragraph>
                </warning>
                <paragraph><strong>Type</strong></paragraph>
                <paragraph>Floating-point value; read/write.</paragraph>
                <transition></transition>
                <target refid="textdocument-strokecolor"></target>
            </section>
            <section dupnames="textdocument.strokecolor" ids="textdocument-strokecolor id46" names="textdocument.strokecolor">
                <title>TextDocument.strokeColor</title>
                <paragraph><literal>textDocument.strokeColor</literal></paragraph>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>The Text layer’s stroke color, as an array of [r, g, b] floating-point values. For example, in an 8-bpc project, a red value of 255 would be 1.0, and in a 32-bpc project, an overbright blue value can be something like 3.2.</paragraph>
                <paragraph>Throws an exception on read if <literal>applyStroke</literal> is not true.</paragraph>
                <paragraph>Setting this value will also set <literal>applyStroke</literal> to true across the affected characters.</paragraph>
                <warning>
                    <paragraph>This value only reflects the first character in the Text layer.
                        If you change this value, it will set all characters in the Text layer to the specified setting.</paragraph>
                </warning>
                <paragraph><strong>Type</strong></paragraph>
                <paragraph>Array [r, g, b] of floating-point values; read/write.</paragraph>
                <transition></transition>
                <target refid="textdocument-strokeoverfill"></target>
            </section>
            <section dupnames="textdocument.strokeoverfill" ids="textdocument-strokeoverfill id47" names="textdocument.strokeoverfill">
                <title>TextDocument.strokeOverFill</title>
                <paragraph><literal>textDocument.strokeOverFill</literal></paragraph>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>Indicates the rendering order for the fill and stroke of a Text layer. When true, the stroke appears over the fill.</paragraph>
                <paragraph>The Text layer can override the per-character attribute setting if the Text layer is set to use All Strokes Over All Fills or All Fills Over All Strokes in the Character Panel. Thus the value returned here might be different than the actual attribute value set on the character. It is possible to set the Fill/Stroke render order via the “Fill &amp; Stroke” property under More Options on the Text layer using <title_reference>TextLayer.text(“ADBE Text More Options”)(“ADBE Text Render Order”)</title_reference>.</paragraph>
                <warning>
                    <paragraph>This value only reflects the first character in the Text layer.
                        If you change this value, it will set all characters in the Text layer to the specified setting.</paragraph>
                </warning>
                <paragraph><strong>Type</strong></paragraph>
                <paragraph>Boolean; read/write.</paragraph>
                <transition></transition>
                <target refid="textdocument-strokewidth"></target>
            </section>
            <section dupnames="textdocument.strokewidth" ids="textdocument-strokewidth id48" names="textdocument.strokewidth">
                <title>TextDocument.strokeWidth</title>
                <paragraph><literal>textDocument.strokeWidth</literal></paragraph>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>The Text layer’s stroke thickness in pixels.</paragraph>
                <warning>
                    <paragraph>This value only reflects the first character in the Text layer.
                        If you change this value, it will set all characters in the Text layer to the specified setting.</paragraph>
                    <paragraph>The minimum accepted value to set is 0, but this will be silently clipped to 0.01.</paragraph>
                </warning>
                <paragraph><strong>Type</strong></paragraph>
                <paragraph>Floating-point value (0 to 1000, inclusive); read/write.</paragraph>
                <transition></transition>
                <target refid="textdocument-subscript"></target>
            </section>
            <section dupnames="textdocument.subscript" ids="textdocument-subscript id49" names="textdocument.subscript">
                <title>TextDocument.subscript</title>
                <paragraph><literal>textDocument.subscript</literal></paragraph>
                <note>
                    <paragraph>This functionality was added in After Effects 13.2 (CC 2014.2)</paragraph>
                </note>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>True if a Text layer has subscript enabled; otherwise false. To set this value, use <reference internal="True" refid="textdocument-fontbaselineoption"><inline classes="std std-ref">TextDocument.fontBaselineOption</inline></reference> added in After Effects 24.0.</paragraph>
                <warning>
                    <paragraph>This value only reflects the first character in the Text layer.</paragraph>
                </warning>
                <paragraph><strong>Type</strong></paragraph>
                <paragraph>Boolean; read-only.</paragraph>
                <transition></transition>
                <target refid="textdocument-superscript"></target>
            </section>
            <section dupnames="textdocument.superscript" ids="textdocument-superscript id50" names="textdocument.superscript">
                <title>TextDocument.superscript</title>
                <paragraph><literal>textDocument.superscript</literal></paragraph>
                <note>
                    <paragraph>This functionality was added in After Effects 13.2 (CC 2014.2)</paragraph>
                </note>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>True if a Text layer has superscript enabled; otherwise false. To set this value, use <reference internal="True" refid="textdocument-fontbaselineoption"><inline classes="std std-ref">TextDocument.fontBaselineOption</inline></reference> added in After Effects 24.0.</paragraph>
                <warning>
                    <paragraph>This value only reflects the first character in the Text layer.</paragraph>
                </warning>
                <paragraph><strong>Type</strong></paragraph>
                <paragraph>Boolean; read-only.</paragraph>
                <transition></transition>
                <target refid="textdocument-text"></target>
            </section>
            <section dupnames="textdocument.text" ids="textdocument-text id51" names="textdocument.text">
                <title>TextDocument.text</title>
                <paragraph><literal>textDocument.text</literal></paragraph>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>The text value for the Text layer’s Source Text property.</paragraph>
                <paragraph><strong>Type</strong></paragraph>
                <paragraph>String; read/write.</paragraph>
                <transition></transition>
                <target refid="textdocument-tracking"></target>
            </section>
            <section dupnames="textdocument.tracking" ids="textdocument-tracking id52" names="textdocument.tracking">
                <title>TextDocument.tracking</title>
                <paragraph><literal>textDocument.tracking</literal></paragraph>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>The Text layer’s spacing between characters.</paragraph>
                <warning>
                    <paragraph>This value only reflects the first character in the Text layer.
                        If you change this value, it will set all characters in the Text layer to the specified setting.</paragraph>
                </warning>
                <paragraph><strong>Type</strong></paragraph>
                <paragraph>Floating-point value; read/write.</paragraph>
                <transition></transition>
                <target refid="textdocument-tsume"></target>
            </section>
            <section dupnames="textdocument.tsume" ids="textdocument-tsume id53" names="textdocument.tsume">
                <title>TextDocument.tsume</title>
                <paragraph><literal>textDocument.tsume</literal></paragraph>
                <note>
                    <paragraph>This functionality was added in After Effects 13.2 (CC 2014.2)</paragraph>
                </note>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>This Text layer’s tsume value as a normalized percentage, from 0.0 -&gt; 1.0.</paragraph>
                <warning>
                    <paragraph>This value only reflects the first character in the Text layer.
                        If you change this value, it will set all characters in the Text layer to the specified setting.</paragraph>
                    <paragraph>This property accepts values from 0.0 -&gt; 100.0, however the value IS expecting a normalized value from 0.0 -&gt; 1.0. Using a value higher than 1.0 will produce unexpected results; AE’s Character Panel will clamp the value at 100%, despite the higher value set by scripting (ie <literal>TextDocument.tsume = 100</literal> _really_ sets a value of 10,000%)</paragraph>
                </warning>
                <paragraph><strong>Type</strong></paragraph>
                <paragraph>Floating-point value; read-write.</paragraph>
                <transition></transition>
                <target refid="textdocument-verticalscale"></target>
            </section>
            <section dupnames="textdocument.verticalscale" ids="textdocument-verticalscale id54" names="textdocument.verticalscale">
                <title>TextDocument.verticalScale</title>
                <paragraph><literal>textDocument.verticalScale</literal></paragraph>
                <note>
                    <paragraph>This functionality was added in After Effects 13.2 (CC 2014.2)</paragraph>
                </note>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>This Text layer’s vertical scale in pixels.</paragraph>
                <warning>
                    <paragraph>This value only reflects the first character in the Text layer.
                        If you change this value, it will set all characters in the Text layer to the specified setting.</paragraph>
                </warning>
                <paragraph><strong>Type</strong></paragraph>
                <paragraph>Floating-point value; read-write.</paragraph>
            </section>
        </section>
        <transition></transition>
        <section ids="methods" names="methods">
            <title>Methods</title>
            <target refid="textdocument-characterrange"></target>
            <section ids="textdocument-characterrange id55" names="textdocument.characterrange() textdocument.characterrange">
                <title>TextDocument.characterRange()</title>
                <paragraph><literal>textDocument.characterRange(characterStart, [signedCharacterEnd])</literal></paragraph>
                <note>
                    <paragraph>This functionality was added in After Effects (Beta) 24.2 and is subject to change while it remains in Beta.</paragraph>
                </note>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>Returns an instance of the Text layer range accessor CharacterRange.</paragraph>
                <paragraph>The instance will remember the parameters passed in the constructor - they remain constant and changes to the <title_reference>TextDocument</title_reference> length may cause the instance to throw exceptions on access until the <title_reference>TextDocument</title_reference> length is changed to a length which makes the range valid again.</paragraph>
                <paragraph>Use toString() to find out what the constructed parameters were.</paragraph>
                <paragraph><strong>Parameters</strong></paragraph>
                <table>
                    <tgroup cols="2">
                        <colspec colwidth="24"></colspec>
                        <colspec colwidth="150"></colspec>
                        <tbody>
                            <row>
                                <entry>
                                    <paragraph><literal>characterStart</literal></paragraph>
                                </entry>
                                <entry>
                                    <paragraph>Unsigned integer. Starts at zero, must be the less
                                        than or equal to the (text) length of the <reference internal="True" refid="textdocument"><inline classes="std std-ref">TextDocument object</inline></reference>.</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph><literal>signedCharacterEnd</literal></paragraph>
                                </entry>
                                <entry>
                                    <line_block>
                                        <line>Optional signed integer. If not specified, will be computed at (characterStart + 1).</line>
                                        <line>If set to -1, then the <reference internal="True" refuri="characterrange#characterrange"><inline classes="std std-ref">CharacterRange object</inline></reference> will dynamically calculate this on access to be equal to the (text) length of the <reference internal="True" refid="textdocument"><inline classes="std std-ref">TextDocument object</inline></reference>.</line>
                                        <line>signedCharacterEnd must be greater than or equal to characterStart, and less than or equal to the (text) length of the <reference internal="True" refid="textdocument"><inline classes="std std-ref">TextDocument object</inline></reference>.</line>
                                    </line_block>
                                </entry>
                            </row>
                        </tbody>
                    </tgroup>
                </table>
                <paragraph>Throws an exception if the parameters would result in an invalid range.</paragraph>
                <paragraph>It is not possible to create a <reference internal="True" refuri="characterrange#characterrange"><inline classes="std std-ref">CharacterRange object</inline></reference> which spans the final carriage return in the <reference internal="True" refid="textdocument"><inline classes="std std-ref">TextDocument object</inline></reference>.</paragraph>
                <paragraph><strong>Returns</strong></paragraph>
                <paragraph>An instance of <reference internal="True" refuri="characterrange#characterrange"><inline classes="std std-ref">CharacterRange object</inline></reference></paragraph>
                <transition></transition>
                <target refid="textdocument-paragraphcharacterindexesat"></target>
            </section>
            <section ids="textdocument-paragraphcharacterindexesat id56" names="textdocument.paragraphcharacterindexesat() textdocument.paragraphcharacterindexesat">
                <title>TextDocument.paragraphCharacterIndexesAt()</title>
                <paragraph><literal>textDocument.paragraphCharacterIndexesAt(characterIndex)</literal></paragraph>
                <note>
                    <paragraph>This functionality was added in After Effects (Beta) 24.2 and is subject to change while it remains in Beta.</paragraph>
                </note>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>Returns the character index bounds of a paragraph in the Text layer.</paragraph>
                <paragraph><strong>Parameters</strong></paragraph>
                <table>
                    <tgroup cols="2">
                        <colspec colwidth="20"></colspec>
                        <colspec colwidth="104"></colspec>
                        <tbody>
                            <row>
                                <entry>
                                    <paragraph><literal>characterIndex</literal></paragraph>
                                </entry>
                                <entry>
                                    <paragraph>Unsigned integer. A text index in the Text layer, which will be mapped to the paragraph it intersects.</paragraph>
                                </entry>
                            </row>
                        </tbody>
                    </tgroup>
                </table>
                <paragraph><strong>Returns</strong></paragraph>
                <paragraph>Generic object;
                    Key <literal>start</literal> will be set to text index of the start of the paragraph (greater than or equal to zero).
                    Key <literal>end</literal> will be set to text index of the end of the paragraph (greater than start, or equal to start if it is the last paragraph).</paragraph>
                <transition></transition>
                <target refid="textdocument-paragraphrange"></target>
            </section>
            <section ids="textdocument-paragraphrange id57" names="textdocument.paragraphrange() textdocument.paragraphrange">
                <title>TextDocument.paragraphRange()</title>
                <paragraph><literal>textDocument.paragraphRange(paragraphIndexStart, [signedParagraphIndexEnd])</literal></paragraph>
                <note>
                    <paragraph>This functionality was added in After Effects (Beta) 24.2 and is subject to change while it remains in Beta.</paragraph>
                </note>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>Returns an instance of the Text layer range accessor ParagraphRange.</paragraph>
                <paragraph>The instance will remember the parameters passed in the constructor - they remain constant and changes to the <title_reference>TextDocument</title_reference> contents may cause the instance to throw exceptions on access until the <title_reference>TextDocument</title_reference> contents are changed which makes the range valid again.</paragraph>
                <paragraph>Use toString() to find out what the constructed parameters were.</paragraph>
                <paragraph><strong>Parameters</strong></paragraph>
                <table>
                    <tgroup cols="2">
                        <colspec colwidth="29"></colspec>
                        <colspec colwidth="147"></colspec>
                        <tbody>
                            <row>
                                <entry>
                                    <paragraph><literal>paragraphIndexStart</literal></paragraph>
                                </entry>
                                <entry>
                                    <paragraph>Unsigned integer. Starts at zero, must be the less than the number of paragraphs in the <reference internal="True" refid="textdocument"><inline classes="std std-ref">TextDocument object</inline></reference>.</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph><literal>signedParagraphIndexEnd</literal></paragraph>
                                </entry>
                                <entry>
                                    <line_block>
                                        <line>Optional signed integer. If not specified, will be computed at (paragraphIndexStart + 1).</line>
                                        <line>If set to -1, then the <reference internal="True" refuri="paragraphrange#paragraphrange"><inline classes="std std-ref">ParagraphRange object</inline></reference> will dynamically calculate this on access to the last paragraph of the <reference internal="True" refid="textdocument"><inline classes="std std-ref">TextDocument object</inline></reference>.</line>
                                        <line>signedParagraphIndexEnd must be greater than paragraphIndexStart, and less than or equal to the number of paragraphs in the <reference internal="True" refid="textdocument"><inline classes="std std-ref">TextDocument object</inline></reference>.</line>
                                    </line_block>
                                </entry>
                            </row>
                        </tbody>
                    </tgroup>
                </table>
                <paragraph>Throws an exception if the parameters would result in an invalid range.</paragraph>
                <paragraph><strong>Returns</strong></paragraph>
                <paragraph>An instance of <reference internal="True" refuri="paragraphrange#paragraphrange"><inline classes="std std-ref">ParagraphRange object</inline></reference></paragraph>
                <transition></transition>
                <target refid="textdocument-resetcharstyle"></target>
            </section>
            <section ids="textdocument-resetcharstyle id58" names="textdocument.resetcharstyle() textdocument.resetcharstyle">
                <title>TextDocument.resetCharStyle()</title>
                <paragraph><literal>textDocument.resetCharStyle()</literal></paragraph>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>Restores all characters in the Text layer to the default text character characteristics in the Character panel.</paragraph>
                <paragraph><strong>Parameters</strong></paragraph>
                <paragraph>None.</paragraph>
                <paragraph><strong>Returns</strong></paragraph>
                <paragraph>Nothing.</paragraph>
                <transition></transition>
                <target refid="textdocument-resetparagraphstyle"></target>
            </section>
            <section ids="textdocument-resetparagraphstyle id59" names="textdocument.resetparagraphstyle() textdocument.resetparagraphstyle">
                <title>TextDocument.resetParagraphStyle()</title>
                <paragraph><literal>textDocument.resetParagraphStyle()</literal></paragraph>
                <paragraph><strong>Description</strong></paragraph>
                <paragraph>Restores all paragraphs in the Text layer to the default text paragraph characteristics in the Paragraph panel.</paragraph>
                <paragraph><strong>Parameters</strong></paragraph>
                <paragraph>None.</paragraph>
                <paragraph><strong>Returns</strong></paragraph>
                <paragraph>Nothing.</paragraph>
            </section>
        </section>
    </section>
</document>
